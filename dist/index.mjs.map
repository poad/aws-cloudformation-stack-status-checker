{"version":3,"file":"index.mjs","mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzxhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxp+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpzqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACniRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzxzlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnlCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClraA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdjMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzpjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5BA;AACA;;;;;;;;ACDA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrhBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvBA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9CA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzzFA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtNA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/CA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACzBA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACjBA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AACA;AACA;AACA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACLA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxCA;;;;;AAKA;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxzlhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtjvtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["../webpack://aws-cloudformation-stack-status-checker/./node_modules/@actions/core/lib/command.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@actions/core/lib/core.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@actions/core/lib/file-command.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@actions/core/lib/utils.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@actions/http-client/auth.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@actions/http-client/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@actions/http-client/proxy.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/CloudFormation.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/CloudFormationClient.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ActivateTypeCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/BatchDescribeTypeConfigurationsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/CancelUpdateStackCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ContinueUpdateRollbackCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/CreateChangeSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/CreateStackCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/CreateStackInstancesCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/CreateStackSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DeactivateTypeCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DeleteChangeSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DeleteStackCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DeleteStackInstancesCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DeleteStackSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DeregisterTypeCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeAccountLimitsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeChangeSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeChangeSetHooksCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribePublisherCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStackDriftDetectionStatusCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStackEventsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStackInstanceCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStackResourceCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStackResourceDriftsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStackResourcesCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStackSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStackSetOperationCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeStacksCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeTypeCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DescribeTypeRegistrationCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DetectStackDriftCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DetectStackResourceDriftCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/DetectStackSetDriftCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/EstimateTemplateCostCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ExecuteChangeSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/GetStackPolicyCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/GetTemplateCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/GetTemplateSummaryCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ImportStacksToStackSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListChangeSetsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListExportsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListImportsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListStackInstancesCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListStackResourcesCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListStackSetOperationResultsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListStackSetOperationsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListStackSetsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListStacksCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListTypeRegistrationsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListTypeVersionsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ListTypesCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/PublishTypeCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/RecordHandlerProgressCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/RegisterPublisherCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/RegisterTypeCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/RollbackStackCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/SetStackPolicyCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/SetTypeConfigurationCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/SetTypeDefaultVersionCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/SignalResourceCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/StopStackSetOperationCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/TestTypeCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/UpdateStackCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/UpdateStackInstancesCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/UpdateStackSetCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/UpdateTerminationProtectionCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/ValidateTemplateCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/commands/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/endpoints.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/models/CloudFormationServiceException.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/models/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/models/models_0.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/DescribeAccountLimitsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/DescribeStackEventsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/DescribeStackResourceDriftsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/DescribeStacksPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/Interfaces.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListChangeSetsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListExportsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListImportsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListStackInstancesPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListStackResourcesPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListStackSetOperationResultsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListStackSetOperationsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListStackSetsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListStacksPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListTypeRegistrationsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListTypeVersionsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/ListTypesPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/pagination/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/protocols/Aws_query.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/runtimeConfig.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/runtimeConfig.shared.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/waitForChangeSetCreateComplete.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/waitForStackCreateComplete.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/waitForStackDeleteComplete.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/waitForStackExists.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/waitForStackImportComplete.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/waitForStackRollbackComplete.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/waitForStackUpdateComplete.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-cloudformation/dist-cjs/waiters/waitForTypeRegistrationComplete.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/SSO.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/SSOClient.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/GetRoleCredentialsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/ListAccountRolesCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/ListAccountsCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/LogoutCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/commands/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/endpoints.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/models/SSOServiceException.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/models/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/models/models_0.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/Interfaces.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/ListAccountRolesPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/ListAccountsPaginator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/pagination/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/protocols/Aws_restJson1.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sso/dist-cjs/runtimeConfig.shared.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/STS.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/STSClient.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleWithSAMLCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/AssumeRoleWithWebIdentityCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/DecodeAuthorizationMessageCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetAccessKeyInfoCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetCallerIdentityCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetFederationTokenCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/GetSessionTokenCommand.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/commands/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/defaultRoleAssumers.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/defaultStsRoleAssumers.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/endpoints.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/models/STSServiceException.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/models/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/models/models_0.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/protocols/Aws_query.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/client-sts/dist-cjs/runtimeConfig.shared.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/resolveCustomEndpointsConfig.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/resolveEndpointsConfig.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/utils/getEndpointFromRegion.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/utils/normalizeBoolean.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/endpointsConfig/utils/normalizeEndpoint.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/config.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/getRealRegion.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/isFipsRegion.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionConfig/resolveRegionConfig.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/PartitionHash.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/RegionHash.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getHostnameFromVariants.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getRegionInfo.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedHostname.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedPartition.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/getResolvedSigningRegion.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/config-resolver/dist-cjs/regionInfo/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/fromEnv.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-env/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/Endpoint.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointConfigOptions.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointMode.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/config/EndpointModeConfigOptions.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/fromContainerMetadata.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/fromInstanceMetadata.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/ImdsCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/RemoteProviderInit.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/httpRequest.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/remoteProvider/retry.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/types.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/utils/getExtendedInstanceMetadataCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/utils/getInstanceMetadataEndpoint.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-imds/dist-cjs/utils/staticStabilityProvider.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/fromIni.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveAssumeRoleCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveCredentialSource.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveProfileData.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveSsoCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveStaticCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-ini/dist-cjs/resolveWebIdentityCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/defaultProvider.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-node/dist-cjs/remoteProvider.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/fromProcess.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/getValidatedProcessCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-process/dist-cjs/resolveProcessCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/fromSSO.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/isSsoProfile.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/resolveSSOCredentials.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/types.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-sso/dist-cjs/validateSsoProfile.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromTokenFile.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/fromWebToken.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/credential-provider-web-identity/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/hash-node/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/is-array-buffer/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-content-length/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-host-header/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-logger/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-logger/dist-cjs/loggerMiddleware.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/AdaptiveRetryStrategy.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/DefaultRateLimiter.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/StandardRetryStrategy.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/config.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/configurations.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/constants.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/defaultRetryQuota.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/delayDecider.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/omitRetryHeadersMiddleware.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/retryDecider.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/retryMiddleware.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-retry/dist-cjs/types.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-sdk-sts/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-serde/dist-cjs/deserializerMiddleware.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-serde/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-serde/dist-cjs/serdePlugin.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-serde/dist-cjs/serializerMiddleware.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-signing/dist-cjs/configurations.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-signing/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-signing/dist-cjs/middleware.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/getSkewCorrectedDate.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/getUpdatedSystemClockOffset.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-signing/dist-cjs/utils/isClockSkewed.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-stack/dist-cjs/MiddlewareStack.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-stack/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/configurations.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/constants.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/middleware-user-agent/dist-cjs/user-agent-middleware.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-config-provider/dist-cjs/configLoader.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromEnv.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromSharedConfigFiles.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-config-provider/dist-cjs/fromStatic.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-config-provider/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/constants.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/get-transformed-headers.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/node-http-handler.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/node-http2-handler.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/set-connection-timeout.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/set-socket-timeout.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/stream-collector/collector.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/stream-collector/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/node-http-handler/dist-cjs/write-request-body.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/property-provider/dist-cjs/ProviderError.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/property-provider/dist-cjs/chain.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/property-provider/dist-cjs/fromStatic.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/property-provider/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/property-provider/dist-cjs/memoize.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpHandler.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpRequest.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/protocol-http/dist-cjs/httpResponse.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/protocol-http/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/protocol-http/dist-cjs/isValidHostname.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/querystring-builder/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/querystring-parser/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/service-error-classification/dist-cjs/constants.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/service-error-classification/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/getHomeDir.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/loadSharedConfigFiles.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/normalizeConfigFile.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/parseIni.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/slurpFile.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/shared-ini-file-loader/dist-cjs/types.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/SignatureV4.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/cloneRequest.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/constants.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/credentialDerivation.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/getCanonicalHeaders.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/getCanonicalQuery.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/getPayloadHash.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/headerUtil.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/moveHeadersToQuery.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/normalizeProvider.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/prepareRequest.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/signature-v4/dist-cjs/utilDate.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/client.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/command.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/constants.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/date-utils.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/defaults-mode.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/emitWarningIfUnsupportedVersion.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/exceptions.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/extended-encode-uri-component.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/get-array-if-single-item.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/get-value-from-text-node.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/lazy-json.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/parse-utils.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/ser-utils.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/smithy-client/dist-cjs/split-every.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/url-parser/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-base64-node/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-body-length-node/dist-cjs/calculateBodyLength.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-body-length-node/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-buffer-from/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-config-provider/dist-cjs/booleanSelector.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-config-provider/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-credentials/dist-cjs/get-master-profile-name.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-credentials/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-credentials/dist-cjs/parse-known-profiles.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/constants.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/defaultsModeConfig.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-defaults-mode-node/dist-cjs/resolveDefaultsModeConfig.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-hex-encoding/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/escape-uri-path.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/escape-uri.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-uri-escape/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-user-agent-node/dist-cjs/is-crt-available.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-utf8-node/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-waiter/dist-cjs/createWaiter.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-waiter/dist-cjs/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-waiter/dist-cjs/poller.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-waiter/dist-cjs/utils/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-waiter/dist-cjs/utils/sleep.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-waiter/dist-cjs/utils/validate.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@aws-sdk/util-waiter/dist-cjs/waiter.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/entities/lib/decode.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/entities/lib/decode_codepoint.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/entities/lib/encode.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/entities/lib/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/json2xml.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/nimndata.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/node2json.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/node2json_str.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/parser.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/util.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/validator.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/xmlNode.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/tslib/tslib.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/tunnel/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/tunnel/lib/tunnel.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/index.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/md5.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/nil.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/parse.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/regex.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/rng.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/sha1.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/stringify.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/v1.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/v3.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/v35.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/v4.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/v5.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/validate.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/uuid/dist/version.js","../webpack://aws-cloudformation-stack-status-checker/./node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"assert\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"buffer\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"child_process\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"crypto\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"events\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"fs\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"http\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"http2\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"https\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"net\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"os\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"path\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"process\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"stream\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"tls\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"url\"","../webpack://aws-cloudformation-stack-status-checker/external node-commonjs \"util\"","../webpack://aws-cloudformation-stack-status-checker/webpack/bootstrap","../webpack://aws-cloudformation-stack-status-checker/webpack/runtime/compat","../webpack://aws-cloudformation-stack-status-checker/./lib/main.mjs"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' +\n                Buffer.from(this.username + ':' + this.password).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] = 'Bearer ' + this.token;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        options.headers['Authorization'] =\n            'Basic ' + Buffer.from('PAT:' + this.token).toString('base64');\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication(response) {\n        return false;\n    }\n    handleAuthentication(httpClient, requestInfo, objs) {\n        return null;\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst pm = require(\"./proxy\");\nlet tunnel;\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return new Promise(async (resolve, reject) => {\n            let output = Buffer.alloc(0);\n            this.message.on('data', (chunk) => {\n                output = Buffer.concat([output, chunk]);\n            });\n            this.message.on('end', () => {\n                resolve(output.toString());\n            });\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    let parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n    }\n    get(requestUrl, additionalHeaders) {\n        return this.request('GET', requestUrl, null, additionalHeaders || {});\n    }\n    del(requestUrl, additionalHeaders) {\n        return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return this.request('POST', requestUrl, data, additionalHeaders || {});\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return this.request('PUT', requestUrl, data, additionalHeaders || {});\n    }\n    head(requestUrl, additionalHeaders) {\n        return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return this.request(verb, requestUrl, stream, additionalHeaders);\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    async getJson(requestUrl, additionalHeaders = {}) {\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        let res = await this.get(requestUrl, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async postJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.post(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async putJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.put(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    async patchJson(requestUrl, obj, additionalHeaders = {}) {\n        let data = JSON.stringify(obj, null, 2);\n        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n        let res = await this.patch(requestUrl, data, additionalHeaders);\n        return this._processResponse(res, this.requestOptions);\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    async request(verb, requestUrl, data, headers) {\n        if (this._disposed) {\n            throw new Error('Client has already been disposed.');\n        }\n        let parsedUrl = new URL(requestUrl);\n        let info = this._prepareRequest(verb, parsedUrl, headers);\n        // Only perform retries on reads since writes may not be idempotent.\n        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1\n            ? this._maxRetries + 1\n            : 1;\n        let numTries = 0;\n        let response;\n        while (numTries < maxTries) {\n            response = await this.requestRaw(info, data);\n            // Check if it's an authentication challenge\n            if (response &&\n                response.message &&\n                response.message.statusCode === HttpCodes.Unauthorized) {\n                let authenticationHandler;\n                for (let i = 0; i < this.handlers.length; i++) {\n                    if (this.handlers[i].canHandleAuthentication(response)) {\n                        authenticationHandler = this.handlers[i];\n                        break;\n                    }\n                }\n                if (authenticationHandler) {\n                    return authenticationHandler.handleAuthentication(this, info, data);\n                }\n                else {\n                    // We have received an unauthorized response but have no handlers to handle it.\n                    // Let the response return to the caller.\n                    return response;\n                }\n            }\n            let redirectsRemaining = this._maxRedirects;\n            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&\n                this._allowRedirects &&\n                redirectsRemaining > 0) {\n                const redirectUrl = response.message.headers['location'];\n                if (!redirectUrl) {\n                    // if there's no location to redirect to, we won't\n                    break;\n                }\n                let parsedRedirectUrl = new URL(redirectUrl);\n                if (parsedUrl.protocol == 'https:' &&\n                    parsedUrl.protocol != parsedRedirectUrl.protocol &&\n                    !this._allowRedirectDowngrade) {\n                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                }\n                // we need to finish reading the response before reassigning response\n                // which will leak the open socket.\n                await response.readBody();\n                // strip authorization header if redirected to a different hostname\n                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                    for (let header in headers) {\n                        // header names are case insensitive\n                        if (header.toLowerCase() === 'authorization') {\n                            delete headers[header];\n                        }\n                    }\n                }\n                // let's make the request with the new redirectUrl\n                info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                response = await this.requestRaw(info, data);\n                redirectsRemaining--;\n            }\n            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {\n                // If not a retry code, return immediately instead of retrying\n                return response;\n            }\n            numTries += 1;\n            if (numTries < maxTries) {\n                await response.readBody();\n                await this._performExponentialBackoff(numTries);\n            }\n        }\n        return response;\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return new Promise((resolve, reject) => {\n            let callbackForResult = function (err, res) {\n                if (err) {\n                    reject(err);\n                }\n                resolve(res);\n            };\n            this.requestRawWithCallback(info, data, callbackForResult);\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        let socket;\n        if (typeof data === 'string') {\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        let handleResult = (err, res) => {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        };\n        let req = info.httpModule.request(info.options, (msg) => {\n            let res = new HttpClientResponse(msg);\n            handleResult(null, res);\n        });\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error('Request timeout: ' + info.options.path), null);\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err, null);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        let parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            this.handlers.forEach(handler => {\n                handler.prepareRequest(info.options);\n            });\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        let proxyUrl = pm.getProxyUrl(parsedUrl);\n        let useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (!!agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (!!this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        if (useProxy) {\n            // If using proxy, need tunnel\n            if (!tunnel) {\n                tunnel = require('tunnel');\n            }\n            const agentOptions = {\n                maxSockets: maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: {\n                    ...((proxyUrl.username || proxyUrl.password) && {\n                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                    }),\n                    host: proxyUrl.hostname,\n                    port: proxyUrl.port\n                }\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n        return new Promise(resolve => setTimeout(() => resolve(), ms));\n    }\n    static dateTimeDeserializer(key, value) {\n        if (typeof value === 'string') {\n            let a = new Date(value);\n            if (!isNaN(a.valueOf())) {\n                return a;\n            }\n        }\n        return value;\n    }\n    async _processResponse(res, options) {\n        return new Promise(async (resolve, reject) => {\n            const statusCode = res.message.statusCode;\n            const response = {\n                statusCode: statusCode,\n                result: null,\n                headers: {}\n            };\n            // not found leads to null obj returned\n            if (statusCode == HttpCodes.NotFound) {\n                resolve(response);\n            }\n            let obj;\n            let contents;\n            // get the result from the body\n            try {\n                contents = await res.readBody();\n                if (contents && contents.length > 0) {\n                    if (options && options.deserializeDates) {\n                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);\n                    }\n                    else {\n                        obj = JSON.parse(contents);\n                    }\n                    response.result = obj;\n                }\n                response.headers = res.message.headers;\n            }\n            catch (err) {\n                // Invalid resource (contents not json);  leaving result obj null\n            }\n            // note that 3xx redirects are handled by the http layer.\n            if (statusCode > 299) {\n                let msg;\n                // if exception/error in body, attempt to get better error\n                if (obj && obj.message) {\n                    msg = obj.message;\n                }\n                else if (contents && contents.length > 0) {\n                    // it may be the case that the exception is in the body message as string\n                    msg = contents;\n                }\n                else {\n                    msg = 'Failed request: (' + statusCode + ')';\n                }\n                let err = new HttpClientError(msg, statusCode);\n                err.result = response.result;\n                reject(err);\n            }\n            else {\n                resolve(response);\n            }\n        });\n    }\n}\nexports.HttpClient = HttpClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getProxyUrl(reqUrl) {\n    let usingSsl = reqUrl.protocol === 'https:';\n    let proxyUrl;\n    if (checkBypass(reqUrl)) {\n        return proxyUrl;\n    }\n    let proxyVar;\n    if (usingSsl) {\n        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n    }\n    else {\n        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];\n    }\n    if (proxyVar) {\n        proxyUrl = new URL(proxyVar);\n    }\n    return proxyUrl;\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    let upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (let upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFormation = void 0;\nconst CloudFormationClient_1 = require(\"./CloudFormationClient\");\nconst ActivateTypeCommand_1 = require(\"./commands/ActivateTypeCommand\");\nconst BatchDescribeTypeConfigurationsCommand_1 = require(\"./commands/BatchDescribeTypeConfigurationsCommand\");\nconst CancelUpdateStackCommand_1 = require(\"./commands/CancelUpdateStackCommand\");\nconst ContinueUpdateRollbackCommand_1 = require(\"./commands/ContinueUpdateRollbackCommand\");\nconst CreateChangeSetCommand_1 = require(\"./commands/CreateChangeSetCommand\");\nconst CreateStackCommand_1 = require(\"./commands/CreateStackCommand\");\nconst CreateStackInstancesCommand_1 = require(\"./commands/CreateStackInstancesCommand\");\nconst CreateStackSetCommand_1 = require(\"./commands/CreateStackSetCommand\");\nconst DeactivateTypeCommand_1 = require(\"./commands/DeactivateTypeCommand\");\nconst DeleteChangeSetCommand_1 = require(\"./commands/DeleteChangeSetCommand\");\nconst DeleteStackCommand_1 = require(\"./commands/DeleteStackCommand\");\nconst DeleteStackInstancesCommand_1 = require(\"./commands/DeleteStackInstancesCommand\");\nconst DeleteStackSetCommand_1 = require(\"./commands/DeleteStackSetCommand\");\nconst DeregisterTypeCommand_1 = require(\"./commands/DeregisterTypeCommand\");\nconst DescribeAccountLimitsCommand_1 = require(\"./commands/DescribeAccountLimitsCommand\");\nconst DescribeChangeSetCommand_1 = require(\"./commands/DescribeChangeSetCommand\");\nconst DescribeChangeSetHooksCommand_1 = require(\"./commands/DescribeChangeSetHooksCommand\");\nconst DescribePublisherCommand_1 = require(\"./commands/DescribePublisherCommand\");\nconst DescribeStackDriftDetectionStatusCommand_1 = require(\"./commands/DescribeStackDriftDetectionStatusCommand\");\nconst DescribeStackEventsCommand_1 = require(\"./commands/DescribeStackEventsCommand\");\nconst DescribeStackInstanceCommand_1 = require(\"./commands/DescribeStackInstanceCommand\");\nconst DescribeStackResourceCommand_1 = require(\"./commands/DescribeStackResourceCommand\");\nconst DescribeStackResourceDriftsCommand_1 = require(\"./commands/DescribeStackResourceDriftsCommand\");\nconst DescribeStackResourcesCommand_1 = require(\"./commands/DescribeStackResourcesCommand\");\nconst DescribeStacksCommand_1 = require(\"./commands/DescribeStacksCommand\");\nconst DescribeStackSetCommand_1 = require(\"./commands/DescribeStackSetCommand\");\nconst DescribeStackSetOperationCommand_1 = require(\"./commands/DescribeStackSetOperationCommand\");\nconst DescribeTypeCommand_1 = require(\"./commands/DescribeTypeCommand\");\nconst DescribeTypeRegistrationCommand_1 = require(\"./commands/DescribeTypeRegistrationCommand\");\nconst DetectStackDriftCommand_1 = require(\"./commands/DetectStackDriftCommand\");\nconst DetectStackResourceDriftCommand_1 = require(\"./commands/DetectStackResourceDriftCommand\");\nconst DetectStackSetDriftCommand_1 = require(\"./commands/DetectStackSetDriftCommand\");\nconst EstimateTemplateCostCommand_1 = require(\"./commands/EstimateTemplateCostCommand\");\nconst ExecuteChangeSetCommand_1 = require(\"./commands/ExecuteChangeSetCommand\");\nconst GetStackPolicyCommand_1 = require(\"./commands/GetStackPolicyCommand\");\nconst GetTemplateCommand_1 = require(\"./commands/GetTemplateCommand\");\nconst GetTemplateSummaryCommand_1 = require(\"./commands/GetTemplateSummaryCommand\");\nconst ImportStacksToStackSetCommand_1 = require(\"./commands/ImportStacksToStackSetCommand\");\nconst ListChangeSetsCommand_1 = require(\"./commands/ListChangeSetsCommand\");\nconst ListExportsCommand_1 = require(\"./commands/ListExportsCommand\");\nconst ListImportsCommand_1 = require(\"./commands/ListImportsCommand\");\nconst ListStackInstancesCommand_1 = require(\"./commands/ListStackInstancesCommand\");\nconst ListStackResourcesCommand_1 = require(\"./commands/ListStackResourcesCommand\");\nconst ListStacksCommand_1 = require(\"./commands/ListStacksCommand\");\nconst ListStackSetOperationResultsCommand_1 = require(\"./commands/ListStackSetOperationResultsCommand\");\nconst ListStackSetOperationsCommand_1 = require(\"./commands/ListStackSetOperationsCommand\");\nconst ListStackSetsCommand_1 = require(\"./commands/ListStackSetsCommand\");\nconst ListTypeRegistrationsCommand_1 = require(\"./commands/ListTypeRegistrationsCommand\");\nconst ListTypesCommand_1 = require(\"./commands/ListTypesCommand\");\nconst ListTypeVersionsCommand_1 = require(\"./commands/ListTypeVersionsCommand\");\nconst PublishTypeCommand_1 = require(\"./commands/PublishTypeCommand\");\nconst RecordHandlerProgressCommand_1 = require(\"./commands/RecordHandlerProgressCommand\");\nconst RegisterPublisherCommand_1 = require(\"./commands/RegisterPublisherCommand\");\nconst RegisterTypeCommand_1 = require(\"./commands/RegisterTypeCommand\");\nconst RollbackStackCommand_1 = require(\"./commands/RollbackStackCommand\");\nconst SetStackPolicyCommand_1 = require(\"./commands/SetStackPolicyCommand\");\nconst SetTypeConfigurationCommand_1 = require(\"./commands/SetTypeConfigurationCommand\");\nconst SetTypeDefaultVersionCommand_1 = require(\"./commands/SetTypeDefaultVersionCommand\");\nconst SignalResourceCommand_1 = require(\"./commands/SignalResourceCommand\");\nconst StopStackSetOperationCommand_1 = require(\"./commands/StopStackSetOperationCommand\");\nconst TestTypeCommand_1 = require(\"./commands/TestTypeCommand\");\nconst UpdateStackCommand_1 = require(\"./commands/UpdateStackCommand\");\nconst UpdateStackInstancesCommand_1 = require(\"./commands/UpdateStackInstancesCommand\");\nconst UpdateStackSetCommand_1 = require(\"./commands/UpdateStackSetCommand\");\nconst UpdateTerminationProtectionCommand_1 = require(\"./commands/UpdateTerminationProtectionCommand\");\nconst ValidateTemplateCommand_1 = require(\"./commands/ValidateTemplateCommand\");\nclass CloudFormation extends CloudFormationClient_1.CloudFormationClient {\n    activateType(args, optionsOrCb, cb) {\n        const command = new ActivateTypeCommand_1.ActivateTypeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    batchDescribeTypeConfigurations(args, optionsOrCb, cb) {\n        const command = new BatchDescribeTypeConfigurationsCommand_1.BatchDescribeTypeConfigurationsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    cancelUpdateStack(args, optionsOrCb, cb) {\n        const command = new CancelUpdateStackCommand_1.CancelUpdateStackCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    continueUpdateRollback(args, optionsOrCb, cb) {\n        const command = new ContinueUpdateRollbackCommand_1.ContinueUpdateRollbackCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createChangeSet(args, optionsOrCb, cb) {\n        const command = new CreateChangeSetCommand_1.CreateChangeSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createStack(args, optionsOrCb, cb) {\n        const command = new CreateStackCommand_1.CreateStackCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createStackInstances(args, optionsOrCb, cb) {\n        const command = new CreateStackInstancesCommand_1.CreateStackInstancesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createStackSet(args, optionsOrCb, cb) {\n        const command = new CreateStackSetCommand_1.CreateStackSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deactivateType(args, optionsOrCb, cb) {\n        const command = new DeactivateTypeCommand_1.DeactivateTypeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteChangeSet(args, optionsOrCb, cb) {\n        const command = new DeleteChangeSetCommand_1.DeleteChangeSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteStack(args, optionsOrCb, cb) {\n        const command = new DeleteStackCommand_1.DeleteStackCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteStackInstances(args, optionsOrCb, cb) {\n        const command = new DeleteStackInstancesCommand_1.DeleteStackInstancesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteStackSet(args, optionsOrCb, cb) {\n        const command = new DeleteStackSetCommand_1.DeleteStackSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deregisterType(args, optionsOrCb, cb) {\n        const command = new DeregisterTypeCommand_1.DeregisterTypeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeAccountLimits(args, optionsOrCb, cb) {\n        const command = new DescribeAccountLimitsCommand_1.DescribeAccountLimitsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChangeSet(args, optionsOrCb, cb) {\n        const command = new DescribeChangeSetCommand_1.DescribeChangeSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeChangeSetHooks(args, optionsOrCb, cb) {\n        const command = new DescribeChangeSetHooksCommand_1.DescribeChangeSetHooksCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describePublisher(args, optionsOrCb, cb) {\n        const command = new DescribePublisherCommand_1.DescribePublisherCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStackDriftDetectionStatus(args, optionsOrCb, cb) {\n        const command = new DescribeStackDriftDetectionStatusCommand_1.DescribeStackDriftDetectionStatusCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStackEvents(args, optionsOrCb, cb) {\n        const command = new DescribeStackEventsCommand_1.DescribeStackEventsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStackInstance(args, optionsOrCb, cb) {\n        const command = new DescribeStackInstanceCommand_1.DescribeStackInstanceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStackResource(args, optionsOrCb, cb) {\n        const command = new DescribeStackResourceCommand_1.DescribeStackResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStackResourceDrifts(args, optionsOrCb, cb) {\n        const command = new DescribeStackResourceDriftsCommand_1.DescribeStackResourceDriftsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStackResources(args, optionsOrCb, cb) {\n        const command = new DescribeStackResourcesCommand_1.DescribeStackResourcesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStacks(args, optionsOrCb, cb) {\n        const command = new DescribeStacksCommand_1.DescribeStacksCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStackSet(args, optionsOrCb, cb) {\n        const command = new DescribeStackSetCommand_1.DescribeStackSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeStackSetOperation(args, optionsOrCb, cb) {\n        const command = new DescribeStackSetOperationCommand_1.DescribeStackSetOperationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeType(args, optionsOrCb, cb) {\n        const command = new DescribeTypeCommand_1.DescribeTypeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    describeTypeRegistration(args, optionsOrCb, cb) {\n        const command = new DescribeTypeRegistrationCommand_1.DescribeTypeRegistrationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    detectStackDrift(args, optionsOrCb, cb) {\n        const command = new DetectStackDriftCommand_1.DetectStackDriftCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    detectStackResourceDrift(args, optionsOrCb, cb) {\n        const command = new DetectStackResourceDriftCommand_1.DetectStackResourceDriftCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    detectStackSetDrift(args, optionsOrCb, cb) {\n        const command = new DetectStackSetDriftCommand_1.DetectStackSetDriftCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    estimateTemplateCost(args, optionsOrCb, cb) {\n        const command = new EstimateTemplateCostCommand_1.EstimateTemplateCostCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    executeChangeSet(args, optionsOrCb, cb) {\n        const command = new ExecuteChangeSetCommand_1.ExecuteChangeSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getStackPolicy(args, optionsOrCb, cb) {\n        const command = new GetStackPolicyCommand_1.GetStackPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getTemplate(args, optionsOrCb, cb) {\n        const command = new GetTemplateCommand_1.GetTemplateCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getTemplateSummary(args, optionsOrCb, cb) {\n        const command = new GetTemplateSummaryCommand_1.GetTemplateSummaryCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    importStacksToStackSet(args, optionsOrCb, cb) {\n        const command = new ImportStacksToStackSetCommand_1.ImportStacksToStackSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listChangeSets(args, optionsOrCb, cb) {\n        const command = new ListChangeSetsCommand_1.ListChangeSetsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listExports(args, optionsOrCb, cb) {\n        const command = new ListExportsCommand_1.ListExportsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listImports(args, optionsOrCb, cb) {\n        const command = new ListImportsCommand_1.ListImportsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listStackInstances(args, optionsOrCb, cb) {\n        const command = new ListStackInstancesCommand_1.ListStackInstancesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listStackResources(args, optionsOrCb, cb) {\n        const command = new ListStackResourcesCommand_1.ListStackResourcesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listStacks(args, optionsOrCb, cb) {\n        const command = new ListStacksCommand_1.ListStacksCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listStackSetOperationResults(args, optionsOrCb, cb) {\n        const command = new ListStackSetOperationResultsCommand_1.ListStackSetOperationResultsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listStackSetOperations(args, optionsOrCb, cb) {\n        const command = new ListStackSetOperationsCommand_1.ListStackSetOperationsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listStackSets(args, optionsOrCb, cb) {\n        const command = new ListStackSetsCommand_1.ListStackSetsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTypeRegistrations(args, optionsOrCb, cb) {\n        const command = new ListTypeRegistrationsCommand_1.ListTypeRegistrationsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTypes(args, optionsOrCb, cb) {\n        const command = new ListTypesCommand_1.ListTypesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTypeVersions(args, optionsOrCb, cb) {\n        const command = new ListTypeVersionsCommand_1.ListTypeVersionsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    publishType(args, optionsOrCb, cb) {\n        const command = new PublishTypeCommand_1.PublishTypeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    recordHandlerProgress(args, optionsOrCb, cb) {\n        const command = new RecordHandlerProgressCommand_1.RecordHandlerProgressCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    registerPublisher(args, optionsOrCb, cb) {\n        const command = new RegisterPublisherCommand_1.RegisterPublisherCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    registerType(args, optionsOrCb, cb) {\n        const command = new RegisterTypeCommand_1.RegisterTypeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    rollbackStack(args, optionsOrCb, cb) {\n        const command = new RollbackStackCommand_1.RollbackStackCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    setStackPolicy(args, optionsOrCb, cb) {\n        const command = new SetStackPolicyCommand_1.SetStackPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    setTypeConfiguration(args, optionsOrCb, cb) {\n        const command = new SetTypeConfigurationCommand_1.SetTypeConfigurationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    setTypeDefaultVersion(args, optionsOrCb, cb) {\n        const command = new SetTypeDefaultVersionCommand_1.SetTypeDefaultVersionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    signalResource(args, optionsOrCb, cb) {\n        const command = new SignalResourceCommand_1.SignalResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    stopStackSetOperation(args, optionsOrCb, cb) {\n        const command = new StopStackSetOperationCommand_1.StopStackSetOperationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    testType(args, optionsOrCb, cb) {\n        const command = new TestTypeCommand_1.TestTypeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateStack(args, optionsOrCb, cb) {\n        const command = new UpdateStackCommand_1.UpdateStackCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateStackInstances(args, optionsOrCb, cb) {\n        const command = new UpdateStackInstancesCommand_1.UpdateStackInstancesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateStackSet(args, optionsOrCb, cb) {\n        const command = new UpdateStackSetCommand_1.UpdateStackSetCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateTerminationProtection(args, optionsOrCb, cb) {\n        const command = new UpdateTerminationProtectionCommand_1.UpdateTerminationProtectionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    validateTemplate(args, optionsOrCb, cb) {\n        const command = new ValidateTemplateCommand_1.ValidateTemplateCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.CloudFormation = CloudFormation;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFormationClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass CloudFormationClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = runtimeConfig_1.getRuntimeConfig(configuration);\n        const _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        const _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        const _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        const _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        const _config_5 = middleware_signing_1.resolveAwsAuthConfig(_config_4);\n        const _config_6 = middleware_user_agent_1.resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.CloudFormationClient = CloudFormationClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ActivateTypeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ActivateTypeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ActivateTypeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ActivateTypeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ActivateTypeOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryActivateTypeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryActivateTypeCommand(output, context);\n    }\n}\nexports.ActivateTypeCommand = ActivateTypeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BatchDescribeTypeConfigurationsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass BatchDescribeTypeConfigurationsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"BatchDescribeTypeConfigurationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.BatchDescribeTypeConfigurationsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.BatchDescribeTypeConfigurationsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryBatchDescribeTypeConfigurationsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryBatchDescribeTypeConfigurationsCommand(output, context);\n    }\n}\nexports.BatchDescribeTypeConfigurationsCommand = BatchDescribeTypeConfigurationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancelUpdateStackCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CancelUpdateStackCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"CancelUpdateStackCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CancelUpdateStackInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCancelUpdateStackCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCancelUpdateStackCommand(output, context);\n    }\n}\nexports.CancelUpdateStackCommand = CancelUpdateStackCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ContinueUpdateRollbackCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ContinueUpdateRollbackCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ContinueUpdateRollbackCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ContinueUpdateRollbackInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ContinueUpdateRollbackOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryContinueUpdateRollbackCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryContinueUpdateRollbackCommand(output, context);\n    }\n}\nexports.ContinueUpdateRollbackCommand = ContinueUpdateRollbackCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateChangeSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CreateChangeSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"CreateChangeSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateChangeSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateChangeSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCreateChangeSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCreateChangeSetCommand(output, context);\n    }\n}\nexports.CreateChangeSetCommand = CreateChangeSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateStackCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CreateStackCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"CreateStackCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateStackInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateStackOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCreateStackCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCreateStackCommand(output, context);\n    }\n}\nexports.CreateStackCommand = CreateStackCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateStackInstancesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CreateStackInstancesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"CreateStackInstancesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateStackInstancesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateStackInstancesOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCreateStackInstancesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCreateStackInstancesCommand(output, context);\n    }\n}\nexports.CreateStackInstancesCommand = CreateStackInstancesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateStackSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass CreateStackSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"CreateStackSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateStackSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateStackSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryCreateStackSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryCreateStackSetCommand(output, context);\n    }\n}\nexports.CreateStackSetCommand = CreateStackSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeactivateTypeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeactivateTypeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DeactivateTypeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeactivateTypeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeactivateTypeOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeactivateTypeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeactivateTypeCommand(output, context);\n    }\n}\nexports.DeactivateTypeCommand = DeactivateTypeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteChangeSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeleteChangeSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DeleteChangeSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteChangeSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteChangeSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeleteChangeSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeleteChangeSetCommand(output, context);\n    }\n}\nexports.DeleteChangeSetCommand = DeleteChangeSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteStackCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeleteStackCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DeleteStackCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteStackInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeleteStackCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeleteStackCommand(output, context);\n    }\n}\nexports.DeleteStackCommand = DeleteStackCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteStackInstancesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeleteStackInstancesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DeleteStackInstancesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteStackInstancesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteStackInstancesOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeleteStackInstancesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeleteStackInstancesCommand(output, context);\n    }\n}\nexports.DeleteStackInstancesCommand = DeleteStackInstancesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteStackSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeleteStackSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DeleteStackSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteStackSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteStackSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeleteStackSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeleteStackSetCommand(output, context);\n    }\n}\nexports.DeleteStackSetCommand = DeleteStackSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeregisterTypeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DeregisterTypeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DeregisterTypeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeregisterTypeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeregisterTypeOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDeregisterTypeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDeregisterTypeCommand(output, context);\n    }\n}\nexports.DeregisterTypeCommand = DeregisterTypeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeAccountLimitsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeAccountLimitsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeAccountLimitsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeAccountLimitsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeAccountLimitsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeAccountLimitsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeAccountLimitsCommand(output, context);\n    }\n}\nexports.DescribeAccountLimitsCommand = DescribeAccountLimitsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeChangeSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeChangeSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeChangeSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeChangeSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeChangeSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeChangeSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeChangeSetCommand(output, context);\n    }\n}\nexports.DescribeChangeSetCommand = DescribeChangeSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeChangeSetHooksCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeChangeSetHooksCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeChangeSetHooksCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeChangeSetHooksInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeChangeSetHooksOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeChangeSetHooksCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeChangeSetHooksCommand(output, context);\n    }\n}\nexports.DescribeChangeSetHooksCommand = DescribeChangeSetHooksCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribePublisherCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribePublisherCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribePublisherCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribePublisherInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribePublisherOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribePublisherCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribePublisherCommand(output, context);\n    }\n}\nexports.DescribePublisherCommand = DescribePublisherCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStackDriftDetectionStatusCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStackDriftDetectionStatusCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStackDriftDetectionStatusCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStackDriftDetectionStatusInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStackDriftDetectionStatusOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStackDriftDetectionStatusCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStackDriftDetectionStatusCommand(output, context);\n    }\n}\nexports.DescribeStackDriftDetectionStatusCommand = DescribeStackDriftDetectionStatusCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStackEventsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStackEventsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStackEventsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStackEventsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStackEventsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStackEventsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStackEventsCommand(output, context);\n    }\n}\nexports.DescribeStackEventsCommand = DescribeStackEventsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStackInstanceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStackInstanceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStackInstanceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStackInstanceInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStackInstanceOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStackInstanceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStackInstanceCommand(output, context);\n    }\n}\nexports.DescribeStackInstanceCommand = DescribeStackInstanceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStackResourceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStackResourceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStackResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStackResourceInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStackResourceOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStackResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStackResourceCommand(output, context);\n    }\n}\nexports.DescribeStackResourceCommand = DescribeStackResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStackResourceDriftsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStackResourceDriftsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStackResourceDriftsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStackResourceDriftsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStackResourceDriftsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStackResourceDriftsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStackResourceDriftsCommand(output, context);\n    }\n}\nexports.DescribeStackResourceDriftsCommand = DescribeStackResourceDriftsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStackResourcesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStackResourcesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStackResourcesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStackResourcesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStackResourcesOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStackResourcesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStackResourcesCommand(output, context);\n    }\n}\nexports.DescribeStackResourcesCommand = DescribeStackResourcesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStackSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStackSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStackSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStackSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStackSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStackSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStackSetCommand(output, context);\n    }\n}\nexports.DescribeStackSetCommand = DescribeStackSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStackSetOperationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStackSetOperationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStackSetOperationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStackSetOperationInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStackSetOperationOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStackSetOperationCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStackSetOperationCommand(output, context);\n    }\n}\nexports.DescribeStackSetOperationCommand = DescribeStackSetOperationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeStacksCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeStacksCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeStacksCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeStacksInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeStacksOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeStacksCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeStacksCommand(output, context);\n    }\n}\nexports.DescribeStacksCommand = DescribeStacksCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeTypeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeTypeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeTypeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeTypeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeTypeOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeTypeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeTypeCommand(output, context);\n    }\n}\nexports.DescribeTypeCommand = DescribeTypeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DescribeTypeRegistrationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DescribeTypeRegistrationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DescribeTypeRegistrationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DescribeTypeRegistrationInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DescribeTypeRegistrationOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDescribeTypeRegistrationCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDescribeTypeRegistrationCommand(output, context);\n    }\n}\nexports.DescribeTypeRegistrationCommand = DescribeTypeRegistrationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetectStackDriftCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DetectStackDriftCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DetectStackDriftCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DetectStackDriftInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DetectStackDriftOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDetectStackDriftCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDetectStackDriftCommand(output, context);\n    }\n}\nexports.DetectStackDriftCommand = DetectStackDriftCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetectStackResourceDriftCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DetectStackResourceDriftCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DetectStackResourceDriftCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DetectStackResourceDriftInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DetectStackResourceDriftOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDetectStackResourceDriftCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDetectStackResourceDriftCommand(output, context);\n    }\n}\nexports.DetectStackResourceDriftCommand = DetectStackResourceDriftCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DetectStackSetDriftCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DetectStackSetDriftCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"DetectStackSetDriftCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DetectStackSetDriftInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DetectStackSetDriftOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDetectStackSetDriftCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDetectStackSetDriftCommand(output, context);\n    }\n}\nexports.DetectStackSetDriftCommand = DetectStackSetDriftCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EstimateTemplateCostCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass EstimateTemplateCostCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"EstimateTemplateCostCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.EstimateTemplateCostInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.EstimateTemplateCostOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryEstimateTemplateCostCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryEstimateTemplateCostCommand(output, context);\n    }\n}\nexports.EstimateTemplateCostCommand = EstimateTemplateCostCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExecuteChangeSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ExecuteChangeSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ExecuteChangeSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ExecuteChangeSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ExecuteChangeSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryExecuteChangeSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryExecuteChangeSetCommand(output, context);\n    }\n}\nexports.ExecuteChangeSetCommand = ExecuteChangeSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetStackPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetStackPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"GetStackPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetStackPolicyInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetStackPolicyOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetStackPolicyCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetStackPolicyCommand(output, context);\n    }\n}\nexports.GetStackPolicyCommand = GetStackPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetTemplateCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetTemplateCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"GetTemplateCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetTemplateInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetTemplateOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetTemplateCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetTemplateCommand(output, context);\n    }\n}\nexports.GetTemplateCommand = GetTemplateCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetTemplateSummaryCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetTemplateSummaryCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"GetTemplateSummaryCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetTemplateSummaryInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetTemplateSummaryOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetTemplateSummaryCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetTemplateSummaryCommand(output, context);\n    }\n}\nexports.GetTemplateSummaryCommand = GetTemplateSummaryCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ImportStacksToStackSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ImportStacksToStackSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ImportStacksToStackSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ImportStacksToStackSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ImportStacksToStackSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryImportStacksToStackSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryImportStacksToStackSetCommand(output, context);\n    }\n}\nexports.ImportStacksToStackSetCommand = ImportStacksToStackSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListChangeSetsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListChangeSetsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListChangeSetsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListChangeSetsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListChangeSetsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListChangeSetsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListChangeSetsCommand(output, context);\n    }\n}\nexports.ListChangeSetsCommand = ListChangeSetsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListExportsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListExportsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListExportsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListExportsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListExportsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListExportsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListExportsCommand(output, context);\n    }\n}\nexports.ListExportsCommand = ListExportsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListImportsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListImportsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListImportsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListImportsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListImportsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListImportsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListImportsCommand(output, context);\n    }\n}\nexports.ListImportsCommand = ListImportsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListStackInstancesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListStackInstancesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListStackInstancesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListStackInstancesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListStackInstancesOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListStackInstancesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListStackInstancesCommand(output, context);\n    }\n}\nexports.ListStackInstancesCommand = ListStackInstancesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListStackResourcesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListStackResourcesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListStackResourcesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListStackResourcesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListStackResourcesOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListStackResourcesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListStackResourcesCommand(output, context);\n    }\n}\nexports.ListStackResourcesCommand = ListStackResourcesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListStackSetOperationResultsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListStackSetOperationResultsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListStackSetOperationResultsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListStackSetOperationResultsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListStackSetOperationResultsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListStackSetOperationResultsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListStackSetOperationResultsCommand(output, context);\n    }\n}\nexports.ListStackSetOperationResultsCommand = ListStackSetOperationResultsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListStackSetOperationsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListStackSetOperationsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListStackSetOperationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListStackSetOperationsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListStackSetOperationsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListStackSetOperationsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListStackSetOperationsCommand(output, context);\n    }\n}\nexports.ListStackSetOperationsCommand = ListStackSetOperationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListStackSetsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListStackSetsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListStackSetsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListStackSetsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListStackSetsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListStackSetsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListStackSetsCommand(output, context);\n    }\n}\nexports.ListStackSetsCommand = ListStackSetsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListStacksCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListStacksCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListStacksCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListStacksInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListStacksOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListStacksCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListStacksCommand(output, context);\n    }\n}\nexports.ListStacksCommand = ListStacksCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTypeRegistrationsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListTypeRegistrationsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListTypeRegistrationsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTypeRegistrationsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTypeRegistrationsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListTypeRegistrationsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListTypeRegistrationsCommand(output, context);\n    }\n}\nexports.ListTypeRegistrationsCommand = ListTypeRegistrationsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTypeVersionsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListTypeVersionsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListTypeVersionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTypeVersionsInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTypeVersionsOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListTypeVersionsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListTypeVersionsCommand(output, context);\n    }\n}\nexports.ListTypeVersionsCommand = ListTypeVersionsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTypesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ListTypesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ListTypesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTypesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTypesOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryListTypesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryListTypesCommand(output, context);\n    }\n}\nexports.ListTypesCommand = ListTypesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublishTypeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass PublishTypeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"PublishTypeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PublishTypeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PublishTypeOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryPublishTypeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryPublishTypeCommand(output, context);\n    }\n}\nexports.PublishTypeCommand = PublishTypeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RecordHandlerProgressCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass RecordHandlerProgressCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"RecordHandlerProgressCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RecordHandlerProgressInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.RecordHandlerProgressOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryRecordHandlerProgressCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryRecordHandlerProgressCommand(output, context);\n    }\n}\nexports.RecordHandlerProgressCommand = RecordHandlerProgressCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegisterPublisherCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass RegisterPublisherCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"RegisterPublisherCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RegisterPublisherInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.RegisterPublisherOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryRegisterPublisherCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryRegisterPublisherCommand(output, context);\n    }\n}\nexports.RegisterPublisherCommand = RegisterPublisherCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RegisterTypeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass RegisterTypeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"RegisterTypeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RegisterTypeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.RegisterTypeOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryRegisterTypeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryRegisterTypeCommand(output, context);\n    }\n}\nexports.RegisterTypeCommand = RegisterTypeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RollbackStackCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass RollbackStackCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"RollbackStackCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RollbackStackInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.RollbackStackOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryRollbackStackCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryRollbackStackCommand(output, context);\n    }\n}\nexports.RollbackStackCommand = RollbackStackCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetStackPolicyCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SetStackPolicyCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"SetStackPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SetStackPolicyInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySetStackPolicyCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySetStackPolicyCommand(output, context);\n    }\n}\nexports.SetStackPolicyCommand = SetStackPolicyCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetTypeConfigurationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SetTypeConfigurationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"SetTypeConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SetTypeConfigurationInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.SetTypeConfigurationOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySetTypeConfigurationCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySetTypeConfigurationCommand(output, context);\n    }\n}\nexports.SetTypeConfigurationCommand = SetTypeConfigurationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetTypeDefaultVersionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SetTypeDefaultVersionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"SetTypeDefaultVersionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SetTypeDefaultVersionInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.SetTypeDefaultVersionOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySetTypeDefaultVersionCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySetTypeDefaultVersionCommand(output, context);\n    }\n}\nexports.SetTypeDefaultVersionCommand = SetTypeDefaultVersionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalResourceCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass SignalResourceCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"SignalResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.SignalResourceInput.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_querySignalResourceCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_querySignalResourceCommand(output, context);\n    }\n}\nexports.SignalResourceCommand = SignalResourceCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StopStackSetOperationCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass StopStackSetOperationCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"StopStackSetOperationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.StopStackSetOperationInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.StopStackSetOperationOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryStopStackSetOperationCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryStopStackSetOperationCommand(output, context);\n    }\n}\nexports.StopStackSetOperationCommand = StopStackSetOperationCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TestTypeCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass TestTypeCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"TestTypeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.TestTypeInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.TestTypeOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryTestTypeCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryTestTypeCommand(output, context);\n    }\n}\nexports.TestTypeCommand = TestTypeCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateStackCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass UpdateStackCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"UpdateStackCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateStackInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateStackOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryUpdateStackCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryUpdateStackCommand(output, context);\n    }\n}\nexports.UpdateStackCommand = UpdateStackCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateStackInstancesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass UpdateStackInstancesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"UpdateStackInstancesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateStackInstancesInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateStackInstancesOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryUpdateStackInstancesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryUpdateStackInstancesCommand(output, context);\n    }\n}\nexports.UpdateStackInstancesCommand = UpdateStackInstancesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateStackSetCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass UpdateStackSetCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"UpdateStackSetCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateStackSetInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateStackSetOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryUpdateStackSetCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryUpdateStackSetCommand(output, context);\n    }\n}\nexports.UpdateStackSetCommand = UpdateStackSetCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateTerminationProtectionCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass UpdateTerminationProtectionCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"UpdateTerminationProtectionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateTerminationProtectionInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateTerminationProtectionOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryUpdateTerminationProtectionCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryUpdateTerminationProtectionCommand(output, context);\n    }\n}\nexports.UpdateTerminationProtectionCommand = UpdateTerminationProtectionCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ValidateTemplateCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass ValidateTemplateCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"CloudFormationClient\";\n        const commandName = \"ValidateTemplateCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ValidateTemplateInput.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ValidateTemplateOutput.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryValidateTemplateCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryValidateTemplateCommand(output, context);\n    }\n}\nexports.ValidateTemplateCommand = ValidateTemplateCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./ActivateTypeCommand\"), exports);\ntslib_1.__exportStar(require(\"./BatchDescribeTypeConfigurationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./CancelUpdateStackCommand\"), exports);\ntslib_1.__exportStar(require(\"./ContinueUpdateRollbackCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateChangeSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateStackCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateStackInstancesCommand\"), exports);\ntslib_1.__exportStar(require(\"./CreateStackSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeactivateTypeCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteChangeSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteStackCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteStackInstancesCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeleteStackSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./DeregisterTypeCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeAccountLimitsCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeChangeSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeChangeSetHooksCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribePublisherCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackDriftDetectionStatusCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackEventsCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackInstanceCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackResourceDriftsCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackResourcesCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackSetOperationCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStacksCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeTypeCommand\"), exports);\ntslib_1.__exportStar(require(\"./DescribeTypeRegistrationCommand\"), exports);\ntslib_1.__exportStar(require(\"./DetectStackDriftCommand\"), exports);\ntslib_1.__exportStar(require(\"./DetectStackResourceDriftCommand\"), exports);\ntslib_1.__exportStar(require(\"./DetectStackSetDriftCommand\"), exports);\ntslib_1.__exportStar(require(\"./EstimateTemplateCostCommand\"), exports);\ntslib_1.__exportStar(require(\"./ExecuteChangeSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetStackPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetTemplateCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetTemplateSummaryCommand\"), exports);\ntslib_1.__exportStar(require(\"./ImportStacksToStackSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListChangeSetsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListExportsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListImportsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListStackInstancesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListStackResourcesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListStackSetOperationResultsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListStackSetOperationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListStackSetsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListStacksCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListTypeRegistrationsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListTypeVersionsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListTypesCommand\"), exports);\ntslib_1.__exportStar(require(\"./PublishTypeCommand\"), exports);\ntslib_1.__exportStar(require(\"./RecordHandlerProgressCommand\"), exports);\ntslib_1.__exportStar(require(\"./RegisterPublisherCommand\"), exports);\ntslib_1.__exportStar(require(\"./RegisterTypeCommand\"), exports);\ntslib_1.__exportStar(require(\"./RollbackStackCommand\"), exports);\ntslib_1.__exportStar(require(\"./SetStackPolicyCommand\"), exports);\ntslib_1.__exportStar(require(\"./SetTypeConfigurationCommand\"), exports);\ntslib_1.__exportStar(require(\"./SetTypeDefaultVersionCommand\"), exports);\ntslib_1.__exportStar(require(\"./SignalResourceCommand\"), exports);\ntslib_1.__exportStar(require(\"./StopStackSetOperationCommand\"), exports);\ntslib_1.__exportStar(require(\"./TestTypeCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateStackCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateStackInstancesCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateStackSetCommand\"), exports);\ntslib_1.__exportStar(require(\"./UpdateTerminationProtectionCommand\"), exports);\ntslib_1.__exportStar(require(\"./ValidateTemplateCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"us-east-1\": {\n        variants: [\n            {\n                hostname: \"cloudformation-fips.us-east-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-east-2\": {\n        variants: [\n            {\n                hostname: \"cloudformation-fips.us-east-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-gov-east-1\": {\n        variants: [\n            {\n                hostname: \"cloudformation.us-gov-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-east-1\",\n    },\n    \"us-gov-west-1\": {\n        variants: [\n            {\n                hostname: \"cloudformation.us-gov-west-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-west-1\",\n    },\n    \"us-west-1\": {\n        variants: [\n            {\n                hostname: \"cloudformation-fips.us-west-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-west-2\": {\n        variants: [\n            {\n                hostname: \"cloudformation-fips.us-west-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-1-fips\",\n            \"us-east-2\",\n            \"us-east-2-fips\",\n            \"us-west-1\",\n            \"us-west-1-fips\",\n            \"us-west-2\",\n            \"us-west-2-fips\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudformation.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudformation-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"cloudformation-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"cloudformation.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudformation.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudformation-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"cloudformation-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"cloudformation.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudformation.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudformation-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudformation.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudformation-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"cloudformation.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"cloudformation-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"cloudformation-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"cloudformation.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => config_resolver_1.getRegionInfo(region, {\n    ...options,\n    signingService: \"cloudformation\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFormationServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./CloudFormation\"), exports);\ntslib_1.__exportStar(require(\"./CloudFormationClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\ntslib_1.__exportStar(require(\"./waiters\"), exports);\nvar CloudFormationServiceException_1 = require(\"./models/CloudFormationServiceException\");\nObject.defineProperty(exports, \"CloudFormationServiceException\", { enumerable: true, get: function () { return CloudFormationServiceException_1.CloudFormationServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CloudFormationServiceException = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nclass CloudFormationServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, CloudFormationServiceException.prototype);\n    }\n}\nexports.CloudFormationServiceException = CloudFormationServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ResourceToImport = exports.Parameter = exports.ContinueUpdateRollbackOutput = exports.ContinueUpdateRollbackInput = exports.ChangeSetType = exports.ChangeSetSummary = exports.ExecutionStatus = exports.ChangeSetStatus = exports.ChangeSetNotFoundException = exports.ChangeSetHooksStatus = exports.ChangeSetHook = exports.ChangeSetHookTargetDetails = exports.HookTargetType = exports.ChangeSetHookResourceTargetDetails = exports.HookInvocationPoint = exports.HookFailureMode = exports.Change = exports.ChangeType = exports.ResourceChange = exports.Replacement = exports.ModuleInfo = exports.ResourceChangeDetail = exports.ResourceTargetDefinition = exports.RequiresRecreation = exports.ResourceAttribute = exports.EvaluationType = exports.ChangeSource = exports.ChangeAction = exports.Category = exports.Capability = exports.TokenAlreadyExistsException = exports.CancelUpdateStackInput = exports.CallAs = exports.TypeConfigurationNotFoundException = exports.BatchDescribeTypeConfigurationsOutput = exports.TypeConfigurationDetails = exports.BatchDescribeTypeConfigurationsError = exports.BatchDescribeTypeConfigurationsInput = exports.TypeConfigurationIdentifier = exports.AutoDeployment = exports.AlreadyExistsException = exports.TypeNotFoundException = exports.CFNRegistryException = exports.ActivateTypeOutput = exports.ActivateTypeInput = exports.VersionBump = exports.ThirdPartyType = exports.LoggingConfig = exports.AccountLimit = exports.AccountGateResult = void 0;\nexports.StackDriftDetectionStatus = exports.DescribeStackDriftDetectionStatusInput = exports.DescribePublisherOutput = exports.PublisherStatus = exports.IdentityProvider = exports.DescribePublisherInput = exports.DescribeChangeSetHooksOutput = exports.DescribeChangeSetHooksInput = exports.DescribeChangeSetOutput = exports.DescribeChangeSetInput = exports.DescribeAccountLimitsOutput = exports.DescribeAccountLimitsInput = exports.DeregisterTypeOutput = exports.DeregisterTypeInput = exports.StackSetNotEmptyException = exports.DeleteStackSetOutput = exports.DeleteStackSetInput = exports.DeleteStackInstancesOutput = exports.DeleteStackInstancesInput = exports.DeleteStackInput = exports.InvalidChangeSetStatusException = exports.DeleteChangeSetOutput = exports.DeleteChangeSetInput = exports.DeactivateTypeOutput = exports.DeactivateTypeInput = exports.NameAlreadyExistsException = exports.CreateStackSetOutput = exports.CreateStackSetInput = exports.ManagedExecution = exports.CreatedButModifiedException = exports.StaleRequestException = exports.StackSetNotFoundException = exports.OperationInProgressException = exports.OperationIdAlreadyExistsException = exports.InvalidOperationException = exports.CreateStackInstancesOutput = exports.CreateStackInstancesInput = exports.StackSetOperationPreferences = exports.RegionConcurrencyType = exports.DeploymentTargets = exports.CreateStackOutput = exports.CreateStackInput = exports.OnFailure = exports.LimitExceededException = exports.InsufficientCapabilitiesException = exports.CreateChangeSetOutput = exports.CreateChangeSetInput = exports.Tag = exports.RollbackConfiguration = exports.RollbackTrigger = void 0;\nexports.DetectStackDriftOutput = exports.DetectStackDriftInput = exports.DescribeTypeRegistrationOutput = exports.DescribeTypeRegistrationInput = exports.DescribeTypeOutput = exports.TypeTestsStatus = exports.RequiredActivatedType = exports.DescribeTypeInput = exports.OperationNotFoundException = exports.DescribeStackSetOperationOutput = exports.StackSetOperation = exports.DescribeStackSetOperationInput = exports.DescribeStackSetOutput = exports.StackSet = exports.StackSetDriftDetectionDetails = exports.StackSetDriftStatus = exports.StackSetDriftDetectionStatus = exports.DescribeStackSetInput = exports.DescribeStacksOutput = exports.Stack = exports.StackStatus = exports.Output = exports.StackDriftInformation = exports.DescribeStacksInput = exports.DescribeStackResourcesOutput = exports.StackResource = exports.DescribeStackResourcesInput = exports.DescribeStackResourceDriftsOutput = exports.StackResourceDrift = exports.PropertyDifference = exports.DifferenceType = exports.PhysicalResourceIdContextKeyValuePair = exports.DescribeStackResourceDriftsInput = exports.DescribeStackResourceOutput = exports.StackResourceDetail = exports.StackResourceDriftInformation = exports.StackResourceDriftStatus = exports.DescribeStackResourceInput = exports.StackInstanceNotFoundException = exports.DescribeStackInstanceOutput = exports.StackInstance = exports.StackInstanceComprehensiveStatus = exports.DescribeStackInstanceInput = exports.DescribeStackEventsOutput = exports.StackEvent = exports.ResourceStatus = exports.HookStatus = exports.DescribeStackEventsInput = exports.DescribeStackDriftDetectionStatusOutput = exports.StackDriftStatus = void 0;\nexports.ListTypeRegistrationsInput = exports.ListStackSetsOutput = exports.StackSetSummary = exports.ListStackSetsInput = exports.ListStackSetOperationsOutput = exports.StackSetOperationSummary = exports.ListStackSetOperationsInput = exports.ListStackSetOperationResultsOutput = exports.StackSetOperationResultSummary = exports.ListStackSetOperationResultsInput = exports.ListStacksOutput = exports.StackSummary = exports.StackDriftInformationSummary = exports.ListStacksInput = exports.ListStackResourcesOutput = exports.StackResourceSummary = exports.StackResourceDriftInformationSummary = exports.ListStackResourcesInput = exports.ListStackInstancesOutput = exports.StackInstanceSummary = exports.ListStackInstancesInput = exports.StackInstanceFilter = exports.ListImportsOutput = exports.ListImportsInput = exports.ListExportsOutput = exports.Export = exports.ListExportsInput = exports.ListChangeSetsOutput = exports.ListChangeSetsInput = exports.StackNotFoundException = exports.ImportStacksToStackSetOutput = exports.ImportStacksToStackSetInput = exports.GetTemplateSummaryOutput = exports.ResourceIdentifierSummary = exports.ParameterDeclaration = exports.ParameterConstraints = exports.GetTemplateSummaryInput = exports.GetTemplateOutput = exports.GetTemplateInput = exports.TemplateStage = exports.GetStackPolicyOutput = exports.GetStackPolicyInput = exports.ExecuteChangeSetOutput = exports.ExecuteChangeSetInput = exports.EstimateTemplateCostOutput = exports.EstimateTemplateCostInput = exports.DetectStackSetDriftOutput = exports.DetectStackSetDriftInput = exports.DetectStackResourceDriftOutput = exports.DetectStackResourceDriftInput = void 0;\nexports.ValidateTemplateOutput = exports.TemplateParameter = exports.ValidateTemplateInput = exports.UpdateTerminationProtectionOutput = exports.UpdateTerminationProtectionInput = exports.UpdateStackSetOutput = exports.UpdateStackSetInput = exports.UpdateStackInstancesOutput = exports.UpdateStackInstancesInput = exports.UpdateStackOutput = exports.UpdateStackInput = exports.TestTypeOutput = exports.TestTypeInput = exports.StopStackSetOperationOutput = exports.StopStackSetOperationInput = exports.SignalResourceInput = exports.ResourceSignalStatus = exports.SetTypeDefaultVersionOutput = exports.SetTypeDefaultVersionInput = exports.SetTypeConfigurationOutput = exports.SetTypeConfigurationInput = exports.SetStackPolicyInput = exports.RollbackStackOutput = exports.RollbackStackInput = exports.RegisterTypeOutput = exports.RegisterTypeInput = exports.RegisterPublisherOutput = exports.RegisterPublisherInput = exports.RecordHandlerProgressOutput = exports.RecordHandlerProgressInput = exports.HandlerErrorCode = exports.OperationStatus = exports.OperationStatusCheckFailedException = exports.InvalidStateTransitionException = exports.PublishTypeOutput = exports.PublishTypeInput = exports.ListTypeVersionsOutput = exports.TypeVersionSummary = exports.ListTypeVersionsInput = exports.ListTypesOutput = exports.TypeSummary = exports.ListTypesInput = exports.TypeFilters = exports.ListTypeRegistrationsOutput = void 0;\nconst CloudFormationServiceException_1 = require(\"./CloudFormationServiceException\");\nvar AccountGateResult;\n(function (AccountGateResult) {\n    AccountGateResult.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccountGateResult = exports.AccountGateResult || (exports.AccountGateResult = {}));\nvar AccountLimit;\n(function (AccountLimit) {\n    AccountLimit.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccountLimit = exports.AccountLimit || (exports.AccountLimit = {}));\nvar LoggingConfig;\n(function (LoggingConfig) {\n    LoggingConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(LoggingConfig = exports.LoggingConfig || (exports.LoggingConfig = {}));\nvar ThirdPartyType;\n(function (ThirdPartyType) {\n    ThirdPartyType[\"HOOK\"] = \"HOOK\";\n    ThirdPartyType[\"MODULE\"] = \"MODULE\";\n    ThirdPartyType[\"RESOURCE\"] = \"RESOURCE\";\n})(ThirdPartyType = exports.ThirdPartyType || (exports.ThirdPartyType = {}));\nvar VersionBump;\n(function (VersionBump) {\n    VersionBump[\"MAJOR\"] = \"MAJOR\";\n    VersionBump[\"MINOR\"] = \"MINOR\";\n})(VersionBump = exports.VersionBump || (exports.VersionBump = {}));\nvar ActivateTypeInput;\n(function (ActivateTypeInput) {\n    ActivateTypeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ActivateTypeInput = exports.ActivateTypeInput || (exports.ActivateTypeInput = {}));\nvar ActivateTypeOutput;\n(function (ActivateTypeOutput) {\n    ActivateTypeOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ActivateTypeOutput = exports.ActivateTypeOutput || (exports.ActivateTypeOutput = {}));\nclass CFNRegistryException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"CFNRegistryException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CFNRegistryException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CFNRegistryException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CFNRegistryException = CFNRegistryException;\nclass TypeNotFoundException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"TypeNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TypeNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TypeNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TypeNotFoundException = TypeNotFoundException;\nclass AlreadyExistsException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"AlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AlreadyExistsException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.AlreadyExistsException = AlreadyExistsException;\nvar AutoDeployment;\n(function (AutoDeployment) {\n    AutoDeployment.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AutoDeployment = exports.AutoDeployment || (exports.AutoDeployment = {}));\nvar TypeConfigurationIdentifier;\n(function (TypeConfigurationIdentifier) {\n    TypeConfigurationIdentifier.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TypeConfigurationIdentifier = exports.TypeConfigurationIdentifier || (exports.TypeConfigurationIdentifier = {}));\nvar BatchDescribeTypeConfigurationsInput;\n(function (BatchDescribeTypeConfigurationsInput) {\n    BatchDescribeTypeConfigurationsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(BatchDescribeTypeConfigurationsInput = exports.BatchDescribeTypeConfigurationsInput || (exports.BatchDescribeTypeConfigurationsInput = {}));\nvar BatchDescribeTypeConfigurationsError;\n(function (BatchDescribeTypeConfigurationsError) {\n    BatchDescribeTypeConfigurationsError.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(BatchDescribeTypeConfigurationsError = exports.BatchDescribeTypeConfigurationsError || (exports.BatchDescribeTypeConfigurationsError = {}));\nvar TypeConfigurationDetails;\n(function (TypeConfigurationDetails) {\n    TypeConfigurationDetails.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TypeConfigurationDetails = exports.TypeConfigurationDetails || (exports.TypeConfigurationDetails = {}));\nvar BatchDescribeTypeConfigurationsOutput;\n(function (BatchDescribeTypeConfigurationsOutput) {\n    BatchDescribeTypeConfigurationsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(BatchDescribeTypeConfigurationsOutput = exports.BatchDescribeTypeConfigurationsOutput || (exports.BatchDescribeTypeConfigurationsOutput = {}));\nclass TypeConfigurationNotFoundException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"TypeConfigurationNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TypeConfigurationNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TypeConfigurationNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TypeConfigurationNotFoundException = TypeConfigurationNotFoundException;\nvar CallAs;\n(function (CallAs) {\n    CallAs[\"DELEGATED_ADMIN\"] = \"DELEGATED_ADMIN\";\n    CallAs[\"SELF\"] = \"SELF\";\n})(CallAs = exports.CallAs || (exports.CallAs = {}));\nvar CancelUpdateStackInput;\n(function (CancelUpdateStackInput) {\n    CancelUpdateStackInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CancelUpdateStackInput = exports.CancelUpdateStackInput || (exports.CancelUpdateStackInput = {}));\nclass TokenAlreadyExistsException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"TokenAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TokenAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TokenAlreadyExistsException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.TokenAlreadyExistsException = TokenAlreadyExistsException;\nvar Capability;\n(function (Capability) {\n    Capability[\"CAPABILITY_AUTO_EXPAND\"] = \"CAPABILITY_AUTO_EXPAND\";\n    Capability[\"CAPABILITY_IAM\"] = \"CAPABILITY_IAM\";\n    Capability[\"CAPABILITY_NAMED_IAM\"] = \"CAPABILITY_NAMED_IAM\";\n})(Capability = exports.Capability || (exports.Capability = {}));\nvar Category;\n(function (Category) {\n    Category[\"ACTIVATED\"] = \"ACTIVATED\";\n    Category[\"AWS_TYPES\"] = \"AWS_TYPES\";\n    Category[\"REGISTERED\"] = \"REGISTERED\";\n    Category[\"THIRD_PARTY\"] = \"THIRD_PARTY\";\n})(Category = exports.Category || (exports.Category = {}));\nvar ChangeAction;\n(function (ChangeAction) {\n    ChangeAction[\"Add\"] = \"Add\";\n    ChangeAction[\"Dynamic\"] = \"Dynamic\";\n    ChangeAction[\"Import\"] = \"Import\";\n    ChangeAction[\"Modify\"] = \"Modify\";\n    ChangeAction[\"Remove\"] = \"Remove\";\n})(ChangeAction = exports.ChangeAction || (exports.ChangeAction = {}));\nvar ChangeSource;\n(function (ChangeSource) {\n    ChangeSource[\"Automatic\"] = \"Automatic\";\n    ChangeSource[\"DirectModification\"] = \"DirectModification\";\n    ChangeSource[\"ParameterReference\"] = \"ParameterReference\";\n    ChangeSource[\"ResourceAttribute\"] = \"ResourceAttribute\";\n    ChangeSource[\"ResourceReference\"] = \"ResourceReference\";\n})(ChangeSource = exports.ChangeSource || (exports.ChangeSource = {}));\nvar EvaluationType;\n(function (EvaluationType) {\n    EvaluationType[\"Dynamic\"] = \"Dynamic\";\n    EvaluationType[\"Static\"] = \"Static\";\n})(EvaluationType = exports.EvaluationType || (exports.EvaluationType = {}));\nvar ResourceAttribute;\n(function (ResourceAttribute) {\n    ResourceAttribute[\"CreationPolicy\"] = \"CreationPolicy\";\n    ResourceAttribute[\"DeletionPolicy\"] = \"DeletionPolicy\";\n    ResourceAttribute[\"Metadata\"] = \"Metadata\";\n    ResourceAttribute[\"Properties\"] = \"Properties\";\n    ResourceAttribute[\"Tags\"] = \"Tags\";\n    ResourceAttribute[\"UpdatePolicy\"] = \"UpdatePolicy\";\n})(ResourceAttribute = exports.ResourceAttribute || (exports.ResourceAttribute = {}));\nvar RequiresRecreation;\n(function (RequiresRecreation) {\n    RequiresRecreation[\"Always\"] = \"Always\";\n    RequiresRecreation[\"Conditionally\"] = \"Conditionally\";\n    RequiresRecreation[\"Never\"] = \"Never\";\n})(RequiresRecreation = exports.RequiresRecreation || (exports.RequiresRecreation = {}));\nvar ResourceTargetDefinition;\n(function (ResourceTargetDefinition) {\n    ResourceTargetDefinition.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceTargetDefinition = exports.ResourceTargetDefinition || (exports.ResourceTargetDefinition = {}));\nvar ResourceChangeDetail;\n(function (ResourceChangeDetail) {\n    ResourceChangeDetail.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceChangeDetail = exports.ResourceChangeDetail || (exports.ResourceChangeDetail = {}));\nvar ModuleInfo;\n(function (ModuleInfo) {\n    ModuleInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ModuleInfo = exports.ModuleInfo || (exports.ModuleInfo = {}));\nvar Replacement;\n(function (Replacement) {\n    Replacement[\"Conditional\"] = \"Conditional\";\n    Replacement[\"False\"] = \"False\";\n    Replacement[\"True\"] = \"True\";\n})(Replacement = exports.Replacement || (exports.Replacement = {}));\nvar ResourceChange;\n(function (ResourceChange) {\n    ResourceChange.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceChange = exports.ResourceChange || (exports.ResourceChange = {}));\nvar ChangeType;\n(function (ChangeType) {\n    ChangeType[\"Resource\"] = \"Resource\";\n})(ChangeType = exports.ChangeType || (exports.ChangeType = {}));\nvar Change;\n(function (Change) {\n    Change.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Change = exports.Change || (exports.Change = {}));\nvar HookFailureMode;\n(function (HookFailureMode) {\n    HookFailureMode[\"FAIL\"] = \"FAIL\";\n    HookFailureMode[\"WARN\"] = \"WARN\";\n})(HookFailureMode = exports.HookFailureMode || (exports.HookFailureMode = {}));\nvar HookInvocationPoint;\n(function (HookInvocationPoint) {\n    HookInvocationPoint[\"PRE_PROVISION\"] = \"PRE_PROVISION\";\n})(HookInvocationPoint = exports.HookInvocationPoint || (exports.HookInvocationPoint = {}));\nvar ChangeSetHookResourceTargetDetails;\n(function (ChangeSetHookResourceTargetDetails) {\n    ChangeSetHookResourceTargetDetails.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ChangeSetHookResourceTargetDetails = exports.ChangeSetHookResourceTargetDetails || (exports.ChangeSetHookResourceTargetDetails = {}));\nvar HookTargetType;\n(function (HookTargetType) {\n    HookTargetType[\"RESOURCE\"] = \"RESOURCE\";\n})(HookTargetType = exports.HookTargetType || (exports.HookTargetType = {}));\nvar ChangeSetHookTargetDetails;\n(function (ChangeSetHookTargetDetails) {\n    ChangeSetHookTargetDetails.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ChangeSetHookTargetDetails = exports.ChangeSetHookTargetDetails || (exports.ChangeSetHookTargetDetails = {}));\nvar ChangeSetHook;\n(function (ChangeSetHook) {\n    ChangeSetHook.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ChangeSetHook = exports.ChangeSetHook || (exports.ChangeSetHook = {}));\nvar ChangeSetHooksStatus;\n(function (ChangeSetHooksStatus) {\n    ChangeSetHooksStatus[\"PLANNED\"] = \"PLANNED\";\n    ChangeSetHooksStatus[\"PLANNING\"] = \"PLANNING\";\n    ChangeSetHooksStatus[\"UNAVAILABLE\"] = \"UNAVAILABLE\";\n})(ChangeSetHooksStatus = exports.ChangeSetHooksStatus || (exports.ChangeSetHooksStatus = {}));\nclass ChangeSetNotFoundException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"ChangeSetNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ChangeSetNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ChangeSetNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.ChangeSetNotFoundException = ChangeSetNotFoundException;\nvar ChangeSetStatus;\n(function (ChangeSetStatus) {\n    ChangeSetStatus[\"CREATE_COMPLETE\"] = \"CREATE_COMPLETE\";\n    ChangeSetStatus[\"CREATE_IN_PROGRESS\"] = \"CREATE_IN_PROGRESS\";\n    ChangeSetStatus[\"CREATE_PENDING\"] = \"CREATE_PENDING\";\n    ChangeSetStatus[\"DELETE_COMPLETE\"] = \"DELETE_COMPLETE\";\n    ChangeSetStatus[\"DELETE_FAILED\"] = \"DELETE_FAILED\";\n    ChangeSetStatus[\"DELETE_IN_PROGRESS\"] = \"DELETE_IN_PROGRESS\";\n    ChangeSetStatus[\"DELETE_PENDING\"] = \"DELETE_PENDING\";\n    ChangeSetStatus[\"FAILED\"] = \"FAILED\";\n})(ChangeSetStatus = exports.ChangeSetStatus || (exports.ChangeSetStatus = {}));\nvar ExecutionStatus;\n(function (ExecutionStatus) {\n    ExecutionStatus[\"AVAILABLE\"] = \"AVAILABLE\";\n    ExecutionStatus[\"EXECUTE_COMPLETE\"] = \"EXECUTE_COMPLETE\";\n    ExecutionStatus[\"EXECUTE_FAILED\"] = \"EXECUTE_FAILED\";\n    ExecutionStatus[\"EXECUTE_IN_PROGRESS\"] = \"EXECUTE_IN_PROGRESS\";\n    ExecutionStatus[\"OBSOLETE\"] = \"OBSOLETE\";\n    ExecutionStatus[\"UNAVAILABLE\"] = \"UNAVAILABLE\";\n})(ExecutionStatus = exports.ExecutionStatus || (exports.ExecutionStatus = {}));\nvar ChangeSetSummary;\n(function (ChangeSetSummary) {\n    ChangeSetSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ChangeSetSummary = exports.ChangeSetSummary || (exports.ChangeSetSummary = {}));\nvar ChangeSetType;\n(function (ChangeSetType) {\n    ChangeSetType[\"CREATE\"] = \"CREATE\";\n    ChangeSetType[\"IMPORT\"] = \"IMPORT\";\n    ChangeSetType[\"UPDATE\"] = \"UPDATE\";\n})(ChangeSetType = exports.ChangeSetType || (exports.ChangeSetType = {}));\nvar ContinueUpdateRollbackInput;\n(function (ContinueUpdateRollbackInput) {\n    ContinueUpdateRollbackInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ContinueUpdateRollbackInput = exports.ContinueUpdateRollbackInput || (exports.ContinueUpdateRollbackInput = {}));\nvar ContinueUpdateRollbackOutput;\n(function (ContinueUpdateRollbackOutput) {\n    ContinueUpdateRollbackOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ContinueUpdateRollbackOutput = exports.ContinueUpdateRollbackOutput || (exports.ContinueUpdateRollbackOutput = {}));\nvar Parameter;\n(function (Parameter) {\n    Parameter.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Parameter = exports.Parameter || (exports.Parameter = {}));\nvar ResourceToImport;\n(function (ResourceToImport) {\n    ResourceToImport.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceToImport = exports.ResourceToImport || (exports.ResourceToImport = {}));\nvar RollbackTrigger;\n(function (RollbackTrigger) {\n    RollbackTrigger.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RollbackTrigger = exports.RollbackTrigger || (exports.RollbackTrigger = {}));\nvar RollbackConfiguration;\n(function (RollbackConfiguration) {\n    RollbackConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RollbackConfiguration = exports.RollbackConfiguration || (exports.RollbackConfiguration = {}));\nvar Tag;\n(function (Tag) {\n    Tag.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Tag = exports.Tag || (exports.Tag = {}));\nvar CreateChangeSetInput;\n(function (CreateChangeSetInput) {\n    CreateChangeSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateChangeSetInput = exports.CreateChangeSetInput || (exports.CreateChangeSetInput = {}));\nvar CreateChangeSetOutput;\n(function (CreateChangeSetOutput) {\n    CreateChangeSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateChangeSetOutput = exports.CreateChangeSetOutput || (exports.CreateChangeSetOutput = {}));\nclass InsufficientCapabilitiesException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"InsufficientCapabilitiesException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InsufficientCapabilitiesException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InsufficientCapabilitiesException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InsufficientCapabilitiesException = InsufficientCapabilitiesException;\nclass LimitExceededException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.LimitExceededException = LimitExceededException;\nvar OnFailure;\n(function (OnFailure) {\n    OnFailure[\"DELETE\"] = \"DELETE\";\n    OnFailure[\"DO_NOTHING\"] = \"DO_NOTHING\";\n    OnFailure[\"ROLLBACK\"] = \"ROLLBACK\";\n})(OnFailure = exports.OnFailure || (exports.OnFailure = {}));\nvar CreateStackInput;\n(function (CreateStackInput) {\n    CreateStackInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateStackInput = exports.CreateStackInput || (exports.CreateStackInput = {}));\nvar CreateStackOutput;\n(function (CreateStackOutput) {\n    CreateStackOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateStackOutput = exports.CreateStackOutput || (exports.CreateStackOutput = {}));\nvar DeploymentTargets;\n(function (DeploymentTargets) {\n    DeploymentTargets.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeploymentTargets = exports.DeploymentTargets || (exports.DeploymentTargets = {}));\nvar RegionConcurrencyType;\n(function (RegionConcurrencyType) {\n    RegionConcurrencyType[\"PARALLEL\"] = \"PARALLEL\";\n    RegionConcurrencyType[\"SEQUENTIAL\"] = \"SEQUENTIAL\";\n})(RegionConcurrencyType = exports.RegionConcurrencyType || (exports.RegionConcurrencyType = {}));\nvar StackSetOperationPreferences;\n(function (StackSetOperationPreferences) {\n    StackSetOperationPreferences.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackSetOperationPreferences = exports.StackSetOperationPreferences || (exports.StackSetOperationPreferences = {}));\nvar CreateStackInstancesInput;\n(function (CreateStackInstancesInput) {\n    CreateStackInstancesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateStackInstancesInput = exports.CreateStackInstancesInput || (exports.CreateStackInstancesInput = {}));\nvar CreateStackInstancesOutput;\n(function (CreateStackInstancesOutput) {\n    CreateStackInstancesOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateStackInstancesOutput = exports.CreateStackInstancesOutput || (exports.CreateStackInstancesOutput = {}));\nclass InvalidOperationException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidOperationException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidOperationException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidOperationException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidOperationException = InvalidOperationException;\nclass OperationIdAlreadyExistsException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"OperationIdAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OperationIdAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OperationIdAlreadyExistsException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OperationIdAlreadyExistsException = OperationIdAlreadyExistsException;\nclass OperationInProgressException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"OperationInProgressException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OperationInProgressException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OperationInProgressException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OperationInProgressException = OperationInProgressException;\nclass StackSetNotFoundException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"StackSetNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StackSetNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StackSetNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StackSetNotFoundException = StackSetNotFoundException;\nclass StaleRequestException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"StaleRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StaleRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StaleRequestException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StaleRequestException = StaleRequestException;\nclass CreatedButModifiedException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"CreatedButModifiedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"CreatedButModifiedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, CreatedButModifiedException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.CreatedButModifiedException = CreatedButModifiedException;\nvar ManagedExecution;\n(function (ManagedExecution) {\n    ManagedExecution.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ManagedExecution = exports.ManagedExecution || (exports.ManagedExecution = {}));\nvar CreateStackSetInput;\n(function (CreateStackSetInput) {\n    CreateStackSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateStackSetInput = exports.CreateStackSetInput || (exports.CreateStackSetInput = {}));\nvar CreateStackSetOutput;\n(function (CreateStackSetOutput) {\n    CreateStackSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateStackSetOutput = exports.CreateStackSetOutput || (exports.CreateStackSetOutput = {}));\nclass NameAlreadyExistsException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"NameAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"NameAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, NameAlreadyExistsException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.NameAlreadyExistsException = NameAlreadyExistsException;\nvar DeactivateTypeInput;\n(function (DeactivateTypeInput) {\n    DeactivateTypeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeactivateTypeInput = exports.DeactivateTypeInput || (exports.DeactivateTypeInput = {}));\nvar DeactivateTypeOutput;\n(function (DeactivateTypeOutput) {\n    DeactivateTypeOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeactivateTypeOutput = exports.DeactivateTypeOutput || (exports.DeactivateTypeOutput = {}));\nvar DeleteChangeSetInput;\n(function (DeleteChangeSetInput) {\n    DeleteChangeSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteChangeSetInput = exports.DeleteChangeSetInput || (exports.DeleteChangeSetInput = {}));\nvar DeleteChangeSetOutput;\n(function (DeleteChangeSetOutput) {\n    DeleteChangeSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteChangeSetOutput = exports.DeleteChangeSetOutput || (exports.DeleteChangeSetOutput = {}));\nclass InvalidChangeSetStatusException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidChangeSetStatusException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidChangeSetStatusException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidChangeSetStatusException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidChangeSetStatusException = InvalidChangeSetStatusException;\nvar DeleteStackInput;\n(function (DeleteStackInput) {\n    DeleteStackInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteStackInput = exports.DeleteStackInput || (exports.DeleteStackInput = {}));\nvar DeleteStackInstancesInput;\n(function (DeleteStackInstancesInput) {\n    DeleteStackInstancesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteStackInstancesInput = exports.DeleteStackInstancesInput || (exports.DeleteStackInstancesInput = {}));\nvar DeleteStackInstancesOutput;\n(function (DeleteStackInstancesOutput) {\n    DeleteStackInstancesOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteStackInstancesOutput = exports.DeleteStackInstancesOutput || (exports.DeleteStackInstancesOutput = {}));\nvar DeleteStackSetInput;\n(function (DeleteStackSetInput) {\n    DeleteStackSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteStackSetInput = exports.DeleteStackSetInput || (exports.DeleteStackSetInput = {}));\nvar DeleteStackSetOutput;\n(function (DeleteStackSetOutput) {\n    DeleteStackSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteStackSetOutput = exports.DeleteStackSetOutput || (exports.DeleteStackSetOutput = {}));\nclass StackSetNotEmptyException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"StackSetNotEmptyException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StackSetNotEmptyException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StackSetNotEmptyException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StackSetNotEmptyException = StackSetNotEmptyException;\nvar DeregisterTypeInput;\n(function (DeregisterTypeInput) {\n    DeregisterTypeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeregisterTypeInput = exports.DeregisterTypeInput || (exports.DeregisterTypeInput = {}));\nvar DeregisterTypeOutput;\n(function (DeregisterTypeOutput) {\n    DeregisterTypeOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeregisterTypeOutput = exports.DeregisterTypeOutput || (exports.DeregisterTypeOutput = {}));\nvar DescribeAccountLimitsInput;\n(function (DescribeAccountLimitsInput) {\n    DescribeAccountLimitsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeAccountLimitsInput = exports.DescribeAccountLimitsInput || (exports.DescribeAccountLimitsInput = {}));\nvar DescribeAccountLimitsOutput;\n(function (DescribeAccountLimitsOutput) {\n    DescribeAccountLimitsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeAccountLimitsOutput = exports.DescribeAccountLimitsOutput || (exports.DescribeAccountLimitsOutput = {}));\nvar DescribeChangeSetInput;\n(function (DescribeChangeSetInput) {\n    DescribeChangeSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeChangeSetInput = exports.DescribeChangeSetInput || (exports.DescribeChangeSetInput = {}));\nvar DescribeChangeSetOutput;\n(function (DescribeChangeSetOutput) {\n    DescribeChangeSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeChangeSetOutput = exports.DescribeChangeSetOutput || (exports.DescribeChangeSetOutput = {}));\nvar DescribeChangeSetHooksInput;\n(function (DescribeChangeSetHooksInput) {\n    DescribeChangeSetHooksInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeChangeSetHooksInput = exports.DescribeChangeSetHooksInput || (exports.DescribeChangeSetHooksInput = {}));\nvar DescribeChangeSetHooksOutput;\n(function (DescribeChangeSetHooksOutput) {\n    DescribeChangeSetHooksOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeChangeSetHooksOutput = exports.DescribeChangeSetHooksOutput || (exports.DescribeChangeSetHooksOutput = {}));\nvar DescribePublisherInput;\n(function (DescribePublisherInput) {\n    DescribePublisherInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribePublisherInput = exports.DescribePublisherInput || (exports.DescribePublisherInput = {}));\nvar IdentityProvider;\n(function (IdentityProvider) {\n    IdentityProvider[\"AWS_Marketplace\"] = \"AWS_Marketplace\";\n    IdentityProvider[\"Bitbucket\"] = \"Bitbucket\";\n    IdentityProvider[\"GitHub\"] = \"GitHub\";\n})(IdentityProvider = exports.IdentityProvider || (exports.IdentityProvider = {}));\nvar PublisherStatus;\n(function (PublisherStatus) {\n    PublisherStatus[\"UNVERIFIED\"] = \"UNVERIFIED\";\n    PublisherStatus[\"VERIFIED\"] = \"VERIFIED\";\n})(PublisherStatus = exports.PublisherStatus || (exports.PublisherStatus = {}));\nvar DescribePublisherOutput;\n(function (DescribePublisherOutput) {\n    DescribePublisherOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribePublisherOutput = exports.DescribePublisherOutput || (exports.DescribePublisherOutput = {}));\nvar DescribeStackDriftDetectionStatusInput;\n(function (DescribeStackDriftDetectionStatusInput) {\n    DescribeStackDriftDetectionStatusInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackDriftDetectionStatusInput = exports.DescribeStackDriftDetectionStatusInput || (exports.DescribeStackDriftDetectionStatusInput = {}));\nvar StackDriftDetectionStatus;\n(function (StackDriftDetectionStatus) {\n    StackDriftDetectionStatus[\"DETECTION_COMPLETE\"] = \"DETECTION_COMPLETE\";\n    StackDriftDetectionStatus[\"DETECTION_FAILED\"] = \"DETECTION_FAILED\";\n    StackDriftDetectionStatus[\"DETECTION_IN_PROGRESS\"] = \"DETECTION_IN_PROGRESS\";\n})(StackDriftDetectionStatus = exports.StackDriftDetectionStatus || (exports.StackDriftDetectionStatus = {}));\nvar StackDriftStatus;\n(function (StackDriftStatus) {\n    StackDriftStatus[\"DRIFTED\"] = \"DRIFTED\";\n    StackDriftStatus[\"IN_SYNC\"] = \"IN_SYNC\";\n    StackDriftStatus[\"NOT_CHECKED\"] = \"NOT_CHECKED\";\n    StackDriftStatus[\"UNKNOWN\"] = \"UNKNOWN\";\n})(StackDriftStatus = exports.StackDriftStatus || (exports.StackDriftStatus = {}));\nvar DescribeStackDriftDetectionStatusOutput;\n(function (DescribeStackDriftDetectionStatusOutput) {\n    DescribeStackDriftDetectionStatusOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackDriftDetectionStatusOutput = exports.DescribeStackDriftDetectionStatusOutput || (exports.DescribeStackDriftDetectionStatusOutput = {}));\nvar DescribeStackEventsInput;\n(function (DescribeStackEventsInput) {\n    DescribeStackEventsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackEventsInput = exports.DescribeStackEventsInput || (exports.DescribeStackEventsInput = {}));\nvar HookStatus;\n(function (HookStatus) {\n    HookStatus[\"HOOK_COMPLETE_FAILED\"] = \"HOOK_COMPLETE_FAILED\";\n    HookStatus[\"HOOK_COMPLETE_SUCCEEDED\"] = \"HOOK_COMPLETE_SUCCEEDED\";\n    HookStatus[\"HOOK_FAILED\"] = \"HOOK_FAILED\";\n    HookStatus[\"HOOK_IN_PROGRESS\"] = \"HOOK_IN_PROGRESS\";\n})(HookStatus = exports.HookStatus || (exports.HookStatus = {}));\nvar ResourceStatus;\n(function (ResourceStatus) {\n    ResourceStatus[\"CREATE_COMPLETE\"] = \"CREATE_COMPLETE\";\n    ResourceStatus[\"CREATE_FAILED\"] = \"CREATE_FAILED\";\n    ResourceStatus[\"CREATE_IN_PROGRESS\"] = \"CREATE_IN_PROGRESS\";\n    ResourceStatus[\"DELETE_COMPLETE\"] = \"DELETE_COMPLETE\";\n    ResourceStatus[\"DELETE_FAILED\"] = \"DELETE_FAILED\";\n    ResourceStatus[\"DELETE_IN_PROGRESS\"] = \"DELETE_IN_PROGRESS\";\n    ResourceStatus[\"DELETE_SKIPPED\"] = \"DELETE_SKIPPED\";\n    ResourceStatus[\"IMPORT_COMPLETE\"] = \"IMPORT_COMPLETE\";\n    ResourceStatus[\"IMPORT_FAILED\"] = \"IMPORT_FAILED\";\n    ResourceStatus[\"IMPORT_IN_PROGRESS\"] = \"IMPORT_IN_PROGRESS\";\n    ResourceStatus[\"IMPORT_ROLLBACK_COMPLETE\"] = \"IMPORT_ROLLBACK_COMPLETE\";\n    ResourceStatus[\"IMPORT_ROLLBACK_FAILED\"] = \"IMPORT_ROLLBACK_FAILED\";\n    ResourceStatus[\"IMPORT_ROLLBACK_IN_PROGRESS\"] = \"IMPORT_ROLLBACK_IN_PROGRESS\";\n    ResourceStatus[\"ROLLBACK_COMPLETE\"] = \"ROLLBACK_COMPLETE\";\n    ResourceStatus[\"ROLLBACK_FAILED\"] = \"ROLLBACK_FAILED\";\n    ResourceStatus[\"ROLLBACK_IN_PROGRESS\"] = \"ROLLBACK_IN_PROGRESS\";\n    ResourceStatus[\"UPDATE_COMPLETE\"] = \"UPDATE_COMPLETE\";\n    ResourceStatus[\"UPDATE_FAILED\"] = \"UPDATE_FAILED\";\n    ResourceStatus[\"UPDATE_IN_PROGRESS\"] = \"UPDATE_IN_PROGRESS\";\n    ResourceStatus[\"UPDATE_ROLLBACK_COMPLETE\"] = \"UPDATE_ROLLBACK_COMPLETE\";\n    ResourceStatus[\"UPDATE_ROLLBACK_FAILED\"] = \"UPDATE_ROLLBACK_FAILED\";\n    ResourceStatus[\"UPDATE_ROLLBACK_IN_PROGRESS\"] = \"UPDATE_ROLLBACK_IN_PROGRESS\";\n})(ResourceStatus = exports.ResourceStatus || (exports.ResourceStatus = {}));\nvar StackEvent;\n(function (StackEvent) {\n    StackEvent.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackEvent = exports.StackEvent || (exports.StackEvent = {}));\nvar DescribeStackEventsOutput;\n(function (DescribeStackEventsOutput) {\n    DescribeStackEventsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackEventsOutput = exports.DescribeStackEventsOutput || (exports.DescribeStackEventsOutput = {}));\nvar DescribeStackInstanceInput;\n(function (DescribeStackInstanceInput) {\n    DescribeStackInstanceInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackInstanceInput = exports.DescribeStackInstanceInput || (exports.DescribeStackInstanceInput = {}));\nvar StackInstanceComprehensiveStatus;\n(function (StackInstanceComprehensiveStatus) {\n    StackInstanceComprehensiveStatus.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackInstanceComprehensiveStatus = exports.StackInstanceComprehensiveStatus || (exports.StackInstanceComprehensiveStatus = {}));\nvar StackInstance;\n(function (StackInstance) {\n    StackInstance.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackInstance = exports.StackInstance || (exports.StackInstance = {}));\nvar DescribeStackInstanceOutput;\n(function (DescribeStackInstanceOutput) {\n    DescribeStackInstanceOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackInstanceOutput = exports.DescribeStackInstanceOutput || (exports.DescribeStackInstanceOutput = {}));\nclass StackInstanceNotFoundException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"StackInstanceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StackInstanceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StackInstanceNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StackInstanceNotFoundException = StackInstanceNotFoundException;\nvar DescribeStackResourceInput;\n(function (DescribeStackResourceInput) {\n    DescribeStackResourceInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackResourceInput = exports.DescribeStackResourceInput || (exports.DescribeStackResourceInput = {}));\nvar StackResourceDriftStatus;\n(function (StackResourceDriftStatus) {\n    StackResourceDriftStatus[\"DELETED\"] = \"DELETED\";\n    StackResourceDriftStatus[\"IN_SYNC\"] = \"IN_SYNC\";\n    StackResourceDriftStatus[\"MODIFIED\"] = \"MODIFIED\";\n    StackResourceDriftStatus[\"NOT_CHECKED\"] = \"NOT_CHECKED\";\n})(StackResourceDriftStatus = exports.StackResourceDriftStatus || (exports.StackResourceDriftStatus = {}));\nvar StackResourceDriftInformation;\n(function (StackResourceDriftInformation) {\n    StackResourceDriftInformation.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackResourceDriftInformation = exports.StackResourceDriftInformation || (exports.StackResourceDriftInformation = {}));\nvar StackResourceDetail;\n(function (StackResourceDetail) {\n    StackResourceDetail.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackResourceDetail = exports.StackResourceDetail || (exports.StackResourceDetail = {}));\nvar DescribeStackResourceOutput;\n(function (DescribeStackResourceOutput) {\n    DescribeStackResourceOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackResourceOutput = exports.DescribeStackResourceOutput || (exports.DescribeStackResourceOutput = {}));\nvar DescribeStackResourceDriftsInput;\n(function (DescribeStackResourceDriftsInput) {\n    DescribeStackResourceDriftsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackResourceDriftsInput = exports.DescribeStackResourceDriftsInput || (exports.DescribeStackResourceDriftsInput = {}));\nvar PhysicalResourceIdContextKeyValuePair;\n(function (PhysicalResourceIdContextKeyValuePair) {\n    PhysicalResourceIdContextKeyValuePair.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PhysicalResourceIdContextKeyValuePair = exports.PhysicalResourceIdContextKeyValuePair || (exports.PhysicalResourceIdContextKeyValuePair = {}));\nvar DifferenceType;\n(function (DifferenceType) {\n    DifferenceType[\"ADD\"] = \"ADD\";\n    DifferenceType[\"NOT_EQUAL\"] = \"NOT_EQUAL\";\n    DifferenceType[\"REMOVE\"] = \"REMOVE\";\n})(DifferenceType = exports.DifferenceType || (exports.DifferenceType = {}));\nvar PropertyDifference;\n(function (PropertyDifference) {\n    PropertyDifference.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PropertyDifference = exports.PropertyDifference || (exports.PropertyDifference = {}));\nvar StackResourceDrift;\n(function (StackResourceDrift) {\n    StackResourceDrift.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackResourceDrift = exports.StackResourceDrift || (exports.StackResourceDrift = {}));\nvar DescribeStackResourceDriftsOutput;\n(function (DescribeStackResourceDriftsOutput) {\n    DescribeStackResourceDriftsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackResourceDriftsOutput = exports.DescribeStackResourceDriftsOutput || (exports.DescribeStackResourceDriftsOutput = {}));\nvar DescribeStackResourcesInput;\n(function (DescribeStackResourcesInput) {\n    DescribeStackResourcesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackResourcesInput = exports.DescribeStackResourcesInput || (exports.DescribeStackResourcesInput = {}));\nvar StackResource;\n(function (StackResource) {\n    StackResource.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackResource = exports.StackResource || (exports.StackResource = {}));\nvar DescribeStackResourcesOutput;\n(function (DescribeStackResourcesOutput) {\n    DescribeStackResourcesOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackResourcesOutput = exports.DescribeStackResourcesOutput || (exports.DescribeStackResourcesOutput = {}));\nvar DescribeStacksInput;\n(function (DescribeStacksInput) {\n    DescribeStacksInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStacksInput = exports.DescribeStacksInput || (exports.DescribeStacksInput = {}));\nvar StackDriftInformation;\n(function (StackDriftInformation) {\n    StackDriftInformation.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackDriftInformation = exports.StackDriftInformation || (exports.StackDriftInformation = {}));\nvar Output;\n(function (Output) {\n    Output.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Output = exports.Output || (exports.Output = {}));\nvar StackStatus;\n(function (StackStatus) {\n    StackStatus[\"CREATE_COMPLETE\"] = \"CREATE_COMPLETE\";\n    StackStatus[\"CREATE_FAILED\"] = \"CREATE_FAILED\";\n    StackStatus[\"CREATE_IN_PROGRESS\"] = \"CREATE_IN_PROGRESS\";\n    StackStatus[\"DELETE_COMPLETE\"] = \"DELETE_COMPLETE\";\n    StackStatus[\"DELETE_FAILED\"] = \"DELETE_FAILED\";\n    StackStatus[\"DELETE_IN_PROGRESS\"] = \"DELETE_IN_PROGRESS\";\n    StackStatus[\"IMPORT_COMPLETE\"] = \"IMPORT_COMPLETE\";\n    StackStatus[\"IMPORT_IN_PROGRESS\"] = \"IMPORT_IN_PROGRESS\";\n    StackStatus[\"IMPORT_ROLLBACK_COMPLETE\"] = \"IMPORT_ROLLBACK_COMPLETE\";\n    StackStatus[\"IMPORT_ROLLBACK_FAILED\"] = \"IMPORT_ROLLBACK_FAILED\";\n    StackStatus[\"IMPORT_ROLLBACK_IN_PROGRESS\"] = \"IMPORT_ROLLBACK_IN_PROGRESS\";\n    StackStatus[\"REVIEW_IN_PROGRESS\"] = \"REVIEW_IN_PROGRESS\";\n    StackStatus[\"ROLLBACK_COMPLETE\"] = \"ROLLBACK_COMPLETE\";\n    StackStatus[\"ROLLBACK_FAILED\"] = \"ROLLBACK_FAILED\";\n    StackStatus[\"ROLLBACK_IN_PROGRESS\"] = \"ROLLBACK_IN_PROGRESS\";\n    StackStatus[\"UPDATE_COMPLETE\"] = \"UPDATE_COMPLETE\";\n    StackStatus[\"UPDATE_COMPLETE_CLEANUP_IN_PROGRESS\"] = \"UPDATE_COMPLETE_CLEANUP_IN_PROGRESS\";\n    StackStatus[\"UPDATE_FAILED\"] = \"UPDATE_FAILED\";\n    StackStatus[\"UPDATE_IN_PROGRESS\"] = \"UPDATE_IN_PROGRESS\";\n    StackStatus[\"UPDATE_ROLLBACK_COMPLETE\"] = \"UPDATE_ROLLBACK_COMPLETE\";\n    StackStatus[\"UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS\"] = \"UPDATE_ROLLBACK_COMPLETE_CLEANUP_IN_PROGRESS\";\n    StackStatus[\"UPDATE_ROLLBACK_FAILED\"] = \"UPDATE_ROLLBACK_FAILED\";\n    StackStatus[\"UPDATE_ROLLBACK_IN_PROGRESS\"] = \"UPDATE_ROLLBACK_IN_PROGRESS\";\n})(StackStatus = exports.StackStatus || (exports.StackStatus = {}));\nvar Stack;\n(function (Stack) {\n    Stack.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Stack = exports.Stack || (exports.Stack = {}));\nvar DescribeStacksOutput;\n(function (DescribeStacksOutput) {\n    DescribeStacksOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStacksOutput = exports.DescribeStacksOutput || (exports.DescribeStacksOutput = {}));\nvar DescribeStackSetInput;\n(function (DescribeStackSetInput) {\n    DescribeStackSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackSetInput = exports.DescribeStackSetInput || (exports.DescribeStackSetInput = {}));\nvar StackSetDriftDetectionStatus;\n(function (StackSetDriftDetectionStatus) {\n    StackSetDriftDetectionStatus[\"COMPLETED\"] = \"COMPLETED\";\n    StackSetDriftDetectionStatus[\"FAILED\"] = \"FAILED\";\n    StackSetDriftDetectionStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n    StackSetDriftDetectionStatus[\"PARTIAL_SUCCESS\"] = \"PARTIAL_SUCCESS\";\n    StackSetDriftDetectionStatus[\"STOPPED\"] = \"STOPPED\";\n})(StackSetDriftDetectionStatus = exports.StackSetDriftDetectionStatus || (exports.StackSetDriftDetectionStatus = {}));\nvar StackSetDriftStatus;\n(function (StackSetDriftStatus) {\n    StackSetDriftStatus[\"DRIFTED\"] = \"DRIFTED\";\n    StackSetDriftStatus[\"IN_SYNC\"] = \"IN_SYNC\";\n    StackSetDriftStatus[\"NOT_CHECKED\"] = \"NOT_CHECKED\";\n})(StackSetDriftStatus = exports.StackSetDriftStatus || (exports.StackSetDriftStatus = {}));\nvar StackSetDriftDetectionDetails;\n(function (StackSetDriftDetectionDetails) {\n    StackSetDriftDetectionDetails.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackSetDriftDetectionDetails = exports.StackSetDriftDetectionDetails || (exports.StackSetDriftDetectionDetails = {}));\nvar StackSet;\n(function (StackSet) {\n    StackSet.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackSet = exports.StackSet || (exports.StackSet = {}));\nvar DescribeStackSetOutput;\n(function (DescribeStackSetOutput) {\n    DescribeStackSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackSetOutput = exports.DescribeStackSetOutput || (exports.DescribeStackSetOutput = {}));\nvar DescribeStackSetOperationInput;\n(function (DescribeStackSetOperationInput) {\n    DescribeStackSetOperationInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackSetOperationInput = exports.DescribeStackSetOperationInput || (exports.DescribeStackSetOperationInput = {}));\nvar StackSetOperation;\n(function (StackSetOperation) {\n    StackSetOperation.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackSetOperation = exports.StackSetOperation || (exports.StackSetOperation = {}));\nvar DescribeStackSetOperationOutput;\n(function (DescribeStackSetOperationOutput) {\n    DescribeStackSetOperationOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeStackSetOperationOutput = exports.DescribeStackSetOperationOutput || (exports.DescribeStackSetOperationOutput = {}));\nclass OperationNotFoundException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"OperationNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OperationNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OperationNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OperationNotFoundException = OperationNotFoundException;\nvar DescribeTypeInput;\n(function (DescribeTypeInput) {\n    DescribeTypeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTypeInput = exports.DescribeTypeInput || (exports.DescribeTypeInput = {}));\nvar RequiredActivatedType;\n(function (RequiredActivatedType) {\n    RequiredActivatedType.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RequiredActivatedType = exports.RequiredActivatedType || (exports.RequiredActivatedType = {}));\nvar TypeTestsStatus;\n(function (TypeTestsStatus) {\n    TypeTestsStatus[\"FAILED\"] = \"FAILED\";\n    TypeTestsStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n    TypeTestsStatus[\"NOT_TESTED\"] = \"NOT_TESTED\";\n    TypeTestsStatus[\"PASSED\"] = \"PASSED\";\n})(TypeTestsStatus = exports.TypeTestsStatus || (exports.TypeTestsStatus = {}));\nvar DescribeTypeOutput;\n(function (DescribeTypeOutput) {\n    DescribeTypeOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTypeOutput = exports.DescribeTypeOutput || (exports.DescribeTypeOutput = {}));\nvar DescribeTypeRegistrationInput;\n(function (DescribeTypeRegistrationInput) {\n    DescribeTypeRegistrationInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTypeRegistrationInput = exports.DescribeTypeRegistrationInput || (exports.DescribeTypeRegistrationInput = {}));\nvar DescribeTypeRegistrationOutput;\n(function (DescribeTypeRegistrationOutput) {\n    DescribeTypeRegistrationOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DescribeTypeRegistrationOutput = exports.DescribeTypeRegistrationOutput || (exports.DescribeTypeRegistrationOutput = {}));\nvar DetectStackDriftInput;\n(function (DetectStackDriftInput) {\n    DetectStackDriftInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DetectStackDriftInput = exports.DetectStackDriftInput || (exports.DetectStackDriftInput = {}));\nvar DetectStackDriftOutput;\n(function (DetectStackDriftOutput) {\n    DetectStackDriftOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DetectStackDriftOutput = exports.DetectStackDriftOutput || (exports.DetectStackDriftOutput = {}));\nvar DetectStackResourceDriftInput;\n(function (DetectStackResourceDriftInput) {\n    DetectStackResourceDriftInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DetectStackResourceDriftInput = exports.DetectStackResourceDriftInput || (exports.DetectStackResourceDriftInput = {}));\nvar DetectStackResourceDriftOutput;\n(function (DetectStackResourceDriftOutput) {\n    DetectStackResourceDriftOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DetectStackResourceDriftOutput = exports.DetectStackResourceDriftOutput || (exports.DetectStackResourceDriftOutput = {}));\nvar DetectStackSetDriftInput;\n(function (DetectStackSetDriftInput) {\n    DetectStackSetDriftInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DetectStackSetDriftInput = exports.DetectStackSetDriftInput || (exports.DetectStackSetDriftInput = {}));\nvar DetectStackSetDriftOutput;\n(function (DetectStackSetDriftOutput) {\n    DetectStackSetDriftOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DetectStackSetDriftOutput = exports.DetectStackSetDriftOutput || (exports.DetectStackSetDriftOutput = {}));\nvar EstimateTemplateCostInput;\n(function (EstimateTemplateCostInput) {\n    EstimateTemplateCostInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EstimateTemplateCostInput = exports.EstimateTemplateCostInput || (exports.EstimateTemplateCostInput = {}));\nvar EstimateTemplateCostOutput;\n(function (EstimateTemplateCostOutput) {\n    EstimateTemplateCostOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EstimateTemplateCostOutput = exports.EstimateTemplateCostOutput || (exports.EstimateTemplateCostOutput = {}));\nvar ExecuteChangeSetInput;\n(function (ExecuteChangeSetInput) {\n    ExecuteChangeSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ExecuteChangeSetInput = exports.ExecuteChangeSetInput || (exports.ExecuteChangeSetInput = {}));\nvar ExecuteChangeSetOutput;\n(function (ExecuteChangeSetOutput) {\n    ExecuteChangeSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ExecuteChangeSetOutput = exports.ExecuteChangeSetOutput || (exports.ExecuteChangeSetOutput = {}));\nvar GetStackPolicyInput;\n(function (GetStackPolicyInput) {\n    GetStackPolicyInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetStackPolicyInput = exports.GetStackPolicyInput || (exports.GetStackPolicyInput = {}));\nvar GetStackPolicyOutput;\n(function (GetStackPolicyOutput) {\n    GetStackPolicyOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetStackPolicyOutput = exports.GetStackPolicyOutput || (exports.GetStackPolicyOutput = {}));\nvar TemplateStage;\n(function (TemplateStage) {\n    TemplateStage[\"Original\"] = \"Original\";\n    TemplateStage[\"Processed\"] = \"Processed\";\n})(TemplateStage = exports.TemplateStage || (exports.TemplateStage = {}));\nvar GetTemplateInput;\n(function (GetTemplateInput) {\n    GetTemplateInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetTemplateInput = exports.GetTemplateInput || (exports.GetTemplateInput = {}));\nvar GetTemplateOutput;\n(function (GetTemplateOutput) {\n    GetTemplateOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetTemplateOutput = exports.GetTemplateOutput || (exports.GetTemplateOutput = {}));\nvar GetTemplateSummaryInput;\n(function (GetTemplateSummaryInput) {\n    GetTemplateSummaryInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetTemplateSummaryInput = exports.GetTemplateSummaryInput || (exports.GetTemplateSummaryInput = {}));\nvar ParameterConstraints;\n(function (ParameterConstraints) {\n    ParameterConstraints.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ParameterConstraints = exports.ParameterConstraints || (exports.ParameterConstraints = {}));\nvar ParameterDeclaration;\n(function (ParameterDeclaration) {\n    ParameterDeclaration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ParameterDeclaration = exports.ParameterDeclaration || (exports.ParameterDeclaration = {}));\nvar ResourceIdentifierSummary;\n(function (ResourceIdentifierSummary) {\n    ResourceIdentifierSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceIdentifierSummary = exports.ResourceIdentifierSummary || (exports.ResourceIdentifierSummary = {}));\nvar GetTemplateSummaryOutput;\n(function (GetTemplateSummaryOutput) {\n    GetTemplateSummaryOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetTemplateSummaryOutput = exports.GetTemplateSummaryOutput || (exports.GetTemplateSummaryOutput = {}));\nvar ImportStacksToStackSetInput;\n(function (ImportStacksToStackSetInput) {\n    ImportStacksToStackSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ImportStacksToStackSetInput = exports.ImportStacksToStackSetInput || (exports.ImportStacksToStackSetInput = {}));\nvar ImportStacksToStackSetOutput;\n(function (ImportStacksToStackSetOutput) {\n    ImportStacksToStackSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ImportStacksToStackSetOutput = exports.ImportStacksToStackSetOutput || (exports.ImportStacksToStackSetOutput = {}));\nclass StackNotFoundException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"StackNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"StackNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, StackNotFoundException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.StackNotFoundException = StackNotFoundException;\nvar ListChangeSetsInput;\n(function (ListChangeSetsInput) {\n    ListChangeSetsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListChangeSetsInput = exports.ListChangeSetsInput || (exports.ListChangeSetsInput = {}));\nvar ListChangeSetsOutput;\n(function (ListChangeSetsOutput) {\n    ListChangeSetsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListChangeSetsOutput = exports.ListChangeSetsOutput || (exports.ListChangeSetsOutput = {}));\nvar ListExportsInput;\n(function (ListExportsInput) {\n    ListExportsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListExportsInput = exports.ListExportsInput || (exports.ListExportsInput = {}));\nvar Export;\n(function (Export) {\n    Export.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Export = exports.Export || (exports.Export = {}));\nvar ListExportsOutput;\n(function (ListExportsOutput) {\n    ListExportsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListExportsOutput = exports.ListExportsOutput || (exports.ListExportsOutput = {}));\nvar ListImportsInput;\n(function (ListImportsInput) {\n    ListImportsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListImportsInput = exports.ListImportsInput || (exports.ListImportsInput = {}));\nvar ListImportsOutput;\n(function (ListImportsOutput) {\n    ListImportsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListImportsOutput = exports.ListImportsOutput || (exports.ListImportsOutput = {}));\nvar StackInstanceFilter;\n(function (StackInstanceFilter) {\n    StackInstanceFilter.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackInstanceFilter = exports.StackInstanceFilter || (exports.StackInstanceFilter = {}));\nvar ListStackInstancesInput;\n(function (ListStackInstancesInput) {\n    ListStackInstancesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackInstancesInput = exports.ListStackInstancesInput || (exports.ListStackInstancesInput = {}));\nvar StackInstanceSummary;\n(function (StackInstanceSummary) {\n    StackInstanceSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackInstanceSummary = exports.StackInstanceSummary || (exports.StackInstanceSummary = {}));\nvar ListStackInstancesOutput;\n(function (ListStackInstancesOutput) {\n    ListStackInstancesOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackInstancesOutput = exports.ListStackInstancesOutput || (exports.ListStackInstancesOutput = {}));\nvar ListStackResourcesInput;\n(function (ListStackResourcesInput) {\n    ListStackResourcesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackResourcesInput = exports.ListStackResourcesInput || (exports.ListStackResourcesInput = {}));\nvar StackResourceDriftInformationSummary;\n(function (StackResourceDriftInformationSummary) {\n    StackResourceDriftInformationSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackResourceDriftInformationSummary = exports.StackResourceDriftInformationSummary || (exports.StackResourceDriftInformationSummary = {}));\nvar StackResourceSummary;\n(function (StackResourceSummary) {\n    StackResourceSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackResourceSummary = exports.StackResourceSummary || (exports.StackResourceSummary = {}));\nvar ListStackResourcesOutput;\n(function (ListStackResourcesOutput) {\n    ListStackResourcesOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackResourcesOutput = exports.ListStackResourcesOutput || (exports.ListStackResourcesOutput = {}));\nvar ListStacksInput;\n(function (ListStacksInput) {\n    ListStacksInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStacksInput = exports.ListStacksInput || (exports.ListStacksInput = {}));\nvar StackDriftInformationSummary;\n(function (StackDriftInformationSummary) {\n    StackDriftInformationSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackDriftInformationSummary = exports.StackDriftInformationSummary || (exports.StackDriftInformationSummary = {}));\nvar StackSummary;\n(function (StackSummary) {\n    StackSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackSummary = exports.StackSummary || (exports.StackSummary = {}));\nvar ListStacksOutput;\n(function (ListStacksOutput) {\n    ListStacksOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStacksOutput = exports.ListStacksOutput || (exports.ListStacksOutput = {}));\nvar ListStackSetOperationResultsInput;\n(function (ListStackSetOperationResultsInput) {\n    ListStackSetOperationResultsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackSetOperationResultsInput = exports.ListStackSetOperationResultsInput || (exports.ListStackSetOperationResultsInput = {}));\nvar StackSetOperationResultSummary;\n(function (StackSetOperationResultSummary) {\n    StackSetOperationResultSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackSetOperationResultSummary = exports.StackSetOperationResultSummary || (exports.StackSetOperationResultSummary = {}));\nvar ListStackSetOperationResultsOutput;\n(function (ListStackSetOperationResultsOutput) {\n    ListStackSetOperationResultsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackSetOperationResultsOutput = exports.ListStackSetOperationResultsOutput || (exports.ListStackSetOperationResultsOutput = {}));\nvar ListStackSetOperationsInput;\n(function (ListStackSetOperationsInput) {\n    ListStackSetOperationsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackSetOperationsInput = exports.ListStackSetOperationsInput || (exports.ListStackSetOperationsInput = {}));\nvar StackSetOperationSummary;\n(function (StackSetOperationSummary) {\n    StackSetOperationSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackSetOperationSummary = exports.StackSetOperationSummary || (exports.StackSetOperationSummary = {}));\nvar ListStackSetOperationsOutput;\n(function (ListStackSetOperationsOutput) {\n    ListStackSetOperationsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackSetOperationsOutput = exports.ListStackSetOperationsOutput || (exports.ListStackSetOperationsOutput = {}));\nvar ListStackSetsInput;\n(function (ListStackSetsInput) {\n    ListStackSetsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackSetsInput = exports.ListStackSetsInput || (exports.ListStackSetsInput = {}));\nvar StackSetSummary;\n(function (StackSetSummary) {\n    StackSetSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StackSetSummary = exports.StackSetSummary || (exports.StackSetSummary = {}));\nvar ListStackSetsOutput;\n(function (ListStackSetsOutput) {\n    ListStackSetsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListStackSetsOutput = exports.ListStackSetsOutput || (exports.ListStackSetsOutput = {}));\nvar ListTypeRegistrationsInput;\n(function (ListTypeRegistrationsInput) {\n    ListTypeRegistrationsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTypeRegistrationsInput = exports.ListTypeRegistrationsInput || (exports.ListTypeRegistrationsInput = {}));\nvar ListTypeRegistrationsOutput;\n(function (ListTypeRegistrationsOutput) {\n    ListTypeRegistrationsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTypeRegistrationsOutput = exports.ListTypeRegistrationsOutput || (exports.ListTypeRegistrationsOutput = {}));\nvar TypeFilters;\n(function (TypeFilters) {\n    TypeFilters.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TypeFilters = exports.TypeFilters || (exports.TypeFilters = {}));\nvar ListTypesInput;\n(function (ListTypesInput) {\n    ListTypesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTypesInput = exports.ListTypesInput || (exports.ListTypesInput = {}));\nvar TypeSummary;\n(function (TypeSummary) {\n    TypeSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TypeSummary = exports.TypeSummary || (exports.TypeSummary = {}));\nvar ListTypesOutput;\n(function (ListTypesOutput) {\n    ListTypesOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTypesOutput = exports.ListTypesOutput || (exports.ListTypesOutput = {}));\nvar ListTypeVersionsInput;\n(function (ListTypeVersionsInput) {\n    ListTypeVersionsInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTypeVersionsInput = exports.ListTypeVersionsInput || (exports.ListTypeVersionsInput = {}));\nvar TypeVersionSummary;\n(function (TypeVersionSummary) {\n    TypeVersionSummary.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TypeVersionSummary = exports.TypeVersionSummary || (exports.TypeVersionSummary = {}));\nvar ListTypeVersionsOutput;\n(function (ListTypeVersionsOutput) {\n    ListTypeVersionsOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTypeVersionsOutput = exports.ListTypeVersionsOutput || (exports.ListTypeVersionsOutput = {}));\nvar PublishTypeInput;\n(function (PublishTypeInput) {\n    PublishTypeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishTypeInput = exports.PublishTypeInput || (exports.PublishTypeInput = {}));\nvar PublishTypeOutput;\n(function (PublishTypeOutput) {\n    PublishTypeOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishTypeOutput = exports.PublishTypeOutput || (exports.PublishTypeOutput = {}));\nclass InvalidStateTransitionException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidStateTransitionException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidStateTransitionException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidStateTransitionException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.InvalidStateTransitionException = InvalidStateTransitionException;\nclass OperationStatusCheckFailedException extends CloudFormationServiceException_1.CloudFormationServiceException {\n    constructor(opts) {\n        super({\n            name: \"OperationStatusCheckFailedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"OperationStatusCheckFailedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, OperationStatusCheckFailedException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexports.OperationStatusCheckFailedException = OperationStatusCheckFailedException;\nvar OperationStatus;\n(function (OperationStatus) {\n    OperationStatus[\"FAILED\"] = \"FAILED\";\n    OperationStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n    OperationStatus[\"PENDING\"] = \"PENDING\";\n    OperationStatus[\"SUCCESS\"] = \"SUCCESS\";\n})(OperationStatus = exports.OperationStatus || (exports.OperationStatus = {}));\nvar HandlerErrorCode;\n(function (HandlerErrorCode) {\n    HandlerErrorCode[\"AccessDenied\"] = \"AccessDenied\";\n    HandlerErrorCode[\"AlreadyExists\"] = \"AlreadyExists\";\n    HandlerErrorCode[\"GeneralServiceException\"] = \"GeneralServiceException\";\n    HandlerErrorCode[\"HandlerInternalFailure\"] = \"HandlerInternalFailure\";\n    HandlerErrorCode[\"InternalFailure\"] = \"InternalFailure\";\n    HandlerErrorCode[\"InvalidCredentials\"] = \"InvalidCredentials\";\n    HandlerErrorCode[\"InvalidRequest\"] = \"InvalidRequest\";\n    HandlerErrorCode[\"InvalidTypeConfiguration\"] = \"InvalidTypeConfiguration\";\n    HandlerErrorCode[\"NetworkFailure\"] = \"NetworkFailure\";\n    HandlerErrorCode[\"NonCompliant\"] = \"NonCompliant\";\n    HandlerErrorCode[\"NotFound\"] = \"NotFound\";\n    HandlerErrorCode[\"NotUpdatable\"] = \"NotUpdatable\";\n    HandlerErrorCode[\"ResourceConflict\"] = \"ResourceConflict\";\n    HandlerErrorCode[\"ServiceInternalError\"] = \"ServiceInternalError\";\n    HandlerErrorCode[\"ServiceLimitExceeded\"] = \"ServiceLimitExceeded\";\n    HandlerErrorCode[\"ServiceTimeout\"] = \"NotStabilized\";\n    HandlerErrorCode[\"Throttling\"] = \"Throttling\";\n    HandlerErrorCode[\"Unknown\"] = \"Unknown\";\n})(HandlerErrorCode = exports.HandlerErrorCode || (exports.HandlerErrorCode = {}));\nvar RecordHandlerProgressInput;\n(function (RecordHandlerProgressInput) {\n    RecordHandlerProgressInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RecordHandlerProgressInput = exports.RecordHandlerProgressInput || (exports.RecordHandlerProgressInput = {}));\nvar RecordHandlerProgressOutput;\n(function (RecordHandlerProgressOutput) {\n    RecordHandlerProgressOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RecordHandlerProgressOutput = exports.RecordHandlerProgressOutput || (exports.RecordHandlerProgressOutput = {}));\nvar RegisterPublisherInput;\n(function (RegisterPublisherInput) {\n    RegisterPublisherInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegisterPublisherInput = exports.RegisterPublisherInput || (exports.RegisterPublisherInput = {}));\nvar RegisterPublisherOutput;\n(function (RegisterPublisherOutput) {\n    RegisterPublisherOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegisterPublisherOutput = exports.RegisterPublisherOutput || (exports.RegisterPublisherOutput = {}));\nvar RegisterTypeInput;\n(function (RegisterTypeInput) {\n    RegisterTypeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegisterTypeInput = exports.RegisterTypeInput || (exports.RegisterTypeInput = {}));\nvar RegisterTypeOutput;\n(function (RegisterTypeOutput) {\n    RegisterTypeOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegisterTypeOutput = exports.RegisterTypeOutput || (exports.RegisterTypeOutput = {}));\nvar RollbackStackInput;\n(function (RollbackStackInput) {\n    RollbackStackInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RollbackStackInput = exports.RollbackStackInput || (exports.RollbackStackInput = {}));\nvar RollbackStackOutput;\n(function (RollbackStackOutput) {\n    RollbackStackOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RollbackStackOutput = exports.RollbackStackOutput || (exports.RollbackStackOutput = {}));\nvar SetStackPolicyInput;\n(function (SetStackPolicyInput) {\n    SetStackPolicyInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetStackPolicyInput = exports.SetStackPolicyInput || (exports.SetStackPolicyInput = {}));\nvar SetTypeConfigurationInput;\n(function (SetTypeConfigurationInput) {\n    SetTypeConfigurationInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetTypeConfigurationInput = exports.SetTypeConfigurationInput || (exports.SetTypeConfigurationInput = {}));\nvar SetTypeConfigurationOutput;\n(function (SetTypeConfigurationOutput) {\n    SetTypeConfigurationOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetTypeConfigurationOutput = exports.SetTypeConfigurationOutput || (exports.SetTypeConfigurationOutput = {}));\nvar SetTypeDefaultVersionInput;\n(function (SetTypeDefaultVersionInput) {\n    SetTypeDefaultVersionInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetTypeDefaultVersionInput = exports.SetTypeDefaultVersionInput || (exports.SetTypeDefaultVersionInput = {}));\nvar SetTypeDefaultVersionOutput;\n(function (SetTypeDefaultVersionOutput) {\n    SetTypeDefaultVersionOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SetTypeDefaultVersionOutput = exports.SetTypeDefaultVersionOutput || (exports.SetTypeDefaultVersionOutput = {}));\nvar ResourceSignalStatus;\n(function (ResourceSignalStatus) {\n    ResourceSignalStatus[\"FAILURE\"] = \"FAILURE\";\n    ResourceSignalStatus[\"SUCCESS\"] = \"SUCCESS\";\n})(ResourceSignalStatus = exports.ResourceSignalStatus || (exports.ResourceSignalStatus = {}));\nvar SignalResourceInput;\n(function (SignalResourceInput) {\n    SignalResourceInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SignalResourceInput = exports.SignalResourceInput || (exports.SignalResourceInput = {}));\nvar StopStackSetOperationInput;\n(function (StopStackSetOperationInput) {\n    StopStackSetOperationInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StopStackSetOperationInput = exports.StopStackSetOperationInput || (exports.StopStackSetOperationInput = {}));\nvar StopStackSetOperationOutput;\n(function (StopStackSetOperationOutput) {\n    StopStackSetOperationOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(StopStackSetOperationOutput = exports.StopStackSetOperationOutput || (exports.StopStackSetOperationOutput = {}));\nvar TestTypeInput;\n(function (TestTypeInput) {\n    TestTypeInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TestTypeInput = exports.TestTypeInput || (exports.TestTypeInput = {}));\nvar TestTypeOutput;\n(function (TestTypeOutput) {\n    TestTypeOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TestTypeOutput = exports.TestTypeOutput || (exports.TestTypeOutput = {}));\nvar UpdateStackInput;\n(function (UpdateStackInput) {\n    UpdateStackInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateStackInput = exports.UpdateStackInput || (exports.UpdateStackInput = {}));\nvar UpdateStackOutput;\n(function (UpdateStackOutput) {\n    UpdateStackOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateStackOutput = exports.UpdateStackOutput || (exports.UpdateStackOutput = {}));\nvar UpdateStackInstancesInput;\n(function (UpdateStackInstancesInput) {\n    UpdateStackInstancesInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateStackInstancesInput = exports.UpdateStackInstancesInput || (exports.UpdateStackInstancesInput = {}));\nvar UpdateStackInstancesOutput;\n(function (UpdateStackInstancesOutput) {\n    UpdateStackInstancesOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateStackInstancesOutput = exports.UpdateStackInstancesOutput || (exports.UpdateStackInstancesOutput = {}));\nvar UpdateStackSetInput;\n(function (UpdateStackSetInput) {\n    UpdateStackSetInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateStackSetInput = exports.UpdateStackSetInput || (exports.UpdateStackSetInput = {}));\nvar UpdateStackSetOutput;\n(function (UpdateStackSetOutput) {\n    UpdateStackSetOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateStackSetOutput = exports.UpdateStackSetOutput || (exports.UpdateStackSetOutput = {}));\nvar UpdateTerminationProtectionInput;\n(function (UpdateTerminationProtectionInput) {\n    UpdateTerminationProtectionInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateTerminationProtectionInput = exports.UpdateTerminationProtectionInput || (exports.UpdateTerminationProtectionInput = {}));\nvar UpdateTerminationProtectionOutput;\n(function (UpdateTerminationProtectionOutput) {\n    UpdateTerminationProtectionOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateTerminationProtectionOutput = exports.UpdateTerminationProtectionOutput || (exports.UpdateTerminationProtectionOutput = {}));\nvar ValidateTemplateInput;\n(function (ValidateTemplateInput) {\n    ValidateTemplateInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ValidateTemplateInput = exports.ValidateTemplateInput || (exports.ValidateTemplateInput = {}));\nvar TemplateParameter;\n(function (TemplateParameter) {\n    TemplateParameter.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TemplateParameter = exports.TemplateParameter || (exports.TemplateParameter = {}));\nvar ValidateTemplateOutput;\n(function (ValidateTemplateOutput) {\n    ValidateTemplateOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ValidateTemplateOutput = exports.ValidateTemplateOutput || (exports.ValidateTemplateOutput = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateDescribeAccountLimits = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst DescribeAccountLimitsCommand_1 = require(\"../commands/DescribeAccountLimitsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new DescribeAccountLimitsCommand_1.DescribeAccountLimitsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.describeAccountLimits(input, ...args);\n};\nasync function* paginateDescribeAccountLimits(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateDescribeAccountLimits = paginateDescribeAccountLimits;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateDescribeStackEvents = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst DescribeStackEventsCommand_1 = require(\"../commands/DescribeStackEventsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new DescribeStackEventsCommand_1.DescribeStackEventsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.describeStackEvents(input, ...args);\n};\nasync function* paginateDescribeStackEvents(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateDescribeStackEvents = paginateDescribeStackEvents;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateDescribeStackResourceDrifts = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst DescribeStackResourceDriftsCommand_1 = require(\"../commands/DescribeStackResourceDriftsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new DescribeStackResourceDriftsCommand_1.DescribeStackResourceDriftsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.describeStackResourceDrifts(input, ...args);\n};\nasync function* paginateDescribeStackResourceDrifts(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateDescribeStackResourceDrifts = paginateDescribeStackResourceDrifts;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateDescribeStacks = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst DescribeStacksCommand_1 = require(\"../commands/DescribeStacksCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new DescribeStacksCommand_1.DescribeStacksCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.describeStacks(input, ...args);\n};\nasync function* paginateDescribeStacks(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateDescribeStacks = paginateDescribeStacks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListChangeSets = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListChangeSetsCommand_1 = require(\"../commands/ListChangeSetsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListChangeSetsCommand_1.ListChangeSetsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listChangeSets(input, ...args);\n};\nasync function* paginateListChangeSets(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListChangeSets = paginateListChangeSets;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListExports = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListExportsCommand_1 = require(\"../commands/ListExportsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListExportsCommand_1.ListExportsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listExports(input, ...args);\n};\nasync function* paginateListExports(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListExports = paginateListExports;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListImports = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListImportsCommand_1 = require(\"../commands/ListImportsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListImportsCommand_1.ListImportsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listImports(input, ...args);\n};\nasync function* paginateListImports(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListImports = paginateListImports;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListStackInstances = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListStackInstancesCommand_1 = require(\"../commands/ListStackInstancesCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListStackInstancesCommand_1.ListStackInstancesCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listStackInstances(input, ...args);\n};\nasync function* paginateListStackInstances(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListStackInstances = paginateListStackInstances;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListStackResources = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListStackResourcesCommand_1 = require(\"../commands/ListStackResourcesCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListStackResourcesCommand_1.ListStackResourcesCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listStackResources(input, ...args);\n};\nasync function* paginateListStackResources(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListStackResources = paginateListStackResources;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListStackSetOperationResults = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListStackSetOperationResultsCommand_1 = require(\"../commands/ListStackSetOperationResultsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListStackSetOperationResultsCommand_1.ListStackSetOperationResultsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listStackSetOperationResults(input, ...args);\n};\nasync function* paginateListStackSetOperationResults(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListStackSetOperationResults = paginateListStackSetOperationResults;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListStackSetOperations = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListStackSetOperationsCommand_1 = require(\"../commands/ListStackSetOperationsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListStackSetOperationsCommand_1.ListStackSetOperationsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listStackSetOperations(input, ...args);\n};\nasync function* paginateListStackSetOperations(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListStackSetOperations = paginateListStackSetOperations;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListStackSets = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListStackSetsCommand_1 = require(\"../commands/ListStackSetsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListStackSetsCommand_1.ListStackSetsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listStackSets(input, ...args);\n};\nasync function* paginateListStackSets(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListStackSets = paginateListStackSets;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListStacks = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListStacksCommand_1 = require(\"../commands/ListStacksCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListStacksCommand_1.ListStacksCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listStacks(input, ...args);\n};\nasync function* paginateListStacks(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListStacks = paginateListStacks;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListTypeRegistrations = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListTypeRegistrationsCommand_1 = require(\"../commands/ListTypeRegistrationsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListTypeRegistrationsCommand_1.ListTypeRegistrationsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listTypeRegistrations(input, ...args);\n};\nasync function* paginateListTypeRegistrations(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListTypeRegistrations = paginateListTypeRegistrations;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListTypeVersions = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListTypeVersionsCommand_1 = require(\"../commands/ListTypeVersionsCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListTypeVersionsCommand_1.ListTypeVersionsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listTypeVersions(input, ...args);\n};\nasync function* paginateListTypeVersions(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListTypeVersions = paginateListTypeVersions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListTypes = void 0;\nconst CloudFormation_1 = require(\"../CloudFormation\");\nconst CloudFormationClient_1 = require(\"../CloudFormationClient\");\nconst ListTypesCommand_1 = require(\"../commands/ListTypesCommand\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListTypesCommand_1.ListTypesCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listTypes(input, ...args);\n};\nasync function* paginateListTypes(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.NextToken = token;\n        input[\"MaxResults\"] = config.pageSize;\n        if (config.client instanceof CloudFormation_1.CloudFormation) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof CloudFormationClient_1.CloudFormationClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected CloudFormation | CloudFormationClient\");\n        }\n        yield page;\n        token = page.NextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListTypes = paginateListTypes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./DescribeAccountLimitsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackEventsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStackResourceDriftsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./DescribeStacksPaginator\"), exports);\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListChangeSetsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListExportsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListImportsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListStackInstancesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListStackResourcesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListStackSetOperationResultsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListStackSetOperationsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListStackSetsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListStacksPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListTypeRegistrationsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListTypeVersionsPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListTypesPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeAws_queryListTypeVersionsCommand = exports.serializeAws_queryListTypesCommand = exports.serializeAws_queryListTypeRegistrationsCommand = exports.serializeAws_queryListStackSetsCommand = exports.serializeAws_queryListStackSetOperationsCommand = exports.serializeAws_queryListStackSetOperationResultsCommand = exports.serializeAws_queryListStacksCommand = exports.serializeAws_queryListStackResourcesCommand = exports.serializeAws_queryListStackInstancesCommand = exports.serializeAws_queryListImportsCommand = exports.serializeAws_queryListExportsCommand = exports.serializeAws_queryListChangeSetsCommand = exports.serializeAws_queryImportStacksToStackSetCommand = exports.serializeAws_queryGetTemplateSummaryCommand = exports.serializeAws_queryGetTemplateCommand = exports.serializeAws_queryGetStackPolicyCommand = exports.serializeAws_queryExecuteChangeSetCommand = exports.serializeAws_queryEstimateTemplateCostCommand = exports.serializeAws_queryDetectStackSetDriftCommand = exports.serializeAws_queryDetectStackResourceDriftCommand = exports.serializeAws_queryDetectStackDriftCommand = exports.serializeAws_queryDescribeTypeRegistrationCommand = exports.serializeAws_queryDescribeTypeCommand = exports.serializeAws_queryDescribeStackSetOperationCommand = exports.serializeAws_queryDescribeStackSetCommand = exports.serializeAws_queryDescribeStacksCommand = exports.serializeAws_queryDescribeStackResourcesCommand = exports.serializeAws_queryDescribeStackResourceDriftsCommand = exports.serializeAws_queryDescribeStackResourceCommand = exports.serializeAws_queryDescribeStackInstanceCommand = exports.serializeAws_queryDescribeStackEventsCommand = exports.serializeAws_queryDescribeStackDriftDetectionStatusCommand = exports.serializeAws_queryDescribePublisherCommand = exports.serializeAws_queryDescribeChangeSetHooksCommand = exports.serializeAws_queryDescribeChangeSetCommand = exports.serializeAws_queryDescribeAccountLimitsCommand = exports.serializeAws_queryDeregisterTypeCommand = exports.serializeAws_queryDeleteStackSetCommand = exports.serializeAws_queryDeleteStackInstancesCommand = exports.serializeAws_queryDeleteStackCommand = exports.serializeAws_queryDeleteChangeSetCommand = exports.serializeAws_queryDeactivateTypeCommand = exports.serializeAws_queryCreateStackSetCommand = exports.serializeAws_queryCreateStackInstancesCommand = exports.serializeAws_queryCreateStackCommand = exports.serializeAws_queryCreateChangeSetCommand = exports.serializeAws_queryContinueUpdateRollbackCommand = exports.serializeAws_queryCancelUpdateStackCommand = exports.serializeAws_queryBatchDescribeTypeConfigurationsCommand = exports.serializeAws_queryActivateTypeCommand = void 0;\nexports.deserializeAws_queryExecuteChangeSetCommand = exports.deserializeAws_queryEstimateTemplateCostCommand = exports.deserializeAws_queryDetectStackSetDriftCommand = exports.deserializeAws_queryDetectStackResourceDriftCommand = exports.deserializeAws_queryDetectStackDriftCommand = exports.deserializeAws_queryDescribeTypeRegistrationCommand = exports.deserializeAws_queryDescribeTypeCommand = exports.deserializeAws_queryDescribeStackSetOperationCommand = exports.deserializeAws_queryDescribeStackSetCommand = exports.deserializeAws_queryDescribeStacksCommand = exports.deserializeAws_queryDescribeStackResourcesCommand = exports.deserializeAws_queryDescribeStackResourceDriftsCommand = exports.deserializeAws_queryDescribeStackResourceCommand = exports.deserializeAws_queryDescribeStackInstanceCommand = exports.deserializeAws_queryDescribeStackEventsCommand = exports.deserializeAws_queryDescribeStackDriftDetectionStatusCommand = exports.deserializeAws_queryDescribePublisherCommand = exports.deserializeAws_queryDescribeChangeSetHooksCommand = exports.deserializeAws_queryDescribeChangeSetCommand = exports.deserializeAws_queryDescribeAccountLimitsCommand = exports.deserializeAws_queryDeregisterTypeCommand = exports.deserializeAws_queryDeleteStackSetCommand = exports.deserializeAws_queryDeleteStackInstancesCommand = exports.deserializeAws_queryDeleteStackCommand = exports.deserializeAws_queryDeleteChangeSetCommand = exports.deserializeAws_queryDeactivateTypeCommand = exports.deserializeAws_queryCreateStackSetCommand = exports.deserializeAws_queryCreateStackInstancesCommand = exports.deserializeAws_queryCreateStackCommand = exports.deserializeAws_queryCreateChangeSetCommand = exports.deserializeAws_queryContinueUpdateRollbackCommand = exports.deserializeAws_queryCancelUpdateStackCommand = exports.deserializeAws_queryBatchDescribeTypeConfigurationsCommand = exports.deserializeAws_queryActivateTypeCommand = exports.serializeAws_queryValidateTemplateCommand = exports.serializeAws_queryUpdateTerminationProtectionCommand = exports.serializeAws_queryUpdateStackSetCommand = exports.serializeAws_queryUpdateStackInstancesCommand = exports.serializeAws_queryUpdateStackCommand = exports.serializeAws_queryTestTypeCommand = exports.serializeAws_queryStopStackSetOperationCommand = exports.serializeAws_querySignalResourceCommand = exports.serializeAws_querySetTypeDefaultVersionCommand = exports.serializeAws_querySetTypeConfigurationCommand = exports.serializeAws_querySetStackPolicyCommand = exports.serializeAws_queryRollbackStackCommand = exports.serializeAws_queryRegisterTypeCommand = exports.serializeAws_queryRegisterPublisherCommand = exports.serializeAws_queryRecordHandlerProgressCommand = exports.serializeAws_queryPublishTypeCommand = void 0;\nexports.deserializeAws_queryValidateTemplateCommand = exports.deserializeAws_queryUpdateTerminationProtectionCommand = exports.deserializeAws_queryUpdateStackSetCommand = exports.deserializeAws_queryUpdateStackInstancesCommand = exports.deserializeAws_queryUpdateStackCommand = exports.deserializeAws_queryTestTypeCommand = exports.deserializeAws_queryStopStackSetOperationCommand = exports.deserializeAws_querySignalResourceCommand = exports.deserializeAws_querySetTypeDefaultVersionCommand = exports.deserializeAws_querySetTypeConfigurationCommand = exports.deserializeAws_querySetStackPolicyCommand = exports.deserializeAws_queryRollbackStackCommand = exports.deserializeAws_queryRegisterTypeCommand = exports.deserializeAws_queryRegisterPublisherCommand = exports.deserializeAws_queryRecordHandlerProgressCommand = exports.deserializeAws_queryPublishTypeCommand = exports.deserializeAws_queryListTypeVersionsCommand = exports.deserializeAws_queryListTypesCommand = exports.deserializeAws_queryListTypeRegistrationsCommand = exports.deserializeAws_queryListStackSetsCommand = exports.deserializeAws_queryListStackSetOperationsCommand = exports.deserializeAws_queryListStackSetOperationResultsCommand = exports.deserializeAws_queryListStacksCommand = exports.deserializeAws_queryListStackResourcesCommand = exports.deserializeAws_queryListStackInstancesCommand = exports.deserializeAws_queryListImportsCommand = exports.deserializeAws_queryListExportsCommand = exports.deserializeAws_queryListChangeSetsCommand = exports.deserializeAws_queryImportStacksToStackSetCommand = exports.deserializeAws_queryGetTemplateSummaryCommand = exports.deserializeAws_queryGetTemplateCommand = exports.deserializeAws_queryGetStackPolicyCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst entities_1 = require(\"entities\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst uuid_1 = require(\"uuid\");\nconst CloudFormationServiceException_1 = require(\"../models/CloudFormationServiceException\");\nconst models_0_1 = require(\"../models/models_0\");\nconst serializeAws_queryActivateTypeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryActivateTypeInput(input, context),\n        Action: \"ActivateType\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryActivateTypeCommand = serializeAws_queryActivateTypeCommand;\nconst serializeAws_queryBatchDescribeTypeConfigurationsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryBatchDescribeTypeConfigurationsInput(input, context),\n        Action: \"BatchDescribeTypeConfigurations\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryBatchDescribeTypeConfigurationsCommand = serializeAws_queryBatchDescribeTypeConfigurationsCommand;\nconst serializeAws_queryCancelUpdateStackCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCancelUpdateStackInput(input, context),\n        Action: \"CancelUpdateStack\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCancelUpdateStackCommand = serializeAws_queryCancelUpdateStackCommand;\nconst serializeAws_queryContinueUpdateRollbackCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryContinueUpdateRollbackInput(input, context),\n        Action: \"ContinueUpdateRollback\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryContinueUpdateRollbackCommand = serializeAws_queryContinueUpdateRollbackCommand;\nconst serializeAws_queryCreateChangeSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateChangeSetInput(input, context),\n        Action: \"CreateChangeSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCreateChangeSetCommand = serializeAws_queryCreateChangeSetCommand;\nconst serializeAws_queryCreateStackCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateStackInput(input, context),\n        Action: \"CreateStack\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCreateStackCommand = serializeAws_queryCreateStackCommand;\nconst serializeAws_queryCreateStackInstancesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateStackInstancesInput(input, context),\n        Action: \"CreateStackInstances\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCreateStackInstancesCommand = serializeAws_queryCreateStackInstancesCommand;\nconst serializeAws_queryCreateStackSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryCreateStackSetInput(input, context),\n        Action: \"CreateStackSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryCreateStackSetCommand = serializeAws_queryCreateStackSetCommand;\nconst serializeAws_queryDeactivateTypeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeactivateTypeInput(input, context),\n        Action: \"DeactivateType\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeactivateTypeCommand = serializeAws_queryDeactivateTypeCommand;\nconst serializeAws_queryDeleteChangeSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteChangeSetInput(input, context),\n        Action: \"DeleteChangeSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeleteChangeSetCommand = serializeAws_queryDeleteChangeSetCommand;\nconst serializeAws_queryDeleteStackCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteStackInput(input, context),\n        Action: \"DeleteStack\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeleteStackCommand = serializeAws_queryDeleteStackCommand;\nconst serializeAws_queryDeleteStackInstancesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteStackInstancesInput(input, context),\n        Action: \"DeleteStackInstances\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeleteStackInstancesCommand = serializeAws_queryDeleteStackInstancesCommand;\nconst serializeAws_queryDeleteStackSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeleteStackSetInput(input, context),\n        Action: \"DeleteStackSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeleteStackSetCommand = serializeAws_queryDeleteStackSetCommand;\nconst serializeAws_queryDeregisterTypeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDeregisterTypeInput(input, context),\n        Action: \"DeregisterType\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDeregisterTypeCommand = serializeAws_queryDeregisterTypeCommand;\nconst serializeAws_queryDescribeAccountLimitsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeAccountLimitsInput(input, context),\n        Action: \"DescribeAccountLimits\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeAccountLimitsCommand = serializeAws_queryDescribeAccountLimitsCommand;\nconst serializeAws_queryDescribeChangeSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeChangeSetInput(input, context),\n        Action: \"DescribeChangeSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeChangeSetCommand = serializeAws_queryDescribeChangeSetCommand;\nconst serializeAws_queryDescribeChangeSetHooksCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeChangeSetHooksInput(input, context),\n        Action: \"DescribeChangeSetHooks\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeChangeSetHooksCommand = serializeAws_queryDescribeChangeSetHooksCommand;\nconst serializeAws_queryDescribePublisherCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribePublisherInput(input, context),\n        Action: \"DescribePublisher\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribePublisherCommand = serializeAws_queryDescribePublisherCommand;\nconst serializeAws_queryDescribeStackDriftDetectionStatusCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStackDriftDetectionStatusInput(input, context),\n        Action: \"DescribeStackDriftDetectionStatus\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStackDriftDetectionStatusCommand = serializeAws_queryDescribeStackDriftDetectionStatusCommand;\nconst serializeAws_queryDescribeStackEventsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStackEventsInput(input, context),\n        Action: \"DescribeStackEvents\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStackEventsCommand = serializeAws_queryDescribeStackEventsCommand;\nconst serializeAws_queryDescribeStackInstanceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStackInstanceInput(input, context),\n        Action: \"DescribeStackInstance\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStackInstanceCommand = serializeAws_queryDescribeStackInstanceCommand;\nconst serializeAws_queryDescribeStackResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStackResourceInput(input, context),\n        Action: \"DescribeStackResource\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStackResourceCommand = serializeAws_queryDescribeStackResourceCommand;\nconst serializeAws_queryDescribeStackResourceDriftsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStackResourceDriftsInput(input, context),\n        Action: \"DescribeStackResourceDrifts\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStackResourceDriftsCommand = serializeAws_queryDescribeStackResourceDriftsCommand;\nconst serializeAws_queryDescribeStackResourcesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStackResourcesInput(input, context),\n        Action: \"DescribeStackResources\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStackResourcesCommand = serializeAws_queryDescribeStackResourcesCommand;\nconst serializeAws_queryDescribeStacksCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStacksInput(input, context),\n        Action: \"DescribeStacks\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStacksCommand = serializeAws_queryDescribeStacksCommand;\nconst serializeAws_queryDescribeStackSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStackSetInput(input, context),\n        Action: \"DescribeStackSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStackSetCommand = serializeAws_queryDescribeStackSetCommand;\nconst serializeAws_queryDescribeStackSetOperationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeStackSetOperationInput(input, context),\n        Action: \"DescribeStackSetOperation\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeStackSetOperationCommand = serializeAws_queryDescribeStackSetOperationCommand;\nconst serializeAws_queryDescribeTypeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeTypeInput(input, context),\n        Action: \"DescribeType\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeTypeCommand = serializeAws_queryDescribeTypeCommand;\nconst serializeAws_queryDescribeTypeRegistrationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDescribeTypeRegistrationInput(input, context),\n        Action: \"DescribeTypeRegistration\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDescribeTypeRegistrationCommand = serializeAws_queryDescribeTypeRegistrationCommand;\nconst serializeAws_queryDetectStackDriftCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDetectStackDriftInput(input, context),\n        Action: \"DetectStackDrift\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDetectStackDriftCommand = serializeAws_queryDetectStackDriftCommand;\nconst serializeAws_queryDetectStackResourceDriftCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDetectStackResourceDriftInput(input, context),\n        Action: \"DetectStackResourceDrift\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDetectStackResourceDriftCommand = serializeAws_queryDetectStackResourceDriftCommand;\nconst serializeAws_queryDetectStackSetDriftCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDetectStackSetDriftInput(input, context),\n        Action: \"DetectStackSetDrift\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDetectStackSetDriftCommand = serializeAws_queryDetectStackSetDriftCommand;\nconst serializeAws_queryEstimateTemplateCostCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryEstimateTemplateCostInput(input, context),\n        Action: \"EstimateTemplateCost\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryEstimateTemplateCostCommand = serializeAws_queryEstimateTemplateCostCommand;\nconst serializeAws_queryExecuteChangeSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryExecuteChangeSetInput(input, context),\n        Action: \"ExecuteChangeSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryExecuteChangeSetCommand = serializeAws_queryExecuteChangeSetCommand;\nconst serializeAws_queryGetStackPolicyCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetStackPolicyInput(input, context),\n        Action: \"GetStackPolicy\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetStackPolicyCommand = serializeAws_queryGetStackPolicyCommand;\nconst serializeAws_queryGetTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetTemplateInput(input, context),\n        Action: \"GetTemplate\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetTemplateCommand = serializeAws_queryGetTemplateCommand;\nconst serializeAws_queryGetTemplateSummaryCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetTemplateSummaryInput(input, context),\n        Action: \"GetTemplateSummary\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetTemplateSummaryCommand = serializeAws_queryGetTemplateSummaryCommand;\nconst serializeAws_queryImportStacksToStackSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryImportStacksToStackSetInput(input, context),\n        Action: \"ImportStacksToStackSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryImportStacksToStackSetCommand = serializeAws_queryImportStacksToStackSetCommand;\nconst serializeAws_queryListChangeSetsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListChangeSetsInput(input, context),\n        Action: \"ListChangeSets\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListChangeSetsCommand = serializeAws_queryListChangeSetsCommand;\nconst serializeAws_queryListExportsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListExportsInput(input, context),\n        Action: \"ListExports\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListExportsCommand = serializeAws_queryListExportsCommand;\nconst serializeAws_queryListImportsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListImportsInput(input, context),\n        Action: \"ListImports\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListImportsCommand = serializeAws_queryListImportsCommand;\nconst serializeAws_queryListStackInstancesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListStackInstancesInput(input, context),\n        Action: \"ListStackInstances\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListStackInstancesCommand = serializeAws_queryListStackInstancesCommand;\nconst serializeAws_queryListStackResourcesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListStackResourcesInput(input, context),\n        Action: \"ListStackResources\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListStackResourcesCommand = serializeAws_queryListStackResourcesCommand;\nconst serializeAws_queryListStacksCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListStacksInput(input, context),\n        Action: \"ListStacks\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListStacksCommand = serializeAws_queryListStacksCommand;\nconst serializeAws_queryListStackSetOperationResultsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListStackSetOperationResultsInput(input, context),\n        Action: \"ListStackSetOperationResults\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListStackSetOperationResultsCommand = serializeAws_queryListStackSetOperationResultsCommand;\nconst serializeAws_queryListStackSetOperationsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListStackSetOperationsInput(input, context),\n        Action: \"ListStackSetOperations\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListStackSetOperationsCommand = serializeAws_queryListStackSetOperationsCommand;\nconst serializeAws_queryListStackSetsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListStackSetsInput(input, context),\n        Action: \"ListStackSets\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListStackSetsCommand = serializeAws_queryListStackSetsCommand;\nconst serializeAws_queryListTypeRegistrationsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListTypeRegistrationsInput(input, context),\n        Action: \"ListTypeRegistrations\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListTypeRegistrationsCommand = serializeAws_queryListTypeRegistrationsCommand;\nconst serializeAws_queryListTypesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListTypesInput(input, context),\n        Action: \"ListTypes\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListTypesCommand = serializeAws_queryListTypesCommand;\nconst serializeAws_queryListTypeVersionsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryListTypeVersionsInput(input, context),\n        Action: \"ListTypeVersions\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryListTypeVersionsCommand = serializeAws_queryListTypeVersionsCommand;\nconst serializeAws_queryPublishTypeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryPublishTypeInput(input, context),\n        Action: \"PublishType\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryPublishTypeCommand = serializeAws_queryPublishTypeCommand;\nconst serializeAws_queryRecordHandlerProgressCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryRecordHandlerProgressInput(input, context),\n        Action: \"RecordHandlerProgress\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryRecordHandlerProgressCommand = serializeAws_queryRecordHandlerProgressCommand;\nconst serializeAws_queryRegisterPublisherCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryRegisterPublisherInput(input, context),\n        Action: \"RegisterPublisher\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryRegisterPublisherCommand = serializeAws_queryRegisterPublisherCommand;\nconst serializeAws_queryRegisterTypeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryRegisterTypeInput(input, context),\n        Action: \"RegisterType\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryRegisterTypeCommand = serializeAws_queryRegisterTypeCommand;\nconst serializeAws_queryRollbackStackCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryRollbackStackInput(input, context),\n        Action: \"RollbackStack\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryRollbackStackCommand = serializeAws_queryRollbackStackCommand;\nconst serializeAws_querySetStackPolicyCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetStackPolicyInput(input, context),\n        Action: \"SetStackPolicy\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySetStackPolicyCommand = serializeAws_querySetStackPolicyCommand;\nconst serializeAws_querySetTypeConfigurationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetTypeConfigurationInput(input, context),\n        Action: \"SetTypeConfiguration\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySetTypeConfigurationCommand = serializeAws_querySetTypeConfigurationCommand;\nconst serializeAws_querySetTypeDefaultVersionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySetTypeDefaultVersionInput(input, context),\n        Action: \"SetTypeDefaultVersion\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySetTypeDefaultVersionCommand = serializeAws_querySetTypeDefaultVersionCommand;\nconst serializeAws_querySignalResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_querySignalResourceInput(input, context),\n        Action: \"SignalResource\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_querySignalResourceCommand = serializeAws_querySignalResourceCommand;\nconst serializeAws_queryStopStackSetOperationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryStopStackSetOperationInput(input, context),\n        Action: \"StopStackSetOperation\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryStopStackSetOperationCommand = serializeAws_queryStopStackSetOperationCommand;\nconst serializeAws_queryTestTypeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryTestTypeInput(input, context),\n        Action: \"TestType\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryTestTypeCommand = serializeAws_queryTestTypeCommand;\nconst serializeAws_queryUpdateStackCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateStackInput(input, context),\n        Action: \"UpdateStack\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryUpdateStackCommand = serializeAws_queryUpdateStackCommand;\nconst serializeAws_queryUpdateStackInstancesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateStackInstancesInput(input, context),\n        Action: \"UpdateStackInstances\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryUpdateStackInstancesCommand = serializeAws_queryUpdateStackInstancesCommand;\nconst serializeAws_queryUpdateStackSetCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateStackSetInput(input, context),\n        Action: \"UpdateStackSet\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryUpdateStackSetCommand = serializeAws_queryUpdateStackSetCommand;\nconst serializeAws_queryUpdateTerminationProtectionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryUpdateTerminationProtectionInput(input, context),\n        Action: \"UpdateTerminationProtection\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryUpdateTerminationProtectionCommand = serializeAws_queryUpdateTerminationProtectionCommand;\nconst serializeAws_queryValidateTemplateCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryValidateTemplateInput(input, context),\n        Action: \"ValidateTemplate\",\n        Version: \"2010-05-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryValidateTemplateCommand = serializeAws_queryValidateTemplateCommand;\nconst deserializeAws_queryActivateTypeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryActivateTypeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryActivateTypeOutput(data.ActivateTypeResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryActivateTypeCommand = deserializeAws_queryActivateTypeCommand;\nconst deserializeAws_queryActivateTypeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeNotFoundException\":\n            throw await deserializeAws_queryTypeNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryBatchDescribeTypeConfigurationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryBatchDescribeTypeConfigurationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryBatchDescribeTypeConfigurationsOutput(data.BatchDescribeTypeConfigurationsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryBatchDescribeTypeConfigurationsCommand = deserializeAws_queryBatchDescribeTypeConfigurationsCommand;\nconst deserializeAws_queryBatchDescribeTypeConfigurationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeConfigurationNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeConfigurationNotFoundException\":\n            throw await deserializeAws_queryTypeConfigurationNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryCancelUpdateStackCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCancelUpdateStackCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCancelUpdateStackCommand = deserializeAws_queryCancelUpdateStackCommand;\nconst deserializeAws_queryCancelUpdateStackCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"TokenAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#TokenAlreadyExistsException\":\n            throw await deserializeAws_queryTokenAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryContinueUpdateRollbackCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryContinueUpdateRollbackCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryContinueUpdateRollbackOutput(data.ContinueUpdateRollbackResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryContinueUpdateRollbackCommand = deserializeAws_queryContinueUpdateRollbackCommand;\nconst deserializeAws_queryContinueUpdateRollbackCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"TokenAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#TokenAlreadyExistsException\":\n            throw await deserializeAws_queryTokenAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryCreateChangeSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateChangeSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateChangeSetOutput(data.CreateChangeSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCreateChangeSetCommand = deserializeAws_queryCreateChangeSetCommand;\nconst deserializeAws_queryCreateChangeSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#AlreadyExistsException\":\n            throw await deserializeAws_queryAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"InsufficientCapabilitiesException\":\n        case \"com.amazonaws.cloudformation#InsufficientCapabilitiesException\":\n            throw await deserializeAws_queryInsufficientCapabilitiesExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cloudformation#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryCreateStackCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateStackCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateStackOutput(data.CreateStackResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCreateStackCommand = deserializeAws_queryCreateStackCommand;\nconst deserializeAws_queryCreateStackCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#AlreadyExistsException\":\n            throw await deserializeAws_queryAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"InsufficientCapabilitiesException\":\n        case \"com.amazonaws.cloudformation#InsufficientCapabilitiesException\":\n            throw await deserializeAws_queryInsufficientCapabilitiesExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cloudformation#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        case \"TokenAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#TokenAlreadyExistsException\":\n            throw await deserializeAws_queryTokenAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryCreateStackInstancesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateStackInstancesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateStackInstancesOutput(data.CreateStackInstancesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCreateStackInstancesCommand = deserializeAws_queryCreateStackInstancesCommand;\nconst deserializeAws_queryCreateStackInstancesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidOperationException\":\n        case \"com.amazonaws.cloudformation#InvalidOperationException\":\n            throw await deserializeAws_queryInvalidOperationExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cloudformation#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        case \"OperationIdAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#OperationIdAlreadyExistsException\":\n            throw await deserializeAws_queryOperationIdAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"OperationInProgressException\":\n        case \"com.amazonaws.cloudformation#OperationInProgressException\":\n            throw await deserializeAws_queryOperationInProgressExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        case \"StaleRequestException\":\n        case \"com.amazonaws.cloudformation#StaleRequestException\":\n            throw await deserializeAws_queryStaleRequestExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryCreateStackSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryCreateStackSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryCreateStackSetOutput(data.CreateStackSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryCreateStackSetCommand = deserializeAws_queryCreateStackSetCommand;\nconst deserializeAws_queryCreateStackSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CreatedButModifiedException\":\n        case \"com.amazonaws.cloudformation#CreatedButModifiedException\":\n            throw await deserializeAws_queryCreatedButModifiedExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cloudformation#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        case \"NameAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#NameAlreadyExistsException\":\n            throw await deserializeAws_queryNameAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDeactivateTypeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeactivateTypeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeactivateTypeOutput(data.DeactivateTypeResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeactivateTypeCommand = deserializeAws_queryDeactivateTypeCommand;\nconst deserializeAws_queryDeactivateTypeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeNotFoundException\":\n            throw await deserializeAws_queryTypeNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDeleteChangeSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteChangeSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteChangeSetOutput(data.DeleteChangeSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeleteChangeSetCommand = deserializeAws_queryDeleteChangeSetCommand;\nconst deserializeAws_queryDeleteChangeSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidChangeSetStatusException\":\n        case \"com.amazonaws.cloudformation#InvalidChangeSetStatusException\":\n            throw await deserializeAws_queryInvalidChangeSetStatusExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDeleteStackCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteStackCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeleteStackCommand = deserializeAws_queryDeleteStackCommand;\nconst deserializeAws_queryDeleteStackCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"TokenAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#TokenAlreadyExistsException\":\n            throw await deserializeAws_queryTokenAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDeleteStackInstancesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteStackInstancesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteStackInstancesOutput(data.DeleteStackInstancesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeleteStackInstancesCommand = deserializeAws_queryDeleteStackInstancesCommand;\nconst deserializeAws_queryDeleteStackInstancesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidOperationException\":\n        case \"com.amazonaws.cloudformation#InvalidOperationException\":\n            throw await deserializeAws_queryInvalidOperationExceptionResponse(parsedOutput, context);\n        case \"OperationIdAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#OperationIdAlreadyExistsException\":\n            throw await deserializeAws_queryOperationIdAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"OperationInProgressException\":\n        case \"com.amazonaws.cloudformation#OperationInProgressException\":\n            throw await deserializeAws_queryOperationInProgressExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        case \"StaleRequestException\":\n        case \"com.amazonaws.cloudformation#StaleRequestException\":\n            throw await deserializeAws_queryStaleRequestExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDeleteStackSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeleteStackSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeleteStackSetOutput(data.DeleteStackSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeleteStackSetCommand = deserializeAws_queryDeleteStackSetCommand;\nconst deserializeAws_queryDeleteStackSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"OperationInProgressException\":\n        case \"com.amazonaws.cloudformation#OperationInProgressException\":\n            throw await deserializeAws_queryOperationInProgressExceptionResponse(parsedOutput, context);\n        case \"StackSetNotEmptyException\":\n        case \"com.amazonaws.cloudformation#StackSetNotEmptyException\":\n            throw await deserializeAws_queryStackSetNotEmptyExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDeregisterTypeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDeregisterTypeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDeregisterTypeOutput(data.DeregisterTypeResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDeregisterTypeCommand = deserializeAws_queryDeregisterTypeCommand;\nconst deserializeAws_queryDeregisterTypeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeNotFoundException\":\n            throw await deserializeAws_queryTypeNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeAccountLimitsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeAccountLimitsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeAccountLimitsOutput(data.DescribeAccountLimitsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeAccountLimitsCommand = deserializeAws_queryDescribeAccountLimitsCommand;\nconst deserializeAws_queryDescribeAccountLimitsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeChangeSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeChangeSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeChangeSetOutput(data.DescribeChangeSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeChangeSetCommand = deserializeAws_queryDescribeChangeSetCommand;\nconst deserializeAws_queryDescribeChangeSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ChangeSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#ChangeSetNotFoundException\":\n            throw await deserializeAws_queryChangeSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeChangeSetHooksCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeChangeSetHooksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeChangeSetHooksOutput(data.DescribeChangeSetHooksResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeChangeSetHooksCommand = deserializeAws_queryDescribeChangeSetHooksCommand;\nconst deserializeAws_queryDescribeChangeSetHooksCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ChangeSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#ChangeSetNotFoundException\":\n            throw await deserializeAws_queryChangeSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribePublisherCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribePublisherCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribePublisherOutput(data.DescribePublisherResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribePublisherCommand = deserializeAws_queryDescribePublisherCommand;\nconst deserializeAws_queryDescribePublisherCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStackDriftDetectionStatusCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStackDriftDetectionStatusCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStackDriftDetectionStatusOutput(data.DescribeStackDriftDetectionStatusResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStackDriftDetectionStatusCommand = deserializeAws_queryDescribeStackDriftDetectionStatusCommand;\nconst deserializeAws_queryDescribeStackDriftDetectionStatusCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStackEventsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStackEventsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStackEventsOutput(data.DescribeStackEventsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStackEventsCommand = deserializeAws_queryDescribeStackEventsCommand;\nconst deserializeAws_queryDescribeStackEventsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStackInstanceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStackInstanceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStackInstanceOutput(data.DescribeStackInstanceResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStackInstanceCommand = deserializeAws_queryDescribeStackInstanceCommand;\nconst deserializeAws_queryDescribeStackInstanceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"StackInstanceNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackInstanceNotFoundException\":\n            throw await deserializeAws_queryStackInstanceNotFoundExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStackResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStackResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStackResourceOutput(data.DescribeStackResourceResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStackResourceCommand = deserializeAws_queryDescribeStackResourceCommand;\nconst deserializeAws_queryDescribeStackResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStackResourceDriftsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStackResourceDriftsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStackResourceDriftsOutput(data.DescribeStackResourceDriftsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStackResourceDriftsCommand = deserializeAws_queryDescribeStackResourceDriftsCommand;\nconst deserializeAws_queryDescribeStackResourceDriftsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStackResourcesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStackResourcesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStackResourcesOutput(data.DescribeStackResourcesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStackResourcesCommand = deserializeAws_queryDescribeStackResourcesCommand;\nconst deserializeAws_queryDescribeStackResourcesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStacksCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStacksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStacksOutput(data.DescribeStacksResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStacksCommand = deserializeAws_queryDescribeStacksCommand;\nconst deserializeAws_queryDescribeStacksCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStackSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStackSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStackSetOutput(data.DescribeStackSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStackSetCommand = deserializeAws_queryDescribeStackSetCommand;\nconst deserializeAws_queryDescribeStackSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeStackSetOperationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeStackSetOperationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeStackSetOperationOutput(data.DescribeStackSetOperationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeStackSetOperationCommand = deserializeAws_queryDescribeStackSetOperationCommand;\nconst deserializeAws_queryDescribeStackSetOperationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"OperationNotFoundException\":\n        case \"com.amazonaws.cloudformation#OperationNotFoundException\":\n            throw await deserializeAws_queryOperationNotFoundExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeTypeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeTypeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeTypeOutput(data.DescribeTypeResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeTypeCommand = deserializeAws_queryDescribeTypeCommand;\nconst deserializeAws_queryDescribeTypeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeNotFoundException\":\n            throw await deserializeAws_queryTypeNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDescribeTypeRegistrationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDescribeTypeRegistrationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDescribeTypeRegistrationOutput(data.DescribeTypeRegistrationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDescribeTypeRegistrationCommand = deserializeAws_queryDescribeTypeRegistrationCommand;\nconst deserializeAws_queryDescribeTypeRegistrationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDetectStackDriftCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDetectStackDriftCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDetectStackDriftOutput(data.DetectStackDriftResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDetectStackDriftCommand = deserializeAws_queryDetectStackDriftCommand;\nconst deserializeAws_queryDetectStackDriftCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDetectStackResourceDriftCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDetectStackResourceDriftCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDetectStackResourceDriftOutput(data.DetectStackResourceDriftResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDetectStackResourceDriftCommand = deserializeAws_queryDetectStackResourceDriftCommand;\nconst deserializeAws_queryDetectStackResourceDriftCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDetectStackSetDriftCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDetectStackSetDriftCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDetectStackSetDriftOutput(data.DetectStackSetDriftResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDetectStackSetDriftCommand = deserializeAws_queryDetectStackSetDriftCommand;\nconst deserializeAws_queryDetectStackSetDriftCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidOperationException\":\n        case \"com.amazonaws.cloudformation#InvalidOperationException\":\n            throw await deserializeAws_queryInvalidOperationExceptionResponse(parsedOutput, context);\n        case \"OperationInProgressException\":\n        case \"com.amazonaws.cloudformation#OperationInProgressException\":\n            throw await deserializeAws_queryOperationInProgressExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryEstimateTemplateCostCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryEstimateTemplateCostCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryEstimateTemplateCostOutput(data.EstimateTemplateCostResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryEstimateTemplateCostCommand = deserializeAws_queryEstimateTemplateCostCommand;\nconst deserializeAws_queryEstimateTemplateCostCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryExecuteChangeSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryExecuteChangeSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryExecuteChangeSetOutput(data.ExecuteChangeSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryExecuteChangeSetCommand = deserializeAws_queryExecuteChangeSetCommand;\nconst deserializeAws_queryExecuteChangeSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ChangeSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#ChangeSetNotFoundException\":\n            throw await deserializeAws_queryChangeSetNotFoundExceptionResponse(parsedOutput, context);\n        case \"InsufficientCapabilitiesException\":\n        case \"com.amazonaws.cloudformation#InsufficientCapabilitiesException\":\n            throw await deserializeAws_queryInsufficientCapabilitiesExceptionResponse(parsedOutput, context);\n        case \"InvalidChangeSetStatusException\":\n        case \"com.amazonaws.cloudformation#InvalidChangeSetStatusException\":\n            throw await deserializeAws_queryInvalidChangeSetStatusExceptionResponse(parsedOutput, context);\n        case \"TokenAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#TokenAlreadyExistsException\":\n            throw await deserializeAws_queryTokenAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryGetStackPolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetStackPolicyCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetStackPolicyOutput(data.GetStackPolicyResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetStackPolicyCommand = deserializeAws_queryGetStackPolicyCommand;\nconst deserializeAws_queryGetStackPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryGetTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetTemplateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetTemplateOutput(data.GetTemplateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetTemplateCommand = deserializeAws_queryGetTemplateCommand;\nconst deserializeAws_queryGetTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ChangeSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#ChangeSetNotFoundException\":\n            throw await deserializeAws_queryChangeSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryGetTemplateSummaryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetTemplateSummaryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetTemplateSummaryOutput(data.GetTemplateSummaryResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetTemplateSummaryCommand = deserializeAws_queryGetTemplateSummaryCommand;\nconst deserializeAws_queryGetTemplateSummaryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryImportStacksToStackSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryImportStacksToStackSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryImportStacksToStackSetOutput(data.ImportStacksToStackSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryImportStacksToStackSetCommand = deserializeAws_queryImportStacksToStackSetCommand;\nconst deserializeAws_queryImportStacksToStackSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidOperationException\":\n        case \"com.amazonaws.cloudformation#InvalidOperationException\":\n            throw await deserializeAws_queryInvalidOperationExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.cloudformation#LimitExceededException\":\n            throw await deserializeAws_queryLimitExceededExceptionResponse(parsedOutput, context);\n        case \"OperationIdAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#OperationIdAlreadyExistsException\":\n            throw await deserializeAws_queryOperationIdAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"OperationInProgressException\":\n        case \"com.amazonaws.cloudformation#OperationInProgressException\":\n            throw await deserializeAws_queryOperationInProgressExceptionResponse(parsedOutput, context);\n        case \"StackNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackNotFoundException\":\n            throw await deserializeAws_queryStackNotFoundExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        case \"StaleRequestException\":\n        case \"com.amazonaws.cloudformation#StaleRequestException\":\n            throw await deserializeAws_queryStaleRequestExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListChangeSetsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListChangeSetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListChangeSetsOutput(data.ListChangeSetsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListChangeSetsCommand = deserializeAws_queryListChangeSetsCommand;\nconst deserializeAws_queryListChangeSetsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListExportsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListExportsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListExportsOutput(data.ListExportsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListExportsCommand = deserializeAws_queryListExportsCommand;\nconst deserializeAws_queryListExportsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListImportsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListImportsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListImportsOutput(data.ListImportsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListImportsCommand = deserializeAws_queryListImportsCommand;\nconst deserializeAws_queryListImportsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListStackInstancesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListStackInstancesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListStackInstancesOutput(data.ListStackInstancesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListStackInstancesCommand = deserializeAws_queryListStackInstancesCommand;\nconst deserializeAws_queryListStackInstancesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListStackResourcesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListStackResourcesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListStackResourcesOutput(data.ListStackResourcesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListStackResourcesCommand = deserializeAws_queryListStackResourcesCommand;\nconst deserializeAws_queryListStackResourcesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListStacksCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListStacksCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListStacksOutput(data.ListStacksResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListStacksCommand = deserializeAws_queryListStacksCommand;\nconst deserializeAws_queryListStacksCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListStackSetOperationResultsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListStackSetOperationResultsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListStackSetOperationResultsOutput(data.ListStackSetOperationResultsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListStackSetOperationResultsCommand = deserializeAws_queryListStackSetOperationResultsCommand;\nconst deserializeAws_queryListStackSetOperationResultsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"OperationNotFoundException\":\n        case \"com.amazonaws.cloudformation#OperationNotFoundException\":\n            throw await deserializeAws_queryOperationNotFoundExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListStackSetOperationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListStackSetOperationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListStackSetOperationsOutput(data.ListStackSetOperationsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListStackSetOperationsCommand = deserializeAws_queryListStackSetOperationsCommand;\nconst deserializeAws_queryListStackSetOperationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListStackSetsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListStackSetsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListStackSetsOutput(data.ListStackSetsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListStackSetsCommand = deserializeAws_queryListStackSetsCommand;\nconst deserializeAws_queryListStackSetsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListTypeRegistrationsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListTypeRegistrationsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListTypeRegistrationsOutput(data.ListTypeRegistrationsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListTypeRegistrationsCommand = deserializeAws_queryListTypeRegistrationsCommand;\nconst deserializeAws_queryListTypeRegistrationsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListTypesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListTypesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListTypesOutput(data.ListTypesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListTypesCommand = deserializeAws_queryListTypesCommand;\nconst deserializeAws_queryListTypesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryListTypeVersionsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryListTypeVersionsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryListTypeVersionsOutput(data.ListTypeVersionsResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryListTypeVersionsCommand = deserializeAws_queryListTypeVersionsCommand;\nconst deserializeAws_queryListTypeVersionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryPublishTypeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryPublishTypeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryPublishTypeOutput(data.PublishTypeResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryPublishTypeCommand = deserializeAws_queryPublishTypeCommand;\nconst deserializeAws_queryPublishTypeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeNotFoundException\":\n            throw await deserializeAws_queryTypeNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryRecordHandlerProgressCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryRecordHandlerProgressCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryRecordHandlerProgressOutput(data.RecordHandlerProgressResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryRecordHandlerProgressCommand = deserializeAws_queryRecordHandlerProgressCommand;\nconst deserializeAws_queryRecordHandlerProgressCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidStateTransitionException\":\n        case \"com.amazonaws.cloudformation#InvalidStateTransitionException\":\n            throw await deserializeAws_queryInvalidStateTransitionExceptionResponse(parsedOutput, context);\n        case \"OperationStatusCheckFailedException\":\n        case \"com.amazonaws.cloudformation#OperationStatusCheckFailedException\":\n            throw await deserializeAws_queryOperationStatusCheckFailedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryRegisterPublisherCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryRegisterPublisherCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryRegisterPublisherOutput(data.RegisterPublisherResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryRegisterPublisherCommand = deserializeAws_queryRegisterPublisherCommand;\nconst deserializeAws_queryRegisterPublisherCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryRegisterTypeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryRegisterTypeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryRegisterTypeOutput(data.RegisterTypeResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryRegisterTypeCommand = deserializeAws_queryRegisterTypeCommand;\nconst deserializeAws_queryRegisterTypeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryRollbackStackCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryRollbackStackCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryRollbackStackOutput(data.RollbackStackResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryRollbackStackCommand = deserializeAws_queryRollbackStackCommand;\nconst deserializeAws_queryRollbackStackCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"TokenAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#TokenAlreadyExistsException\":\n            throw await deserializeAws_queryTokenAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_querySetStackPolicyCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetStackPolicyCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySetStackPolicyCommand = deserializeAws_querySetStackPolicyCommand;\nconst deserializeAws_querySetStackPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_querySetTypeConfigurationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetTypeConfigurationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetTypeConfigurationOutput(data.SetTypeConfigurationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySetTypeConfigurationCommand = deserializeAws_querySetTypeConfigurationCommand;\nconst deserializeAws_querySetTypeConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeNotFoundException\":\n            throw await deserializeAws_queryTypeNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_querySetTypeDefaultVersionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySetTypeDefaultVersionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_querySetTypeDefaultVersionOutput(data.SetTypeDefaultVersionResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySetTypeDefaultVersionCommand = deserializeAws_querySetTypeDefaultVersionCommand;\nconst deserializeAws_querySetTypeDefaultVersionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeNotFoundException\":\n            throw await deserializeAws_queryTypeNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_querySignalResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_querySignalResourceCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_querySignalResourceCommand = deserializeAws_querySignalResourceCommand;\nconst deserializeAws_querySignalResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryStopStackSetOperationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryStopStackSetOperationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryStopStackSetOperationOutput(data.StopStackSetOperationResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryStopStackSetOperationCommand = deserializeAws_queryStopStackSetOperationCommand;\nconst deserializeAws_queryStopStackSetOperationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidOperationException\":\n        case \"com.amazonaws.cloudformation#InvalidOperationException\":\n            throw await deserializeAws_queryInvalidOperationExceptionResponse(parsedOutput, context);\n        case \"OperationNotFoundException\":\n        case \"com.amazonaws.cloudformation#OperationNotFoundException\":\n            throw await deserializeAws_queryOperationNotFoundExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryTestTypeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryTestTypeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryTestTypeOutput(data.TestTypeResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryTestTypeCommand = deserializeAws_queryTestTypeCommand;\nconst deserializeAws_queryTestTypeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CFNRegistryException\":\n        case \"com.amazonaws.cloudformation#CFNRegistryException\":\n            throw await deserializeAws_queryCFNRegistryExceptionResponse(parsedOutput, context);\n        case \"TypeNotFoundException\":\n        case \"com.amazonaws.cloudformation#TypeNotFoundException\":\n            throw await deserializeAws_queryTypeNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryUpdateStackCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateStackCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUpdateStackOutput(data.UpdateStackResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryUpdateStackCommand = deserializeAws_queryUpdateStackCommand;\nconst deserializeAws_queryUpdateStackCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InsufficientCapabilitiesException\":\n        case \"com.amazonaws.cloudformation#InsufficientCapabilitiesException\":\n            throw await deserializeAws_queryInsufficientCapabilitiesExceptionResponse(parsedOutput, context);\n        case \"TokenAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#TokenAlreadyExistsException\":\n            throw await deserializeAws_queryTokenAlreadyExistsExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryUpdateStackInstancesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateStackInstancesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUpdateStackInstancesOutput(data.UpdateStackInstancesResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryUpdateStackInstancesCommand = deserializeAws_queryUpdateStackInstancesCommand;\nconst deserializeAws_queryUpdateStackInstancesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidOperationException\":\n        case \"com.amazonaws.cloudformation#InvalidOperationException\":\n            throw await deserializeAws_queryInvalidOperationExceptionResponse(parsedOutput, context);\n        case \"OperationIdAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#OperationIdAlreadyExistsException\":\n            throw await deserializeAws_queryOperationIdAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"OperationInProgressException\":\n        case \"com.amazonaws.cloudformation#OperationInProgressException\":\n            throw await deserializeAws_queryOperationInProgressExceptionResponse(parsedOutput, context);\n        case \"StackInstanceNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackInstanceNotFoundException\":\n            throw await deserializeAws_queryStackInstanceNotFoundExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        case \"StaleRequestException\":\n        case \"com.amazonaws.cloudformation#StaleRequestException\":\n            throw await deserializeAws_queryStaleRequestExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryUpdateStackSetCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateStackSetCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUpdateStackSetOutput(data.UpdateStackSetResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryUpdateStackSetCommand = deserializeAws_queryUpdateStackSetCommand;\nconst deserializeAws_queryUpdateStackSetCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidOperationException\":\n        case \"com.amazonaws.cloudformation#InvalidOperationException\":\n            throw await deserializeAws_queryInvalidOperationExceptionResponse(parsedOutput, context);\n        case \"OperationIdAlreadyExistsException\":\n        case \"com.amazonaws.cloudformation#OperationIdAlreadyExistsException\":\n            throw await deserializeAws_queryOperationIdAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"OperationInProgressException\":\n        case \"com.amazonaws.cloudformation#OperationInProgressException\":\n            throw await deserializeAws_queryOperationInProgressExceptionResponse(parsedOutput, context);\n        case \"StackInstanceNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackInstanceNotFoundException\":\n            throw await deserializeAws_queryStackInstanceNotFoundExceptionResponse(parsedOutput, context);\n        case \"StackSetNotFoundException\":\n        case \"com.amazonaws.cloudformation#StackSetNotFoundException\":\n            throw await deserializeAws_queryStackSetNotFoundExceptionResponse(parsedOutput, context);\n        case \"StaleRequestException\":\n        case \"com.amazonaws.cloudformation#StaleRequestException\":\n            throw await deserializeAws_queryStaleRequestExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryUpdateTerminationProtectionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryUpdateTerminationProtectionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryUpdateTerminationProtectionOutput(data.UpdateTerminationProtectionResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryUpdateTerminationProtectionCommand = deserializeAws_queryUpdateTerminationProtectionCommand;\nconst deserializeAws_queryUpdateTerminationProtectionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryValidateTemplateCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryValidateTemplateCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryValidateTemplateOutput(data.ValidateTemplateResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryValidateTemplateCommand = deserializeAws_queryValidateTemplateCommand;\nconst deserializeAws_queryValidateTemplateCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new CloudFormationServiceException_1.CloudFormationServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryAlreadyExistsException(body.Error, context);\n    const exception = new models_0_1.AlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryCFNRegistryExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryCFNRegistryException(body.Error, context);\n    const exception = new models_0_1.CFNRegistryException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryChangeSetNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryChangeSetNotFoundException(body.Error, context);\n    const exception = new models_0_1.ChangeSetNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryCreatedButModifiedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryCreatedButModifiedException(body.Error, context);\n    const exception = new models_0_1.CreatedButModifiedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInsufficientCapabilitiesExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInsufficientCapabilitiesException(body.Error, context);\n    const exception = new models_0_1.InsufficientCapabilitiesException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidChangeSetStatusExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidChangeSetStatusException(body.Error, context);\n    const exception = new models_0_1.InvalidChangeSetStatusException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidOperationExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidOperationException(body.Error, context);\n    const exception = new models_0_1.InvalidOperationException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidStateTransitionExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidStateTransitionException(body.Error, context);\n    const exception = new models_0_1.InvalidStateTransitionException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryLimitExceededException(body.Error, context);\n    const exception = new models_0_1.LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryNameAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryNameAlreadyExistsException(body.Error, context);\n    const exception = new models_0_1.NameAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryOperationIdAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryOperationIdAlreadyExistsException(body.Error, context);\n    const exception = new models_0_1.OperationIdAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryOperationInProgressExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryOperationInProgressException(body.Error, context);\n    const exception = new models_0_1.OperationInProgressException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryOperationNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryOperationNotFoundException(body.Error, context);\n    const exception = new models_0_1.OperationNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryOperationStatusCheckFailedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryOperationStatusCheckFailedException(body.Error, context);\n    const exception = new models_0_1.OperationStatusCheckFailedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryStackInstanceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryStackInstanceNotFoundException(body.Error, context);\n    const exception = new models_0_1.StackInstanceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryStackNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryStackNotFoundException(body.Error, context);\n    const exception = new models_0_1.StackNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryStackSetNotEmptyExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryStackSetNotEmptyException(body.Error, context);\n    const exception = new models_0_1.StackSetNotEmptyException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryStackSetNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryStackSetNotFoundException(body.Error, context);\n    const exception = new models_0_1.StackSetNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryStaleRequestExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryStaleRequestException(body.Error, context);\n    const exception = new models_0_1.StaleRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryTokenAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTokenAlreadyExistsException(body.Error, context);\n    const exception = new models_0_1.TokenAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryTypeConfigurationNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTypeConfigurationNotFoundException(body.Error, context);\n    const exception = new models_0_1.TypeConfigurationNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryTypeNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryTypeNotFoundException(body.Error, context);\n    const exception = new models_0_1.TypeNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst serializeAws_queryAccountList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryActivateTypeInput = (input, context) => {\n    const entries = {};\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.PublicTypeArn !== undefined && input.PublicTypeArn !== null) {\n        entries[\"PublicTypeArn\"] = input.PublicTypeArn;\n    }\n    if (input.PublisherId !== undefined && input.PublisherId !== null) {\n        entries[\"PublisherId\"] = input.PublisherId;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.TypeNameAlias !== undefined && input.TypeNameAlias !== null) {\n        entries[\"TypeNameAlias\"] = input.TypeNameAlias;\n    }\n    if (input.AutoUpdate !== undefined && input.AutoUpdate !== null) {\n        entries[\"AutoUpdate\"] = input.AutoUpdate;\n    }\n    if (input.LoggingConfig !== undefined && input.LoggingConfig !== null) {\n        const memberEntries = serializeAws_queryLoggingConfig(input.LoggingConfig, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `LoggingConfig.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExecutionRoleArn !== undefined && input.ExecutionRoleArn !== null) {\n        entries[\"ExecutionRoleArn\"] = input.ExecutionRoleArn;\n    }\n    if (input.VersionBump !== undefined && input.VersionBump !== null) {\n        entries[\"VersionBump\"] = input.VersionBump;\n    }\n    if (input.MajorVersion !== undefined && input.MajorVersion !== null) {\n        entries[\"MajorVersion\"] = input.MajorVersion;\n    }\n    return entries;\n};\nconst serializeAws_queryAutoDeployment = (input, context) => {\n    const entries = {};\n    if (input.Enabled !== undefined && input.Enabled !== null) {\n        entries[\"Enabled\"] = input.Enabled;\n    }\n    if (input.RetainStacksOnAccountRemoval !== undefined && input.RetainStacksOnAccountRemoval !== null) {\n        entries[\"RetainStacksOnAccountRemoval\"] = input.RetainStacksOnAccountRemoval;\n    }\n    return entries;\n};\nconst serializeAws_queryBatchDescribeTypeConfigurationsInput = (input, context) => {\n    const entries = {};\n    if (input.TypeConfigurationIdentifiers !== undefined && input.TypeConfigurationIdentifiers !== null) {\n        const memberEntries = serializeAws_queryTypeConfigurationIdentifiers(input.TypeConfigurationIdentifiers, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TypeConfigurationIdentifiers.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryCancelUpdateStackInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    return entries;\n};\nconst serializeAws_queryCapabilities = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryContinueUpdateRollbackInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.RoleARN !== undefined && input.RoleARN !== null) {\n        entries[\"RoleARN\"] = input.RoleARN;\n    }\n    if (input.ResourcesToSkip !== undefined && input.ResourcesToSkip !== null) {\n        const memberEntries = serializeAws_queryResourcesToSkip(input.ResourcesToSkip, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ResourcesToSkip.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    return entries;\n};\nconst serializeAws_queryCreateChangeSetInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.TemplateBody !== undefined && input.TemplateBody !== null) {\n        entries[\"TemplateBody\"] = input.TemplateBody;\n    }\n    if (input.TemplateURL !== undefined && input.TemplateURL !== null) {\n        entries[\"TemplateURL\"] = input.TemplateURL;\n    }\n    if (input.UsePreviousTemplate !== undefined && input.UsePreviousTemplate !== null) {\n        entries[\"UsePreviousTemplate\"] = input.UsePreviousTemplate;\n    }\n    if (input.Parameters !== undefined && input.Parameters !== null) {\n        const memberEntries = serializeAws_queryParameters(input.Parameters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Parameters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Capabilities !== undefined && input.Capabilities !== null) {\n        const memberEntries = serializeAws_queryCapabilities(input.Capabilities, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Capabilities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ResourceTypes !== undefined && input.ResourceTypes !== null) {\n        const memberEntries = serializeAws_queryResourceTypes(input.ResourceTypes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ResourceTypes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.RoleARN !== undefined && input.RoleARN !== null) {\n        entries[\"RoleARN\"] = input.RoleARN;\n    }\n    if (input.RollbackConfiguration !== undefined && input.RollbackConfiguration !== null) {\n        const memberEntries = serializeAws_queryRollbackConfiguration(input.RollbackConfiguration, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RollbackConfiguration.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.NotificationARNs !== undefined && input.NotificationARNs !== null) {\n        const memberEntries = serializeAws_queryNotificationARNs(input.NotificationARNs, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `NotificationARNs.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_queryTags(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ChangeSetName !== undefined && input.ChangeSetName !== null) {\n        entries[\"ChangeSetName\"] = input.ChangeSetName;\n    }\n    if (input.ClientToken !== undefined && input.ClientToken !== null) {\n        entries[\"ClientToken\"] = input.ClientToken;\n    }\n    if (input.Description !== undefined && input.Description !== null) {\n        entries[\"Description\"] = input.Description;\n    }\n    if (input.ChangeSetType !== undefined && input.ChangeSetType !== null) {\n        entries[\"ChangeSetType\"] = input.ChangeSetType;\n    }\n    if (input.ResourcesToImport !== undefined && input.ResourcesToImport !== null) {\n        const memberEntries = serializeAws_queryResourcesToImport(input.ResourcesToImport, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ResourcesToImport.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.IncludeNestedStacks !== undefined && input.IncludeNestedStacks !== null) {\n        entries[\"IncludeNestedStacks\"] = input.IncludeNestedStacks;\n    }\n    return entries;\n};\nconst serializeAws_queryCreateStackInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.TemplateBody !== undefined && input.TemplateBody !== null) {\n        entries[\"TemplateBody\"] = input.TemplateBody;\n    }\n    if (input.TemplateURL !== undefined && input.TemplateURL !== null) {\n        entries[\"TemplateURL\"] = input.TemplateURL;\n    }\n    if (input.Parameters !== undefined && input.Parameters !== null) {\n        const memberEntries = serializeAws_queryParameters(input.Parameters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Parameters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DisableRollback !== undefined && input.DisableRollback !== null) {\n        entries[\"DisableRollback\"] = input.DisableRollback;\n    }\n    if (input.RollbackConfiguration !== undefined && input.RollbackConfiguration !== null) {\n        const memberEntries = serializeAws_queryRollbackConfiguration(input.RollbackConfiguration, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RollbackConfiguration.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TimeoutInMinutes !== undefined && input.TimeoutInMinutes !== null) {\n        entries[\"TimeoutInMinutes\"] = input.TimeoutInMinutes;\n    }\n    if (input.NotificationARNs !== undefined && input.NotificationARNs !== null) {\n        const memberEntries = serializeAws_queryNotificationARNs(input.NotificationARNs, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `NotificationARNs.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Capabilities !== undefined && input.Capabilities !== null) {\n        const memberEntries = serializeAws_queryCapabilities(input.Capabilities, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Capabilities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ResourceTypes !== undefined && input.ResourceTypes !== null) {\n        const memberEntries = serializeAws_queryResourceTypes(input.ResourceTypes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ResourceTypes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.RoleARN !== undefined && input.RoleARN !== null) {\n        entries[\"RoleARN\"] = input.RoleARN;\n    }\n    if (input.OnFailure !== undefined && input.OnFailure !== null) {\n        entries[\"OnFailure\"] = input.OnFailure;\n    }\n    if (input.StackPolicyBody !== undefined && input.StackPolicyBody !== null) {\n        entries[\"StackPolicyBody\"] = input.StackPolicyBody;\n    }\n    if (input.StackPolicyURL !== undefined && input.StackPolicyURL !== null) {\n        entries[\"StackPolicyURL\"] = input.StackPolicyURL;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_queryTags(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    if (input.EnableTerminationProtection !== undefined && input.EnableTerminationProtection !== null) {\n        entries[\"EnableTerminationProtection\"] = input.EnableTerminationProtection;\n    }\n    return entries;\n};\nconst serializeAws_queryCreateStackInstancesInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.Accounts !== undefined && input.Accounts !== null) {\n        const memberEntries = serializeAws_queryAccountList(input.Accounts, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Accounts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DeploymentTargets !== undefined && input.DeploymentTargets !== null) {\n        const memberEntries = serializeAws_queryDeploymentTargets(input.DeploymentTargets, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `DeploymentTargets.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Regions !== undefined && input.Regions !== null) {\n        const memberEntries = serializeAws_queryRegionList(input.Regions, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Regions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ParameterOverrides !== undefined && input.ParameterOverrides !== null) {\n        const memberEntries = serializeAws_queryParameters(input.ParameterOverrides, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ParameterOverrides.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationPreferences !== undefined && input.OperationPreferences !== null) {\n        const memberEntries = serializeAws_queryStackSetOperationPreferences(input.OperationPreferences, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OperationPreferences.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationId === undefined) {\n        input.OperationId = uuid_1.v4();\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryCreateStackSetInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.Description !== undefined && input.Description !== null) {\n        entries[\"Description\"] = input.Description;\n    }\n    if (input.TemplateBody !== undefined && input.TemplateBody !== null) {\n        entries[\"TemplateBody\"] = input.TemplateBody;\n    }\n    if (input.TemplateURL !== undefined && input.TemplateURL !== null) {\n        entries[\"TemplateURL\"] = input.TemplateURL;\n    }\n    if (input.StackId !== undefined && input.StackId !== null) {\n        entries[\"StackId\"] = input.StackId;\n    }\n    if (input.Parameters !== undefined && input.Parameters !== null) {\n        const memberEntries = serializeAws_queryParameters(input.Parameters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Parameters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Capabilities !== undefined && input.Capabilities !== null) {\n        const memberEntries = serializeAws_queryCapabilities(input.Capabilities, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Capabilities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_queryTags(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.AdministrationRoleARN !== undefined && input.AdministrationRoleARN !== null) {\n        entries[\"AdministrationRoleARN\"] = input.AdministrationRoleARN;\n    }\n    if (input.ExecutionRoleName !== undefined && input.ExecutionRoleName !== null) {\n        entries[\"ExecutionRoleName\"] = input.ExecutionRoleName;\n    }\n    if (input.PermissionModel !== undefined && input.PermissionModel !== null) {\n        entries[\"PermissionModel\"] = input.PermissionModel;\n    }\n    if (input.AutoDeployment !== undefined && input.AutoDeployment !== null) {\n        const memberEntries = serializeAws_queryAutoDeployment(input.AutoDeployment, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AutoDeployment.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    if (input.ClientRequestToken === undefined) {\n        input.ClientRequestToken = uuid_1.v4();\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    if (input.ManagedExecution !== undefined && input.ManagedExecution !== null) {\n        const memberEntries = serializeAws_queryManagedExecution(input.ManagedExecution, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ManagedExecution.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryDeactivateTypeInput = (input, context) => {\n    const entries = {};\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.Arn !== undefined && input.Arn !== null) {\n        entries[\"Arn\"] = input.Arn;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteChangeSetInput = (input, context) => {\n    const entries = {};\n    if (input.ChangeSetName !== undefined && input.ChangeSetName !== null) {\n        entries[\"ChangeSetName\"] = input.ChangeSetName;\n    }\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteStackInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.RetainResources !== undefined && input.RetainResources !== null) {\n        const memberEntries = serializeAws_queryRetainResources(input.RetainResources, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RetainResources.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.RoleARN !== undefined && input.RoleARN !== null) {\n        entries[\"RoleARN\"] = input.RoleARN;\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteStackInstancesInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.Accounts !== undefined && input.Accounts !== null) {\n        const memberEntries = serializeAws_queryAccountList(input.Accounts, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Accounts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DeploymentTargets !== undefined && input.DeploymentTargets !== null) {\n        const memberEntries = serializeAws_queryDeploymentTargets(input.DeploymentTargets, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `DeploymentTargets.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Regions !== undefined && input.Regions !== null) {\n        const memberEntries = serializeAws_queryRegionList(input.Regions, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Regions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationPreferences !== undefined && input.OperationPreferences !== null) {\n        const memberEntries = serializeAws_queryStackSetOperationPreferences(input.OperationPreferences, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OperationPreferences.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.RetainStacks !== undefined && input.RetainStacks !== null) {\n        entries[\"RetainStacks\"] = input.RetainStacks;\n    }\n    if (input.OperationId === undefined) {\n        input.OperationId = uuid_1.v4();\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryDeleteStackSetInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryDeploymentTargets = (input, context) => {\n    const entries = {};\n    if (input.Accounts !== undefined && input.Accounts !== null) {\n        const memberEntries = serializeAws_queryAccountList(input.Accounts, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Accounts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.AccountsUrl !== undefined && input.AccountsUrl !== null) {\n        entries[\"AccountsUrl\"] = input.AccountsUrl;\n    }\n    if (input.OrganizationalUnitIds !== undefined && input.OrganizationalUnitIds !== null) {\n        const memberEntries = serializeAws_queryOrganizationalUnitIdList(input.OrganizationalUnitIds, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OrganizationalUnitIds.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryDeregisterTypeInput = (input, context) => {\n    const entries = {};\n    if (input.Arn !== undefined && input.Arn !== null) {\n        entries[\"Arn\"] = input.Arn;\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.VersionId !== undefined && input.VersionId !== null) {\n        entries[\"VersionId\"] = input.VersionId;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeAccountLimitsInput = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeChangeSetHooksInput = (input, context) => {\n    const entries = {};\n    if (input.ChangeSetName !== undefined && input.ChangeSetName !== null) {\n        entries[\"ChangeSetName\"] = input.ChangeSetName;\n    }\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.LogicalResourceId !== undefined && input.LogicalResourceId !== null) {\n        entries[\"LogicalResourceId\"] = input.LogicalResourceId;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeChangeSetInput = (input, context) => {\n    const entries = {};\n    if (input.ChangeSetName !== undefined && input.ChangeSetName !== null) {\n        entries[\"ChangeSetName\"] = input.ChangeSetName;\n    }\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribePublisherInput = (input, context) => {\n    const entries = {};\n    if (input.PublisherId !== undefined && input.PublisherId !== null) {\n        entries[\"PublisherId\"] = input.PublisherId;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStackDriftDetectionStatusInput = (input, context) => {\n    const entries = {};\n    if (input.StackDriftDetectionId !== undefined && input.StackDriftDetectionId !== null) {\n        entries[\"StackDriftDetectionId\"] = input.StackDriftDetectionId;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStackEventsInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStackInstanceInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.StackInstanceAccount !== undefined && input.StackInstanceAccount !== null) {\n        entries[\"StackInstanceAccount\"] = input.StackInstanceAccount;\n    }\n    if (input.StackInstanceRegion !== undefined && input.StackInstanceRegion !== null) {\n        entries[\"StackInstanceRegion\"] = input.StackInstanceRegion;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStackResourceDriftsInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.StackResourceDriftStatusFilters !== undefined && input.StackResourceDriftStatusFilters !== null) {\n        const memberEntries = serializeAws_queryStackResourceDriftStatusFilters(input.StackResourceDriftStatusFilters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `StackResourceDriftStatusFilters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStackResourceInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.LogicalResourceId !== undefined && input.LogicalResourceId !== null) {\n        entries[\"LogicalResourceId\"] = input.LogicalResourceId;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStackResourcesInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.LogicalResourceId !== undefined && input.LogicalResourceId !== null) {\n        entries[\"LogicalResourceId\"] = input.LogicalResourceId;\n    }\n    if (input.PhysicalResourceId !== undefined && input.PhysicalResourceId !== null) {\n        entries[\"PhysicalResourceId\"] = input.PhysicalResourceId;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStackSetInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStackSetOperationInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeStacksInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeTypeInput = (input, context) => {\n    const entries = {};\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.Arn !== undefined && input.Arn !== null) {\n        entries[\"Arn\"] = input.Arn;\n    }\n    if (input.VersionId !== undefined && input.VersionId !== null) {\n        entries[\"VersionId\"] = input.VersionId;\n    }\n    if (input.PublisherId !== undefined && input.PublisherId !== null) {\n        entries[\"PublisherId\"] = input.PublisherId;\n    }\n    if (input.PublicVersionNumber !== undefined && input.PublicVersionNumber !== null) {\n        entries[\"PublicVersionNumber\"] = input.PublicVersionNumber;\n    }\n    return entries;\n};\nconst serializeAws_queryDescribeTypeRegistrationInput = (input, context) => {\n    const entries = {};\n    if (input.RegistrationToken !== undefined && input.RegistrationToken !== null) {\n        entries[\"RegistrationToken\"] = input.RegistrationToken;\n    }\n    return entries;\n};\nconst serializeAws_queryDetectStackDriftInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.LogicalResourceIds !== undefined && input.LogicalResourceIds !== null) {\n        const memberEntries = serializeAws_queryLogicalResourceIds(input.LogicalResourceIds, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `LogicalResourceIds.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryDetectStackResourceDriftInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.LogicalResourceId !== undefined && input.LogicalResourceId !== null) {\n        entries[\"LogicalResourceId\"] = input.LogicalResourceId;\n    }\n    return entries;\n};\nconst serializeAws_queryDetectStackSetDriftInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.OperationPreferences !== undefined && input.OperationPreferences !== null) {\n        const memberEntries = serializeAws_queryStackSetOperationPreferences(input.OperationPreferences, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OperationPreferences.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationId === undefined) {\n        input.OperationId = uuid_1.v4();\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryEstimateTemplateCostInput = (input, context) => {\n    const entries = {};\n    if (input.TemplateBody !== undefined && input.TemplateBody !== null) {\n        entries[\"TemplateBody\"] = input.TemplateBody;\n    }\n    if (input.TemplateURL !== undefined && input.TemplateURL !== null) {\n        entries[\"TemplateURL\"] = input.TemplateURL;\n    }\n    if (input.Parameters !== undefined && input.Parameters !== null) {\n        const memberEntries = serializeAws_queryParameters(input.Parameters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Parameters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryExecuteChangeSetInput = (input, context) => {\n    const entries = {};\n    if (input.ChangeSetName !== undefined && input.ChangeSetName !== null) {\n        entries[\"ChangeSetName\"] = input.ChangeSetName;\n    }\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    if (input.DisableRollback !== undefined && input.DisableRollback !== null) {\n        entries[\"DisableRollback\"] = input.DisableRollback;\n    }\n    return entries;\n};\nconst serializeAws_queryGetStackPolicyInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    return entries;\n};\nconst serializeAws_queryGetTemplateInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.ChangeSetName !== undefined && input.ChangeSetName !== null) {\n        entries[\"ChangeSetName\"] = input.ChangeSetName;\n    }\n    if (input.TemplateStage !== undefined && input.TemplateStage !== null) {\n        entries[\"TemplateStage\"] = input.TemplateStage;\n    }\n    return entries;\n};\nconst serializeAws_queryGetTemplateSummaryInput = (input, context) => {\n    const entries = {};\n    if (input.TemplateBody !== undefined && input.TemplateBody !== null) {\n        entries[\"TemplateBody\"] = input.TemplateBody;\n    }\n    if (input.TemplateURL !== undefined && input.TemplateURL !== null) {\n        entries[\"TemplateURL\"] = input.TemplateURL;\n    }\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryImportStacksToStackSetInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.StackIds !== undefined && input.StackIds !== null) {\n        const memberEntries = serializeAws_queryStackIdList(input.StackIds, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `StackIds.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.StackIdsUrl !== undefined && input.StackIdsUrl !== null) {\n        entries[\"StackIdsUrl\"] = input.StackIdsUrl;\n    }\n    if (input.OrganizationalUnitIds !== undefined && input.OrganizationalUnitIds !== null) {\n        const memberEntries = serializeAws_queryOrganizationalUnitIdList(input.OrganizationalUnitIds, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OrganizationalUnitIds.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationPreferences !== undefined && input.OperationPreferences !== null) {\n        const memberEntries = serializeAws_queryStackSetOperationPreferences(input.OperationPreferences, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OperationPreferences.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationId === undefined) {\n        input.OperationId = uuid_1.v4();\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryListChangeSetsInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListExportsInput = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListImportsInput = (input, context) => {\n    const entries = {};\n    if (input.ExportName !== undefined && input.ExportName !== null) {\n        entries[\"ExportName\"] = input.ExportName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListStackInstancesInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.Filters !== undefined && input.Filters !== null) {\n        const memberEntries = serializeAws_queryStackInstanceFilters(input.Filters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Filters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.StackInstanceAccount !== undefined && input.StackInstanceAccount !== null) {\n        entries[\"StackInstanceAccount\"] = input.StackInstanceAccount;\n    }\n    if (input.StackInstanceRegion !== undefined && input.StackInstanceRegion !== null) {\n        entries[\"StackInstanceRegion\"] = input.StackInstanceRegion;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryListStackResourcesInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListStackSetOperationResultsInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryListStackSetOperationsInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryListStackSetsInput = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        entries[\"Status\"] = input.Status;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryListStacksInput = (input, context) => {\n    const entries = {};\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.StackStatusFilter !== undefined && input.StackStatusFilter !== null) {\n        const memberEntries = serializeAws_queryStackStatusFilter(input.StackStatusFilter, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `StackStatusFilter.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryListTypeRegistrationsInput = (input, context) => {\n    const entries = {};\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.TypeArn !== undefined && input.TypeArn !== null) {\n        entries[\"TypeArn\"] = input.TypeArn;\n    }\n    if (input.RegistrationStatusFilter !== undefined && input.RegistrationStatusFilter !== null) {\n        entries[\"RegistrationStatusFilter\"] = input.RegistrationStatusFilter;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListTypesInput = (input, context) => {\n    const entries = {};\n    if (input.Visibility !== undefined && input.Visibility !== null) {\n        entries[\"Visibility\"] = input.Visibility;\n    }\n    if (input.ProvisioningType !== undefined && input.ProvisioningType !== null) {\n        entries[\"ProvisioningType\"] = input.ProvisioningType;\n    }\n    if (input.DeprecatedStatus !== undefined && input.DeprecatedStatus !== null) {\n        entries[\"DeprecatedStatus\"] = input.DeprecatedStatus;\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.Filters !== undefined && input.Filters !== null) {\n        const memberEntries = serializeAws_queryTypeFilters(input.Filters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Filters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    return entries;\n};\nconst serializeAws_queryListTypeVersionsInput = (input, context) => {\n    const entries = {};\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.Arn !== undefined && input.Arn !== null) {\n        entries[\"Arn\"] = input.Arn;\n    }\n    if (input.MaxResults !== undefined && input.MaxResults !== null) {\n        entries[\"MaxResults\"] = input.MaxResults;\n    }\n    if (input.NextToken !== undefined && input.NextToken !== null) {\n        entries[\"NextToken\"] = input.NextToken;\n    }\n    if (input.DeprecatedStatus !== undefined && input.DeprecatedStatus !== null) {\n        entries[\"DeprecatedStatus\"] = input.DeprecatedStatus;\n    }\n    if (input.PublisherId !== undefined && input.PublisherId !== null) {\n        entries[\"PublisherId\"] = input.PublisherId;\n    }\n    return entries;\n};\nconst serializeAws_queryLoggingConfig = (input, context) => {\n    const entries = {};\n    if (input.LogRoleArn !== undefined && input.LogRoleArn !== null) {\n        entries[\"LogRoleArn\"] = input.LogRoleArn;\n    }\n    if (input.LogGroupName !== undefined && input.LogGroupName !== null) {\n        entries[\"LogGroupName\"] = input.LogGroupName;\n    }\n    return entries;\n};\nconst serializeAws_queryLogicalResourceIds = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryManagedExecution = (input, context) => {\n    const entries = {};\n    if (input.Active !== undefined && input.Active !== null) {\n        entries[\"Active\"] = input.Active;\n    }\n    return entries;\n};\nconst serializeAws_queryNotificationARNs = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryOrganizationalUnitIdList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryParameter = (input, context) => {\n    const entries = {};\n    if (input.ParameterKey !== undefined && input.ParameterKey !== null) {\n        entries[\"ParameterKey\"] = input.ParameterKey;\n    }\n    if (input.ParameterValue !== undefined && input.ParameterValue !== null) {\n        entries[\"ParameterValue\"] = input.ParameterValue;\n    }\n    if (input.UsePreviousValue !== undefined && input.UsePreviousValue !== null) {\n        entries[\"UsePreviousValue\"] = input.UsePreviousValue;\n    }\n    if (input.ResolvedValue !== undefined && input.ResolvedValue !== null) {\n        entries[\"ResolvedValue\"] = input.ResolvedValue;\n    }\n    return entries;\n};\nconst serializeAws_queryParameters = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryParameter(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPublishTypeInput = (input, context) => {\n    const entries = {};\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.Arn !== undefined && input.Arn !== null) {\n        entries[\"Arn\"] = input.Arn;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.PublicVersionNumber !== undefined && input.PublicVersionNumber !== null) {\n        entries[\"PublicVersionNumber\"] = input.PublicVersionNumber;\n    }\n    return entries;\n};\nconst serializeAws_queryRecordHandlerProgressInput = (input, context) => {\n    const entries = {};\n    if (input.BearerToken !== undefined && input.BearerToken !== null) {\n        entries[\"BearerToken\"] = input.BearerToken;\n    }\n    if (input.OperationStatus !== undefined && input.OperationStatus !== null) {\n        entries[\"OperationStatus\"] = input.OperationStatus;\n    }\n    if (input.CurrentOperationStatus !== undefined && input.CurrentOperationStatus !== null) {\n        entries[\"CurrentOperationStatus\"] = input.CurrentOperationStatus;\n    }\n    if (input.StatusMessage !== undefined && input.StatusMessage !== null) {\n        entries[\"StatusMessage\"] = input.StatusMessage;\n    }\n    if (input.ErrorCode !== undefined && input.ErrorCode !== null) {\n        entries[\"ErrorCode\"] = input.ErrorCode;\n    }\n    if (input.ResourceModel !== undefined && input.ResourceModel !== null) {\n        entries[\"ResourceModel\"] = input.ResourceModel;\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    return entries;\n};\nconst serializeAws_queryRegionList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryRegisterPublisherInput = (input, context) => {\n    const entries = {};\n    if (input.AcceptTermsAndConditions !== undefined && input.AcceptTermsAndConditions !== null) {\n        entries[\"AcceptTermsAndConditions\"] = input.AcceptTermsAndConditions;\n    }\n    if (input.ConnectionArn !== undefined && input.ConnectionArn !== null) {\n        entries[\"ConnectionArn\"] = input.ConnectionArn;\n    }\n    return entries;\n};\nconst serializeAws_queryRegisterTypeInput = (input, context) => {\n    const entries = {};\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.SchemaHandlerPackage !== undefined && input.SchemaHandlerPackage !== null) {\n        entries[\"SchemaHandlerPackage\"] = input.SchemaHandlerPackage;\n    }\n    if (input.LoggingConfig !== undefined && input.LoggingConfig !== null) {\n        const memberEntries = serializeAws_queryLoggingConfig(input.LoggingConfig, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `LoggingConfig.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExecutionRoleArn !== undefined && input.ExecutionRoleArn !== null) {\n        entries[\"ExecutionRoleArn\"] = input.ExecutionRoleArn;\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    return entries;\n};\nconst serializeAws_queryResourceIdentifierProperties = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    Object.keys(input)\n        .filter((key) => input[key] != null)\n        .forEach((key) => {\n        entries[`entry.${counter}.key`] = key;\n        entries[`entry.${counter}.value`] = input[key];\n        counter++;\n    });\n    return entries;\n};\nconst serializeAws_queryResourcesToImport = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryResourceToImport(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryResourcesToSkip = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryResourceToImport = (input, context) => {\n    const entries = {};\n    if (input.ResourceType !== undefined && input.ResourceType !== null) {\n        entries[\"ResourceType\"] = input.ResourceType;\n    }\n    if (input.LogicalResourceId !== undefined && input.LogicalResourceId !== null) {\n        entries[\"LogicalResourceId\"] = input.LogicalResourceId;\n    }\n    if (input.ResourceIdentifier !== undefined && input.ResourceIdentifier !== null) {\n        const memberEntries = serializeAws_queryResourceIdentifierProperties(input.ResourceIdentifier, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ResourceIdentifier.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryResourceTypes = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryRetainResources = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryRollbackConfiguration = (input, context) => {\n    const entries = {};\n    if (input.RollbackTriggers !== undefined && input.RollbackTriggers !== null) {\n        const memberEntries = serializeAws_queryRollbackTriggers(input.RollbackTriggers, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RollbackTriggers.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.MonitoringTimeInMinutes !== undefined && input.MonitoringTimeInMinutes !== null) {\n        entries[\"MonitoringTimeInMinutes\"] = input.MonitoringTimeInMinutes;\n    }\n    return entries;\n};\nconst serializeAws_queryRollbackStackInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.RoleARN !== undefined && input.RoleARN !== null) {\n        entries[\"RoleARN\"] = input.RoleARN;\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    return entries;\n};\nconst serializeAws_queryRollbackTrigger = (input, context) => {\n    const entries = {};\n    if (input.Arn !== undefined && input.Arn !== null) {\n        entries[\"Arn\"] = input.Arn;\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    return entries;\n};\nconst serializeAws_queryRollbackTriggers = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryRollbackTrigger(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_querySetStackPolicyInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.StackPolicyBody !== undefined && input.StackPolicyBody !== null) {\n        entries[\"StackPolicyBody\"] = input.StackPolicyBody;\n    }\n    if (input.StackPolicyURL !== undefined && input.StackPolicyURL !== null) {\n        entries[\"StackPolicyURL\"] = input.StackPolicyURL;\n    }\n    return entries;\n};\nconst serializeAws_querySetTypeConfigurationInput = (input, context) => {\n    const entries = {};\n    if (input.TypeArn !== undefined && input.TypeArn !== null) {\n        entries[\"TypeArn\"] = input.TypeArn;\n    }\n    if (input.Configuration !== undefined && input.Configuration !== null) {\n        entries[\"Configuration\"] = input.Configuration;\n    }\n    if (input.ConfigurationAlias !== undefined && input.ConfigurationAlias !== null) {\n        entries[\"ConfigurationAlias\"] = input.ConfigurationAlias;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    return entries;\n};\nconst serializeAws_querySetTypeDefaultVersionInput = (input, context) => {\n    const entries = {};\n    if (input.Arn !== undefined && input.Arn !== null) {\n        entries[\"Arn\"] = input.Arn;\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.VersionId !== undefined && input.VersionId !== null) {\n        entries[\"VersionId\"] = input.VersionId;\n    }\n    return entries;\n};\nconst serializeAws_querySignalResourceInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.LogicalResourceId !== undefined && input.LogicalResourceId !== null) {\n        entries[\"LogicalResourceId\"] = input.LogicalResourceId;\n    }\n    if (input.UniqueId !== undefined && input.UniqueId !== null) {\n        entries[\"UniqueId\"] = input.UniqueId;\n    }\n    if (input.Status !== undefined && input.Status !== null) {\n        entries[\"Status\"] = input.Status;\n    }\n    return entries;\n};\nconst serializeAws_queryStackIdList = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryStackInstanceFilter = (input, context) => {\n    const entries = {};\n    if (input.Name !== undefined && input.Name !== null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Values !== undefined && input.Values !== null) {\n        entries[\"Values\"] = input.Values;\n    }\n    return entries;\n};\nconst serializeAws_queryStackInstanceFilters = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryStackInstanceFilter(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryStackResourceDriftStatusFilters = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryStackSetOperationPreferences = (input, context) => {\n    const entries = {};\n    if (input.RegionConcurrencyType !== undefined && input.RegionConcurrencyType !== null) {\n        entries[\"RegionConcurrencyType\"] = input.RegionConcurrencyType;\n    }\n    if (input.RegionOrder !== undefined && input.RegionOrder !== null) {\n        const memberEntries = serializeAws_queryRegionList(input.RegionOrder, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RegionOrder.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.FailureToleranceCount !== undefined && input.FailureToleranceCount !== null) {\n        entries[\"FailureToleranceCount\"] = input.FailureToleranceCount;\n    }\n    if (input.FailureTolerancePercentage !== undefined && input.FailureTolerancePercentage !== null) {\n        entries[\"FailureTolerancePercentage\"] = input.FailureTolerancePercentage;\n    }\n    if (input.MaxConcurrentCount !== undefined && input.MaxConcurrentCount !== null) {\n        entries[\"MaxConcurrentCount\"] = input.MaxConcurrentCount;\n    }\n    if (input.MaxConcurrentPercentage !== undefined && input.MaxConcurrentPercentage !== null) {\n        entries[\"MaxConcurrentPercentage\"] = input.MaxConcurrentPercentage;\n    }\n    return entries;\n};\nconst serializeAws_queryStackStatusFilter = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryStopStackSetOperationInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryTag = (input, context) => {\n    const entries = {};\n    if (input.Key !== undefined && input.Key !== null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_queryTags = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryTestTypeInput = (input, context) => {\n    const entries = {};\n    if (input.Arn !== undefined && input.Arn !== null) {\n        entries[\"Arn\"] = input.Arn;\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    if (input.VersionId !== undefined && input.VersionId !== null) {\n        entries[\"VersionId\"] = input.VersionId;\n    }\n    if (input.LogDeliveryBucket !== undefined && input.LogDeliveryBucket !== null) {\n        entries[\"LogDeliveryBucket\"] = input.LogDeliveryBucket;\n    }\n    return entries;\n};\nconst serializeAws_queryTypeConfigurationIdentifier = (input, context) => {\n    const entries = {};\n    if (input.TypeArn !== undefined && input.TypeArn !== null) {\n        entries[\"TypeArn\"] = input.TypeArn;\n    }\n    if (input.TypeConfigurationAlias !== undefined && input.TypeConfigurationAlias !== null) {\n        entries[\"TypeConfigurationAlias\"] = input.TypeConfigurationAlias;\n    }\n    if (input.TypeConfigurationArn !== undefined && input.TypeConfigurationArn !== null) {\n        entries[\"TypeConfigurationArn\"] = input.TypeConfigurationArn;\n    }\n    if (input.Type !== undefined && input.Type !== null) {\n        entries[\"Type\"] = input.Type;\n    }\n    if (input.TypeName !== undefined && input.TypeName !== null) {\n        entries[\"TypeName\"] = input.TypeName;\n    }\n    return entries;\n};\nconst serializeAws_queryTypeConfigurationIdentifiers = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTypeConfigurationIdentifier(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryTypeFilters = (input, context) => {\n    const entries = {};\n    if (input.Category !== undefined && input.Category !== null) {\n        entries[\"Category\"] = input.Category;\n    }\n    if (input.PublisherId !== undefined && input.PublisherId !== null) {\n        entries[\"PublisherId\"] = input.PublisherId;\n    }\n    if (input.TypeNamePrefix !== undefined && input.TypeNamePrefix !== null) {\n        entries[\"TypeNamePrefix\"] = input.TypeNamePrefix;\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateStackInput = (input, context) => {\n    const entries = {};\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    if (input.TemplateBody !== undefined && input.TemplateBody !== null) {\n        entries[\"TemplateBody\"] = input.TemplateBody;\n    }\n    if (input.TemplateURL !== undefined && input.TemplateURL !== null) {\n        entries[\"TemplateURL\"] = input.TemplateURL;\n    }\n    if (input.UsePreviousTemplate !== undefined && input.UsePreviousTemplate !== null) {\n        entries[\"UsePreviousTemplate\"] = input.UsePreviousTemplate;\n    }\n    if (input.StackPolicyDuringUpdateBody !== undefined && input.StackPolicyDuringUpdateBody !== null) {\n        entries[\"StackPolicyDuringUpdateBody\"] = input.StackPolicyDuringUpdateBody;\n    }\n    if (input.StackPolicyDuringUpdateURL !== undefined && input.StackPolicyDuringUpdateURL !== null) {\n        entries[\"StackPolicyDuringUpdateURL\"] = input.StackPolicyDuringUpdateURL;\n    }\n    if (input.Parameters !== undefined && input.Parameters !== null) {\n        const memberEntries = serializeAws_queryParameters(input.Parameters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Parameters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Capabilities !== undefined && input.Capabilities !== null) {\n        const memberEntries = serializeAws_queryCapabilities(input.Capabilities, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Capabilities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ResourceTypes !== undefined && input.ResourceTypes !== null) {\n        const memberEntries = serializeAws_queryResourceTypes(input.ResourceTypes, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ResourceTypes.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.RoleARN !== undefined && input.RoleARN !== null) {\n        entries[\"RoleARN\"] = input.RoleARN;\n    }\n    if (input.RollbackConfiguration !== undefined && input.RollbackConfiguration !== null) {\n        const memberEntries = serializeAws_queryRollbackConfiguration(input.RollbackConfiguration, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `RollbackConfiguration.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.StackPolicyBody !== undefined && input.StackPolicyBody !== null) {\n        entries[\"StackPolicyBody\"] = input.StackPolicyBody;\n    }\n    if (input.StackPolicyURL !== undefined && input.StackPolicyURL !== null) {\n        entries[\"StackPolicyURL\"] = input.StackPolicyURL;\n    }\n    if (input.NotificationARNs !== undefined && input.NotificationARNs !== null) {\n        const memberEntries = serializeAws_queryNotificationARNs(input.NotificationARNs, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `NotificationARNs.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_queryTags(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DisableRollback !== undefined && input.DisableRollback !== null) {\n        entries[\"DisableRollback\"] = input.DisableRollback;\n    }\n    if (input.ClientRequestToken !== undefined && input.ClientRequestToken !== null) {\n        entries[\"ClientRequestToken\"] = input.ClientRequestToken;\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateStackInstancesInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.Accounts !== undefined && input.Accounts !== null) {\n        const memberEntries = serializeAws_queryAccountList(input.Accounts, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Accounts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DeploymentTargets !== undefined && input.DeploymentTargets !== null) {\n        const memberEntries = serializeAws_queryDeploymentTargets(input.DeploymentTargets, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `DeploymentTargets.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Regions !== undefined && input.Regions !== null) {\n        const memberEntries = serializeAws_queryRegionList(input.Regions, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Regions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ParameterOverrides !== undefined && input.ParameterOverrides !== null) {\n        const memberEntries = serializeAws_queryParameters(input.ParameterOverrides, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ParameterOverrides.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationPreferences !== undefined && input.OperationPreferences !== null) {\n        const memberEntries = serializeAws_queryStackSetOperationPreferences(input.OperationPreferences, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OperationPreferences.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationId === undefined) {\n        input.OperationId = uuid_1.v4();\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateStackSetInput = (input, context) => {\n    const entries = {};\n    if (input.StackSetName !== undefined && input.StackSetName !== null) {\n        entries[\"StackSetName\"] = input.StackSetName;\n    }\n    if (input.Description !== undefined && input.Description !== null) {\n        entries[\"Description\"] = input.Description;\n    }\n    if (input.TemplateBody !== undefined && input.TemplateBody !== null) {\n        entries[\"TemplateBody\"] = input.TemplateBody;\n    }\n    if (input.TemplateURL !== undefined && input.TemplateURL !== null) {\n        entries[\"TemplateURL\"] = input.TemplateURL;\n    }\n    if (input.UsePreviousTemplate !== undefined && input.UsePreviousTemplate !== null) {\n        entries[\"UsePreviousTemplate\"] = input.UsePreviousTemplate;\n    }\n    if (input.Parameters !== undefined && input.Parameters !== null) {\n        const memberEntries = serializeAws_queryParameters(input.Parameters, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Parameters.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Capabilities !== undefined && input.Capabilities !== null) {\n        const memberEntries = serializeAws_queryCapabilities(input.Capabilities, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Capabilities.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_queryTags(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationPreferences !== undefined && input.OperationPreferences !== null) {\n        const memberEntries = serializeAws_queryStackSetOperationPreferences(input.OperationPreferences, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `OperationPreferences.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.AdministrationRoleARN !== undefined && input.AdministrationRoleARN !== null) {\n        entries[\"AdministrationRoleARN\"] = input.AdministrationRoleARN;\n    }\n    if (input.ExecutionRoleName !== undefined && input.ExecutionRoleName !== null) {\n        entries[\"ExecutionRoleName\"] = input.ExecutionRoleName;\n    }\n    if (input.DeploymentTargets !== undefined && input.DeploymentTargets !== null) {\n        const memberEntries = serializeAws_queryDeploymentTargets(input.DeploymentTargets, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `DeploymentTargets.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.PermissionModel !== undefined && input.PermissionModel !== null) {\n        entries[\"PermissionModel\"] = input.PermissionModel;\n    }\n    if (input.AutoDeployment !== undefined && input.AutoDeployment !== null) {\n        const memberEntries = serializeAws_queryAutoDeployment(input.AutoDeployment, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `AutoDeployment.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.OperationId === undefined) {\n        input.OperationId = uuid_1.v4();\n    }\n    if (input.OperationId !== undefined && input.OperationId !== null) {\n        entries[\"OperationId\"] = input.OperationId;\n    }\n    if (input.Accounts !== undefined && input.Accounts !== null) {\n        const memberEntries = serializeAws_queryAccountList(input.Accounts, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Accounts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Regions !== undefined && input.Regions !== null) {\n        const memberEntries = serializeAws_queryRegionList(input.Regions, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Regions.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.CallAs !== undefined && input.CallAs !== null) {\n        entries[\"CallAs\"] = input.CallAs;\n    }\n    if (input.ManagedExecution !== undefined && input.ManagedExecution !== null) {\n        const memberEntries = serializeAws_queryManagedExecution(input.ManagedExecution, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ManagedExecution.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryUpdateTerminationProtectionInput = (input, context) => {\n    const entries = {};\n    if (input.EnableTerminationProtection !== undefined && input.EnableTerminationProtection !== null) {\n        entries[\"EnableTerminationProtection\"] = input.EnableTerminationProtection;\n    }\n    if (input.StackName !== undefined && input.StackName !== null) {\n        entries[\"StackName\"] = input.StackName;\n    }\n    return entries;\n};\nconst serializeAws_queryValidateTemplateInput = (input, context) => {\n    const entries = {};\n    if (input.TemplateBody !== undefined && input.TemplateBody !== null) {\n        entries[\"TemplateBody\"] = input.TemplateBody;\n    }\n    if (input.TemplateURL !== undefined && input.TemplateURL !== null) {\n        entries[\"TemplateURL\"] = input.TemplateURL;\n    }\n    return entries;\n};\nconst deserializeAws_queryAccountGateResult = (output, context) => {\n    const contents = {\n        Status: undefined,\n        StatusReason: undefined,\n    };\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"StatusReason\"] !== undefined) {\n        contents.StatusReason = smithy_client_1.expectString(output[\"StatusReason\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAccountLimit = (output, context) => {\n    const contents = {\n        Name: undefined,\n        Value: undefined,\n    };\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = smithy_client_1.expectString(output[\"Name\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = smithy_client_1.strictParseInt32(output[\"Value\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAccountLimitList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryAccountLimit(entry, context);\n    });\n};\nconst deserializeAws_queryAccountList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryActivateTypeOutput = (output, context) => {\n    const contents = {\n        Arn: undefined,\n    };\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAllowedValues = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryAlreadyExistsException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAutoDeployment = (output, context) => {\n    const contents = {\n        Enabled: undefined,\n        RetainStacksOnAccountRemoval: undefined,\n    };\n    if (output[\"Enabled\"] !== undefined) {\n        contents.Enabled = smithy_client_1.parseBoolean(output[\"Enabled\"]);\n    }\n    if (output[\"RetainStacksOnAccountRemoval\"] !== undefined) {\n        contents.RetainStacksOnAccountRemoval = smithy_client_1.parseBoolean(output[\"RetainStacksOnAccountRemoval\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryBatchDescribeTypeConfigurationsError = (output, context) => {\n    const contents = {\n        ErrorCode: undefined,\n        ErrorMessage: undefined,\n        TypeConfigurationIdentifier: undefined,\n    };\n    if (output[\"ErrorCode\"] !== undefined) {\n        contents.ErrorCode = smithy_client_1.expectString(output[\"ErrorCode\"]);\n    }\n    if (output[\"ErrorMessage\"] !== undefined) {\n        contents.ErrorMessage = smithy_client_1.expectString(output[\"ErrorMessage\"]);\n    }\n    if (output[\"TypeConfigurationIdentifier\"] !== undefined) {\n        contents.TypeConfigurationIdentifier = deserializeAws_queryTypeConfigurationIdentifier(output[\"TypeConfigurationIdentifier\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryBatchDescribeTypeConfigurationsErrors = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryBatchDescribeTypeConfigurationsError(entry, context);\n    });\n};\nconst deserializeAws_queryBatchDescribeTypeConfigurationsOutput = (output, context) => {\n    const contents = {\n        Errors: undefined,\n        UnprocessedTypeConfigurations: undefined,\n        TypeConfigurations: undefined,\n    };\n    if (output.Errors === \"\") {\n        contents.Errors = [];\n    }\n    if (output[\"Errors\"] !== undefined && output[\"Errors\"][\"member\"] !== undefined) {\n        contents.Errors = deserializeAws_queryBatchDescribeTypeConfigurationsErrors(smithy_client_1.getArrayIfSingleItem(output[\"Errors\"][\"member\"]), context);\n    }\n    if (output.UnprocessedTypeConfigurations === \"\") {\n        contents.UnprocessedTypeConfigurations = [];\n    }\n    if (output[\"UnprocessedTypeConfigurations\"] !== undefined &&\n        output[\"UnprocessedTypeConfigurations\"][\"member\"] !== undefined) {\n        contents.UnprocessedTypeConfigurations = deserializeAws_queryUnprocessedTypeConfigurations(smithy_client_1.getArrayIfSingleItem(output[\"UnprocessedTypeConfigurations\"][\"member\"]), context);\n    }\n    if (output.TypeConfigurations === \"\") {\n        contents.TypeConfigurations = [];\n    }\n    if (output[\"TypeConfigurations\"] !== undefined && output[\"TypeConfigurations\"][\"member\"] !== undefined) {\n        contents.TypeConfigurations = deserializeAws_queryTypeConfigurationDetailsList(smithy_client_1.getArrayIfSingleItem(output[\"TypeConfigurations\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryCapabilities = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryCFNRegistryException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryChange = (output, context) => {\n    const contents = {\n        Type: undefined,\n        HookInvocationCount: undefined,\n        ResourceChange: undefined,\n    };\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = smithy_client_1.expectString(output[\"Type\"]);\n    }\n    if (output[\"HookInvocationCount\"] !== undefined) {\n        contents.HookInvocationCount = smithy_client_1.strictParseInt32(output[\"HookInvocationCount\"]);\n    }\n    if (output[\"ResourceChange\"] !== undefined) {\n        contents.ResourceChange = deserializeAws_queryResourceChange(output[\"ResourceChange\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryChanges = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryChange(entry, context);\n    });\n};\nconst deserializeAws_queryChangeSetHook = (output, context) => {\n    const contents = {\n        InvocationPoint: undefined,\n        FailureMode: undefined,\n        TypeName: undefined,\n        TypeVersionId: undefined,\n        TypeConfigurationVersionId: undefined,\n        TargetDetails: undefined,\n    };\n    if (output[\"InvocationPoint\"] !== undefined) {\n        contents.InvocationPoint = smithy_client_1.expectString(output[\"InvocationPoint\"]);\n    }\n    if (output[\"FailureMode\"] !== undefined) {\n        contents.FailureMode = smithy_client_1.expectString(output[\"FailureMode\"]);\n    }\n    if (output[\"TypeName\"] !== undefined) {\n        contents.TypeName = smithy_client_1.expectString(output[\"TypeName\"]);\n    }\n    if (output[\"TypeVersionId\"] !== undefined) {\n        contents.TypeVersionId = smithy_client_1.expectString(output[\"TypeVersionId\"]);\n    }\n    if (output[\"TypeConfigurationVersionId\"] !== undefined) {\n        contents.TypeConfigurationVersionId = smithy_client_1.expectString(output[\"TypeConfigurationVersionId\"]);\n    }\n    if (output[\"TargetDetails\"] !== undefined) {\n        contents.TargetDetails = deserializeAws_queryChangeSetHookTargetDetails(output[\"TargetDetails\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryChangeSetHookResourceTargetDetails = (output, context) => {\n    const contents = {\n        LogicalResourceId: undefined,\n        ResourceType: undefined,\n        ResourceAction: undefined,\n    };\n    if (output[\"LogicalResourceId\"] !== undefined) {\n        contents.LogicalResourceId = smithy_client_1.expectString(output[\"LogicalResourceId\"]);\n    }\n    if (output[\"ResourceType\"] !== undefined) {\n        contents.ResourceType = smithy_client_1.expectString(output[\"ResourceType\"]);\n    }\n    if (output[\"ResourceAction\"] !== undefined) {\n        contents.ResourceAction = smithy_client_1.expectString(output[\"ResourceAction\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryChangeSetHooks = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryChangeSetHook(entry, context);\n    });\n};\nconst deserializeAws_queryChangeSetHookTargetDetails = (output, context) => {\n    const contents = {\n        TargetType: undefined,\n        ResourceTargetDetails: undefined,\n    };\n    if (output[\"TargetType\"] !== undefined) {\n        contents.TargetType = smithy_client_1.expectString(output[\"TargetType\"]);\n    }\n    if (output[\"ResourceTargetDetails\"] !== undefined) {\n        contents.ResourceTargetDetails = deserializeAws_queryChangeSetHookResourceTargetDetails(output[\"ResourceTargetDetails\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryChangeSetNotFoundException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryChangeSetSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryChangeSetSummary(entry, context);\n    });\n};\nconst deserializeAws_queryChangeSetSummary = (output, context) => {\n    const contents = {\n        StackId: undefined,\n        StackName: undefined,\n        ChangeSetId: undefined,\n        ChangeSetName: undefined,\n        ExecutionStatus: undefined,\n        Status: undefined,\n        StatusReason: undefined,\n        CreationTime: undefined,\n        Description: undefined,\n        IncludeNestedStacks: undefined,\n        ParentChangeSetId: undefined,\n        RootChangeSetId: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"StackName\"] !== undefined) {\n        contents.StackName = smithy_client_1.expectString(output[\"StackName\"]);\n    }\n    if (output[\"ChangeSetId\"] !== undefined) {\n        contents.ChangeSetId = smithy_client_1.expectString(output[\"ChangeSetId\"]);\n    }\n    if (output[\"ChangeSetName\"] !== undefined) {\n        contents.ChangeSetName = smithy_client_1.expectString(output[\"ChangeSetName\"]);\n    }\n    if (output[\"ExecutionStatus\"] !== undefined) {\n        contents.ExecutionStatus = smithy_client_1.expectString(output[\"ExecutionStatus\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"StatusReason\"] !== undefined) {\n        contents.StatusReason = smithy_client_1.expectString(output[\"StatusReason\"]);\n    }\n    if (output[\"CreationTime\"] !== undefined) {\n        contents.CreationTime = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"CreationTime\"]));\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"IncludeNestedStacks\"] !== undefined) {\n        contents.IncludeNestedStacks = smithy_client_1.parseBoolean(output[\"IncludeNestedStacks\"]);\n    }\n    if (output[\"ParentChangeSetId\"] !== undefined) {\n        contents.ParentChangeSetId = smithy_client_1.expectString(output[\"ParentChangeSetId\"]);\n    }\n    if (output[\"RootChangeSetId\"] !== undefined) {\n        contents.RootChangeSetId = smithy_client_1.expectString(output[\"RootChangeSetId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryContinueUpdateRollbackOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryCreateChangeSetOutput = (output, context) => {\n    const contents = {\n        Id: undefined,\n        StackId: undefined,\n    };\n    if (output[\"Id\"] !== undefined) {\n        contents.Id = smithy_client_1.expectString(output[\"Id\"]);\n    }\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCreatedButModifiedException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCreateStackInstancesOutput = (output, context) => {\n    const contents = {\n        OperationId: undefined,\n    };\n    if (output[\"OperationId\"] !== undefined) {\n        contents.OperationId = smithy_client_1.expectString(output[\"OperationId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCreateStackOutput = (output, context) => {\n    const contents = {\n        StackId: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCreateStackSetOutput = (output, context) => {\n    const contents = {\n        StackSetId: undefined,\n    };\n    if (output[\"StackSetId\"] !== undefined) {\n        contents.StackSetId = smithy_client_1.expectString(output[\"StackSetId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDeactivateTypeOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteChangeSetOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeleteStackInstancesOutput = (output, context) => {\n    const contents = {\n        OperationId: undefined,\n    };\n    if (output[\"OperationId\"] !== undefined) {\n        contents.OperationId = smithy_client_1.expectString(output[\"OperationId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDeleteStackSetOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDeploymentTargets = (output, context) => {\n    const contents = {\n        Accounts: undefined,\n        AccountsUrl: undefined,\n        OrganizationalUnitIds: undefined,\n    };\n    if (output.Accounts === \"\") {\n        contents.Accounts = [];\n    }\n    if (output[\"Accounts\"] !== undefined && output[\"Accounts\"][\"member\"] !== undefined) {\n        contents.Accounts = deserializeAws_queryAccountList(smithy_client_1.getArrayIfSingleItem(output[\"Accounts\"][\"member\"]), context);\n    }\n    if (output[\"AccountsUrl\"] !== undefined) {\n        contents.AccountsUrl = smithy_client_1.expectString(output[\"AccountsUrl\"]);\n    }\n    if (output.OrganizationalUnitIds === \"\") {\n        contents.OrganizationalUnitIds = [];\n    }\n    if (output[\"OrganizationalUnitIds\"] !== undefined && output[\"OrganizationalUnitIds\"][\"member\"] !== undefined) {\n        contents.OrganizationalUnitIds = deserializeAws_queryOrganizationalUnitIdList(smithy_client_1.getArrayIfSingleItem(output[\"OrganizationalUnitIds\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDeregisterTypeOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryDescribeAccountLimitsOutput = (output, context) => {\n    const contents = {\n        AccountLimits: undefined,\n        NextToken: undefined,\n    };\n    if (output.AccountLimits === \"\") {\n        contents.AccountLimits = [];\n    }\n    if (output[\"AccountLimits\"] !== undefined && output[\"AccountLimits\"][\"member\"] !== undefined) {\n        contents.AccountLimits = deserializeAws_queryAccountLimitList(smithy_client_1.getArrayIfSingleItem(output[\"AccountLimits\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeChangeSetHooksOutput = (output, context) => {\n    const contents = {\n        ChangeSetId: undefined,\n        ChangeSetName: undefined,\n        Hooks: undefined,\n        Status: undefined,\n        NextToken: undefined,\n        StackId: undefined,\n        StackName: undefined,\n    };\n    if (output[\"ChangeSetId\"] !== undefined) {\n        contents.ChangeSetId = smithy_client_1.expectString(output[\"ChangeSetId\"]);\n    }\n    if (output[\"ChangeSetName\"] !== undefined) {\n        contents.ChangeSetName = smithy_client_1.expectString(output[\"ChangeSetName\"]);\n    }\n    if (output.Hooks === \"\") {\n        contents.Hooks = [];\n    }\n    if (output[\"Hooks\"] !== undefined && output[\"Hooks\"][\"member\"] !== undefined) {\n        contents.Hooks = deserializeAws_queryChangeSetHooks(smithy_client_1.getArrayIfSingleItem(output[\"Hooks\"][\"member\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"StackName\"] !== undefined) {\n        contents.StackName = smithy_client_1.expectString(output[\"StackName\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeChangeSetOutput = (output, context) => {\n    const contents = {\n        ChangeSetName: undefined,\n        ChangeSetId: undefined,\n        StackId: undefined,\n        StackName: undefined,\n        Description: undefined,\n        Parameters: undefined,\n        CreationTime: undefined,\n        ExecutionStatus: undefined,\n        Status: undefined,\n        StatusReason: undefined,\n        NotificationARNs: undefined,\n        RollbackConfiguration: undefined,\n        Capabilities: undefined,\n        Tags: undefined,\n        Changes: undefined,\n        NextToken: undefined,\n        IncludeNestedStacks: undefined,\n        ParentChangeSetId: undefined,\n        RootChangeSetId: undefined,\n    };\n    if (output[\"ChangeSetName\"] !== undefined) {\n        contents.ChangeSetName = smithy_client_1.expectString(output[\"ChangeSetName\"]);\n    }\n    if (output[\"ChangeSetId\"] !== undefined) {\n        contents.ChangeSetId = smithy_client_1.expectString(output[\"ChangeSetId\"]);\n    }\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"StackName\"] !== undefined) {\n        contents.StackName = smithy_client_1.expectString(output[\"StackName\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output.Parameters === \"\") {\n        contents.Parameters = [];\n    }\n    if (output[\"Parameters\"] !== undefined && output[\"Parameters\"][\"member\"] !== undefined) {\n        contents.Parameters = deserializeAws_queryParameters(smithy_client_1.getArrayIfSingleItem(output[\"Parameters\"][\"member\"]), context);\n    }\n    if (output[\"CreationTime\"] !== undefined) {\n        contents.CreationTime = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"CreationTime\"]));\n    }\n    if (output[\"ExecutionStatus\"] !== undefined) {\n        contents.ExecutionStatus = smithy_client_1.expectString(output[\"ExecutionStatus\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"StatusReason\"] !== undefined) {\n        contents.StatusReason = smithy_client_1.expectString(output[\"StatusReason\"]);\n    }\n    if (output.NotificationARNs === \"\") {\n        contents.NotificationARNs = [];\n    }\n    if (output[\"NotificationARNs\"] !== undefined && output[\"NotificationARNs\"][\"member\"] !== undefined) {\n        contents.NotificationARNs = deserializeAws_queryNotificationARNs(smithy_client_1.getArrayIfSingleItem(output[\"NotificationARNs\"][\"member\"]), context);\n    }\n    if (output[\"RollbackConfiguration\"] !== undefined) {\n        contents.RollbackConfiguration = deserializeAws_queryRollbackConfiguration(output[\"RollbackConfiguration\"], context);\n    }\n    if (output.Capabilities === \"\") {\n        contents.Capabilities = [];\n    }\n    if (output[\"Capabilities\"] !== undefined && output[\"Capabilities\"][\"member\"] !== undefined) {\n        contents.Capabilities = deserializeAws_queryCapabilities(smithy_client_1.getArrayIfSingleItem(output[\"Capabilities\"][\"member\"]), context);\n    }\n    if (output.Tags === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tags\"] !== undefined && output[\"Tags\"][\"member\"] !== undefined) {\n        contents.Tags = deserializeAws_queryTags(smithy_client_1.getArrayIfSingleItem(output[\"Tags\"][\"member\"]), context);\n    }\n    if (output.Changes === \"\") {\n        contents.Changes = [];\n    }\n    if (output[\"Changes\"] !== undefined && output[\"Changes\"][\"member\"] !== undefined) {\n        contents.Changes = deserializeAws_queryChanges(smithy_client_1.getArrayIfSingleItem(output[\"Changes\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    if (output[\"IncludeNestedStacks\"] !== undefined) {\n        contents.IncludeNestedStacks = smithy_client_1.parseBoolean(output[\"IncludeNestedStacks\"]);\n    }\n    if (output[\"ParentChangeSetId\"] !== undefined) {\n        contents.ParentChangeSetId = smithy_client_1.expectString(output[\"ParentChangeSetId\"]);\n    }\n    if (output[\"RootChangeSetId\"] !== undefined) {\n        contents.RootChangeSetId = smithy_client_1.expectString(output[\"RootChangeSetId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribePublisherOutput = (output, context) => {\n    const contents = {\n        PublisherId: undefined,\n        PublisherStatus: undefined,\n        IdentityProvider: undefined,\n        PublisherProfile: undefined,\n    };\n    if (output[\"PublisherId\"] !== undefined) {\n        contents.PublisherId = smithy_client_1.expectString(output[\"PublisherId\"]);\n    }\n    if (output[\"PublisherStatus\"] !== undefined) {\n        contents.PublisherStatus = smithy_client_1.expectString(output[\"PublisherStatus\"]);\n    }\n    if (output[\"IdentityProvider\"] !== undefined) {\n        contents.IdentityProvider = smithy_client_1.expectString(output[\"IdentityProvider\"]);\n    }\n    if (output[\"PublisherProfile\"] !== undefined) {\n        contents.PublisherProfile = smithy_client_1.expectString(output[\"PublisherProfile\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStackDriftDetectionStatusOutput = (output, context) => {\n    const contents = {\n        StackId: undefined,\n        StackDriftDetectionId: undefined,\n        StackDriftStatus: undefined,\n        DetectionStatus: undefined,\n        DetectionStatusReason: undefined,\n        DriftedStackResourceCount: undefined,\n        Timestamp: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"StackDriftDetectionId\"] !== undefined) {\n        contents.StackDriftDetectionId = smithy_client_1.expectString(output[\"StackDriftDetectionId\"]);\n    }\n    if (output[\"StackDriftStatus\"] !== undefined) {\n        contents.StackDriftStatus = smithy_client_1.expectString(output[\"StackDriftStatus\"]);\n    }\n    if (output[\"DetectionStatus\"] !== undefined) {\n        contents.DetectionStatus = smithy_client_1.expectString(output[\"DetectionStatus\"]);\n    }\n    if (output[\"DetectionStatusReason\"] !== undefined) {\n        contents.DetectionStatusReason = smithy_client_1.expectString(output[\"DetectionStatusReason\"]);\n    }\n    if (output[\"DriftedStackResourceCount\"] !== undefined) {\n        contents.DriftedStackResourceCount = smithy_client_1.strictParseInt32(output[\"DriftedStackResourceCount\"]);\n    }\n    if (output[\"Timestamp\"] !== undefined) {\n        contents.Timestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"Timestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStackEventsOutput = (output, context) => {\n    const contents = {\n        StackEvents: undefined,\n        NextToken: undefined,\n    };\n    if (output.StackEvents === \"\") {\n        contents.StackEvents = [];\n    }\n    if (output[\"StackEvents\"] !== undefined && output[\"StackEvents\"][\"member\"] !== undefined) {\n        contents.StackEvents = deserializeAws_queryStackEvents(smithy_client_1.getArrayIfSingleItem(output[\"StackEvents\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStackInstanceOutput = (output, context) => {\n    const contents = {\n        StackInstance: undefined,\n    };\n    if (output[\"StackInstance\"] !== undefined) {\n        contents.StackInstance = deserializeAws_queryStackInstance(output[\"StackInstance\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStackResourceDriftsOutput = (output, context) => {\n    const contents = {\n        StackResourceDrifts: undefined,\n        NextToken: undefined,\n    };\n    if (output.StackResourceDrifts === \"\") {\n        contents.StackResourceDrifts = [];\n    }\n    if (output[\"StackResourceDrifts\"] !== undefined && output[\"StackResourceDrifts\"][\"member\"] !== undefined) {\n        contents.StackResourceDrifts = deserializeAws_queryStackResourceDrifts(smithy_client_1.getArrayIfSingleItem(output[\"StackResourceDrifts\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStackResourceOutput = (output, context) => {\n    const contents = {\n        StackResourceDetail: undefined,\n    };\n    if (output[\"StackResourceDetail\"] !== undefined) {\n        contents.StackResourceDetail = deserializeAws_queryStackResourceDetail(output[\"StackResourceDetail\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStackResourcesOutput = (output, context) => {\n    const contents = {\n        StackResources: undefined,\n    };\n    if (output.StackResources === \"\") {\n        contents.StackResources = [];\n    }\n    if (output[\"StackResources\"] !== undefined && output[\"StackResources\"][\"member\"] !== undefined) {\n        contents.StackResources = deserializeAws_queryStackResources(smithy_client_1.getArrayIfSingleItem(output[\"StackResources\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStackSetOperationOutput = (output, context) => {\n    const contents = {\n        StackSetOperation: undefined,\n    };\n    if (output[\"StackSetOperation\"] !== undefined) {\n        contents.StackSetOperation = deserializeAws_queryStackSetOperation(output[\"StackSetOperation\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStackSetOutput = (output, context) => {\n    const contents = {\n        StackSet: undefined,\n    };\n    if (output[\"StackSet\"] !== undefined) {\n        contents.StackSet = deserializeAws_queryStackSet(output[\"StackSet\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeStacksOutput = (output, context) => {\n    const contents = {\n        Stacks: undefined,\n        NextToken: undefined,\n    };\n    if (output.Stacks === \"\") {\n        contents.Stacks = [];\n    }\n    if (output[\"Stacks\"] !== undefined && output[\"Stacks\"][\"member\"] !== undefined) {\n        contents.Stacks = deserializeAws_queryStacks(smithy_client_1.getArrayIfSingleItem(output[\"Stacks\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeTypeOutput = (output, context) => {\n    const contents = {\n        Arn: undefined,\n        Type: undefined,\n        TypeName: undefined,\n        DefaultVersionId: undefined,\n        IsDefaultVersion: undefined,\n        TypeTestsStatus: undefined,\n        TypeTestsStatusDescription: undefined,\n        Description: undefined,\n        Schema: undefined,\n        ProvisioningType: undefined,\n        DeprecatedStatus: undefined,\n        LoggingConfig: undefined,\n        RequiredActivatedTypes: undefined,\n        ExecutionRoleArn: undefined,\n        Visibility: undefined,\n        SourceUrl: undefined,\n        DocumentationUrl: undefined,\n        LastUpdated: undefined,\n        TimeCreated: undefined,\n        ConfigurationSchema: undefined,\n        PublisherId: undefined,\n        OriginalTypeName: undefined,\n        OriginalTypeArn: undefined,\n        PublicVersionNumber: undefined,\n        LatestPublicVersion: undefined,\n        IsActivated: undefined,\n        AutoUpdate: undefined,\n    };\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = smithy_client_1.expectString(output[\"Type\"]);\n    }\n    if (output[\"TypeName\"] !== undefined) {\n        contents.TypeName = smithy_client_1.expectString(output[\"TypeName\"]);\n    }\n    if (output[\"DefaultVersionId\"] !== undefined) {\n        contents.DefaultVersionId = smithy_client_1.expectString(output[\"DefaultVersionId\"]);\n    }\n    if (output[\"IsDefaultVersion\"] !== undefined) {\n        contents.IsDefaultVersion = smithy_client_1.parseBoolean(output[\"IsDefaultVersion\"]);\n    }\n    if (output[\"TypeTestsStatus\"] !== undefined) {\n        contents.TypeTestsStatus = smithy_client_1.expectString(output[\"TypeTestsStatus\"]);\n    }\n    if (output[\"TypeTestsStatusDescription\"] !== undefined) {\n        contents.TypeTestsStatusDescription = smithy_client_1.expectString(output[\"TypeTestsStatusDescription\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"Schema\"] !== undefined) {\n        contents.Schema = smithy_client_1.expectString(output[\"Schema\"]);\n    }\n    if (output[\"ProvisioningType\"] !== undefined) {\n        contents.ProvisioningType = smithy_client_1.expectString(output[\"ProvisioningType\"]);\n    }\n    if (output[\"DeprecatedStatus\"] !== undefined) {\n        contents.DeprecatedStatus = smithy_client_1.expectString(output[\"DeprecatedStatus\"]);\n    }\n    if (output[\"LoggingConfig\"] !== undefined) {\n        contents.LoggingConfig = deserializeAws_queryLoggingConfig(output[\"LoggingConfig\"], context);\n    }\n    if (output.RequiredActivatedTypes === \"\") {\n        contents.RequiredActivatedTypes = [];\n    }\n    if (output[\"RequiredActivatedTypes\"] !== undefined && output[\"RequiredActivatedTypes\"][\"member\"] !== undefined) {\n        contents.RequiredActivatedTypes = deserializeAws_queryRequiredActivatedTypes(smithy_client_1.getArrayIfSingleItem(output[\"RequiredActivatedTypes\"][\"member\"]), context);\n    }\n    if (output[\"ExecutionRoleArn\"] !== undefined) {\n        contents.ExecutionRoleArn = smithy_client_1.expectString(output[\"ExecutionRoleArn\"]);\n    }\n    if (output[\"Visibility\"] !== undefined) {\n        contents.Visibility = smithy_client_1.expectString(output[\"Visibility\"]);\n    }\n    if (output[\"SourceUrl\"] !== undefined) {\n        contents.SourceUrl = smithy_client_1.expectString(output[\"SourceUrl\"]);\n    }\n    if (output[\"DocumentationUrl\"] !== undefined) {\n        contents.DocumentationUrl = smithy_client_1.expectString(output[\"DocumentationUrl\"]);\n    }\n    if (output[\"LastUpdated\"] !== undefined) {\n        contents.LastUpdated = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastUpdated\"]));\n    }\n    if (output[\"TimeCreated\"] !== undefined) {\n        contents.TimeCreated = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"TimeCreated\"]));\n    }\n    if (output[\"ConfigurationSchema\"] !== undefined) {\n        contents.ConfigurationSchema = smithy_client_1.expectString(output[\"ConfigurationSchema\"]);\n    }\n    if (output[\"PublisherId\"] !== undefined) {\n        contents.PublisherId = smithy_client_1.expectString(output[\"PublisherId\"]);\n    }\n    if (output[\"OriginalTypeName\"] !== undefined) {\n        contents.OriginalTypeName = smithy_client_1.expectString(output[\"OriginalTypeName\"]);\n    }\n    if (output[\"OriginalTypeArn\"] !== undefined) {\n        contents.OriginalTypeArn = smithy_client_1.expectString(output[\"OriginalTypeArn\"]);\n    }\n    if (output[\"PublicVersionNumber\"] !== undefined) {\n        contents.PublicVersionNumber = smithy_client_1.expectString(output[\"PublicVersionNumber\"]);\n    }\n    if (output[\"LatestPublicVersion\"] !== undefined) {\n        contents.LatestPublicVersion = smithy_client_1.expectString(output[\"LatestPublicVersion\"]);\n    }\n    if (output[\"IsActivated\"] !== undefined) {\n        contents.IsActivated = smithy_client_1.parseBoolean(output[\"IsActivated\"]);\n    }\n    if (output[\"AutoUpdate\"] !== undefined) {\n        contents.AutoUpdate = smithy_client_1.parseBoolean(output[\"AutoUpdate\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDescribeTypeRegistrationOutput = (output, context) => {\n    const contents = {\n        ProgressStatus: undefined,\n        Description: undefined,\n        TypeArn: undefined,\n        TypeVersionArn: undefined,\n    };\n    if (output[\"ProgressStatus\"] !== undefined) {\n        contents.ProgressStatus = smithy_client_1.expectString(output[\"ProgressStatus\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"TypeArn\"] !== undefined) {\n        contents.TypeArn = smithy_client_1.expectString(output[\"TypeArn\"]);\n    }\n    if (output[\"TypeVersionArn\"] !== undefined) {\n        contents.TypeVersionArn = smithy_client_1.expectString(output[\"TypeVersionArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDetectStackDriftOutput = (output, context) => {\n    const contents = {\n        StackDriftDetectionId: undefined,\n    };\n    if (output[\"StackDriftDetectionId\"] !== undefined) {\n        contents.StackDriftDetectionId = smithy_client_1.expectString(output[\"StackDriftDetectionId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDetectStackResourceDriftOutput = (output, context) => {\n    const contents = {\n        StackResourceDrift: undefined,\n    };\n    if (output[\"StackResourceDrift\"] !== undefined) {\n        contents.StackResourceDrift = deserializeAws_queryStackResourceDrift(output[\"StackResourceDrift\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryDetectStackSetDriftOutput = (output, context) => {\n    const contents = {\n        OperationId: undefined,\n    };\n    if (output[\"OperationId\"] !== undefined) {\n        contents.OperationId = smithy_client_1.expectString(output[\"OperationId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryEstimateTemplateCostOutput = (output, context) => {\n    const contents = {\n        Url: undefined,\n    };\n    if (output[\"Url\"] !== undefined) {\n        contents.Url = smithy_client_1.expectString(output[\"Url\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryExecuteChangeSetOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryExport = (output, context) => {\n    const contents = {\n        ExportingStackId: undefined,\n        Name: undefined,\n        Value: undefined,\n    };\n    if (output[\"ExportingStackId\"] !== undefined) {\n        contents.ExportingStackId = smithy_client_1.expectString(output[\"ExportingStackId\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = smithy_client_1.expectString(output[\"Name\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = smithy_client_1.expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryExports = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryExport(entry, context);\n    });\n};\nconst deserializeAws_queryGetStackPolicyOutput = (output, context) => {\n    const contents = {\n        StackPolicyBody: undefined,\n    };\n    if (output[\"StackPolicyBody\"] !== undefined) {\n        contents.StackPolicyBody = smithy_client_1.expectString(output[\"StackPolicyBody\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetTemplateOutput = (output, context) => {\n    const contents = {\n        TemplateBody: undefined,\n        StagesAvailable: undefined,\n    };\n    if (output[\"TemplateBody\"] !== undefined) {\n        contents.TemplateBody = smithy_client_1.expectString(output[\"TemplateBody\"]);\n    }\n    if (output.StagesAvailable === \"\") {\n        contents.StagesAvailable = [];\n    }\n    if (output[\"StagesAvailable\"] !== undefined && output[\"StagesAvailable\"][\"member\"] !== undefined) {\n        contents.StagesAvailable = deserializeAws_queryStageList(smithy_client_1.getArrayIfSingleItem(output[\"StagesAvailable\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetTemplateSummaryOutput = (output, context) => {\n    const contents = {\n        Parameters: undefined,\n        Description: undefined,\n        Capabilities: undefined,\n        CapabilitiesReason: undefined,\n        ResourceTypes: undefined,\n        Version: undefined,\n        Metadata: undefined,\n        DeclaredTransforms: undefined,\n        ResourceIdentifierSummaries: undefined,\n    };\n    if (output.Parameters === \"\") {\n        contents.Parameters = [];\n    }\n    if (output[\"Parameters\"] !== undefined && output[\"Parameters\"][\"member\"] !== undefined) {\n        contents.Parameters = deserializeAws_queryParameterDeclarations(smithy_client_1.getArrayIfSingleItem(output[\"Parameters\"][\"member\"]), context);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output.Capabilities === \"\") {\n        contents.Capabilities = [];\n    }\n    if (output[\"Capabilities\"] !== undefined && output[\"Capabilities\"][\"member\"] !== undefined) {\n        contents.Capabilities = deserializeAws_queryCapabilities(smithy_client_1.getArrayIfSingleItem(output[\"Capabilities\"][\"member\"]), context);\n    }\n    if (output[\"CapabilitiesReason\"] !== undefined) {\n        contents.CapabilitiesReason = smithy_client_1.expectString(output[\"CapabilitiesReason\"]);\n    }\n    if (output.ResourceTypes === \"\") {\n        contents.ResourceTypes = [];\n    }\n    if (output[\"ResourceTypes\"] !== undefined && output[\"ResourceTypes\"][\"member\"] !== undefined) {\n        contents.ResourceTypes = deserializeAws_queryResourceTypes(smithy_client_1.getArrayIfSingleItem(output[\"ResourceTypes\"][\"member\"]), context);\n    }\n    if (output[\"Version\"] !== undefined) {\n        contents.Version = smithy_client_1.expectString(output[\"Version\"]);\n    }\n    if (output[\"Metadata\"] !== undefined) {\n        contents.Metadata = smithy_client_1.expectString(output[\"Metadata\"]);\n    }\n    if (output.DeclaredTransforms === \"\") {\n        contents.DeclaredTransforms = [];\n    }\n    if (output[\"DeclaredTransforms\"] !== undefined && output[\"DeclaredTransforms\"][\"member\"] !== undefined) {\n        contents.DeclaredTransforms = deserializeAws_queryTransformsList(smithy_client_1.getArrayIfSingleItem(output[\"DeclaredTransforms\"][\"member\"]), context);\n    }\n    if (output.ResourceIdentifierSummaries === \"\") {\n        contents.ResourceIdentifierSummaries = [];\n    }\n    if (output[\"ResourceIdentifierSummaries\"] !== undefined &&\n        output[\"ResourceIdentifierSummaries\"][\"member\"] !== undefined) {\n        contents.ResourceIdentifierSummaries = deserializeAws_queryResourceIdentifierSummaries(smithy_client_1.getArrayIfSingleItem(output[\"ResourceIdentifierSummaries\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryImports = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryImportStacksToStackSetOutput = (output, context) => {\n    const contents = {\n        OperationId: undefined,\n    };\n    if (output[\"OperationId\"] !== undefined) {\n        contents.OperationId = smithy_client_1.expectString(output[\"OperationId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInsufficientCapabilitiesException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidChangeSetStatusException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidOperationException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidStateTransitionException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryLimitExceededException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListChangeSetsOutput = (output, context) => {\n    const contents = {\n        Summaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.Summaries === \"\") {\n        contents.Summaries = [];\n    }\n    if (output[\"Summaries\"] !== undefined && output[\"Summaries\"][\"member\"] !== undefined) {\n        contents.Summaries = deserializeAws_queryChangeSetSummaries(smithy_client_1.getArrayIfSingleItem(output[\"Summaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListExportsOutput = (output, context) => {\n    const contents = {\n        Exports: undefined,\n        NextToken: undefined,\n    };\n    if (output.Exports === \"\") {\n        contents.Exports = [];\n    }\n    if (output[\"Exports\"] !== undefined && output[\"Exports\"][\"member\"] !== undefined) {\n        contents.Exports = deserializeAws_queryExports(smithy_client_1.getArrayIfSingleItem(output[\"Exports\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListImportsOutput = (output, context) => {\n    const contents = {\n        Imports: undefined,\n        NextToken: undefined,\n    };\n    if (output.Imports === \"\") {\n        contents.Imports = [];\n    }\n    if (output[\"Imports\"] !== undefined && output[\"Imports\"][\"member\"] !== undefined) {\n        contents.Imports = deserializeAws_queryImports(smithy_client_1.getArrayIfSingleItem(output[\"Imports\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListStackInstancesOutput = (output, context) => {\n    const contents = {\n        Summaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.Summaries === \"\") {\n        contents.Summaries = [];\n    }\n    if (output[\"Summaries\"] !== undefined && output[\"Summaries\"][\"member\"] !== undefined) {\n        contents.Summaries = deserializeAws_queryStackInstanceSummaries(smithy_client_1.getArrayIfSingleItem(output[\"Summaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListStackResourcesOutput = (output, context) => {\n    const contents = {\n        StackResourceSummaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.StackResourceSummaries === \"\") {\n        contents.StackResourceSummaries = [];\n    }\n    if (output[\"StackResourceSummaries\"] !== undefined && output[\"StackResourceSummaries\"][\"member\"] !== undefined) {\n        contents.StackResourceSummaries = deserializeAws_queryStackResourceSummaries(smithy_client_1.getArrayIfSingleItem(output[\"StackResourceSummaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListStackSetOperationResultsOutput = (output, context) => {\n    const contents = {\n        Summaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.Summaries === \"\") {\n        contents.Summaries = [];\n    }\n    if (output[\"Summaries\"] !== undefined && output[\"Summaries\"][\"member\"] !== undefined) {\n        contents.Summaries = deserializeAws_queryStackSetOperationResultSummaries(smithy_client_1.getArrayIfSingleItem(output[\"Summaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListStackSetOperationsOutput = (output, context) => {\n    const contents = {\n        Summaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.Summaries === \"\") {\n        contents.Summaries = [];\n    }\n    if (output[\"Summaries\"] !== undefined && output[\"Summaries\"][\"member\"] !== undefined) {\n        contents.Summaries = deserializeAws_queryStackSetOperationSummaries(smithy_client_1.getArrayIfSingleItem(output[\"Summaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListStackSetsOutput = (output, context) => {\n    const contents = {\n        Summaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.Summaries === \"\") {\n        contents.Summaries = [];\n    }\n    if (output[\"Summaries\"] !== undefined && output[\"Summaries\"][\"member\"] !== undefined) {\n        contents.Summaries = deserializeAws_queryStackSetSummaries(smithy_client_1.getArrayIfSingleItem(output[\"Summaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListStacksOutput = (output, context) => {\n    const contents = {\n        StackSummaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.StackSummaries === \"\") {\n        contents.StackSummaries = [];\n    }\n    if (output[\"StackSummaries\"] !== undefined && output[\"StackSummaries\"][\"member\"] !== undefined) {\n        contents.StackSummaries = deserializeAws_queryStackSummaries(smithy_client_1.getArrayIfSingleItem(output[\"StackSummaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListTypeRegistrationsOutput = (output, context) => {\n    const contents = {\n        RegistrationTokenList: undefined,\n        NextToken: undefined,\n    };\n    if (output.RegistrationTokenList === \"\") {\n        contents.RegistrationTokenList = [];\n    }\n    if (output[\"RegistrationTokenList\"] !== undefined && output[\"RegistrationTokenList\"][\"member\"] !== undefined) {\n        contents.RegistrationTokenList = deserializeAws_queryRegistrationTokenList(smithy_client_1.getArrayIfSingleItem(output[\"RegistrationTokenList\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListTypesOutput = (output, context) => {\n    const contents = {\n        TypeSummaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.TypeSummaries === \"\") {\n        contents.TypeSummaries = [];\n    }\n    if (output[\"TypeSummaries\"] !== undefined && output[\"TypeSummaries\"][\"member\"] !== undefined) {\n        contents.TypeSummaries = deserializeAws_queryTypeSummaries(smithy_client_1.getArrayIfSingleItem(output[\"TypeSummaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryListTypeVersionsOutput = (output, context) => {\n    const contents = {\n        TypeVersionSummaries: undefined,\n        NextToken: undefined,\n    };\n    if (output.TypeVersionSummaries === \"\") {\n        contents.TypeVersionSummaries = [];\n    }\n    if (output[\"TypeVersionSummaries\"] !== undefined && output[\"TypeVersionSummaries\"][\"member\"] !== undefined) {\n        contents.TypeVersionSummaries = deserializeAws_queryTypeVersionSummaries(smithy_client_1.getArrayIfSingleItem(output[\"TypeVersionSummaries\"][\"member\"]), context);\n    }\n    if (output[\"NextToken\"] !== undefined) {\n        contents.NextToken = smithy_client_1.expectString(output[\"NextToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryLoggingConfig = (output, context) => {\n    const contents = {\n        LogRoleArn: undefined,\n        LogGroupName: undefined,\n    };\n    if (output[\"LogRoleArn\"] !== undefined) {\n        contents.LogRoleArn = smithy_client_1.expectString(output[\"LogRoleArn\"]);\n    }\n    if (output[\"LogGroupName\"] !== undefined) {\n        contents.LogGroupName = smithy_client_1.expectString(output[\"LogGroupName\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryLogicalResourceIds = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryManagedExecution = (output, context) => {\n    const contents = {\n        Active: undefined,\n    };\n    if (output[\"Active\"] !== undefined) {\n        contents.Active = smithy_client_1.parseBoolean(output[\"Active\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryModuleInfo = (output, context) => {\n    const contents = {\n        TypeHierarchy: undefined,\n        LogicalIdHierarchy: undefined,\n    };\n    if (output[\"TypeHierarchy\"] !== undefined) {\n        contents.TypeHierarchy = smithy_client_1.expectString(output[\"TypeHierarchy\"]);\n    }\n    if (output[\"LogicalIdHierarchy\"] !== undefined) {\n        contents.LogicalIdHierarchy = smithy_client_1.expectString(output[\"LogicalIdHierarchy\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryNameAlreadyExistsException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryNotificationARNs = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryOperationIdAlreadyExistsException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryOperationInProgressException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryOperationNotFoundException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryOperationStatusCheckFailedException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryOrganizationalUnitIdList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryOutput = (output, context) => {\n    const contents = {\n        OutputKey: undefined,\n        OutputValue: undefined,\n        Description: undefined,\n        ExportName: undefined,\n    };\n    if (output[\"OutputKey\"] !== undefined) {\n        contents.OutputKey = smithy_client_1.expectString(output[\"OutputKey\"]);\n    }\n    if (output[\"OutputValue\"] !== undefined) {\n        contents.OutputValue = smithy_client_1.expectString(output[\"OutputValue\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"ExportName\"] !== undefined) {\n        contents.ExportName = smithy_client_1.expectString(output[\"ExportName\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryOutputs = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryOutput(entry, context);\n    });\n};\nconst deserializeAws_queryParameter = (output, context) => {\n    const contents = {\n        ParameterKey: undefined,\n        ParameterValue: undefined,\n        UsePreviousValue: undefined,\n        ResolvedValue: undefined,\n    };\n    if (output[\"ParameterKey\"] !== undefined) {\n        contents.ParameterKey = smithy_client_1.expectString(output[\"ParameterKey\"]);\n    }\n    if (output[\"ParameterValue\"] !== undefined) {\n        contents.ParameterValue = smithy_client_1.expectString(output[\"ParameterValue\"]);\n    }\n    if (output[\"UsePreviousValue\"] !== undefined) {\n        contents.UsePreviousValue = smithy_client_1.parseBoolean(output[\"UsePreviousValue\"]);\n    }\n    if (output[\"ResolvedValue\"] !== undefined) {\n        contents.ResolvedValue = smithy_client_1.expectString(output[\"ResolvedValue\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryParameterConstraints = (output, context) => {\n    const contents = {\n        AllowedValues: undefined,\n    };\n    if (output.AllowedValues === \"\") {\n        contents.AllowedValues = [];\n    }\n    if (output[\"AllowedValues\"] !== undefined && output[\"AllowedValues\"][\"member\"] !== undefined) {\n        contents.AllowedValues = deserializeAws_queryAllowedValues(smithy_client_1.getArrayIfSingleItem(output[\"AllowedValues\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryParameterDeclaration = (output, context) => {\n    const contents = {\n        ParameterKey: undefined,\n        DefaultValue: undefined,\n        ParameterType: undefined,\n        NoEcho: undefined,\n        Description: undefined,\n        ParameterConstraints: undefined,\n    };\n    if (output[\"ParameterKey\"] !== undefined) {\n        contents.ParameterKey = smithy_client_1.expectString(output[\"ParameterKey\"]);\n    }\n    if (output[\"DefaultValue\"] !== undefined) {\n        contents.DefaultValue = smithy_client_1.expectString(output[\"DefaultValue\"]);\n    }\n    if (output[\"ParameterType\"] !== undefined) {\n        contents.ParameterType = smithy_client_1.expectString(output[\"ParameterType\"]);\n    }\n    if (output[\"NoEcho\"] !== undefined) {\n        contents.NoEcho = smithy_client_1.parseBoolean(output[\"NoEcho\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"ParameterConstraints\"] !== undefined) {\n        contents.ParameterConstraints = deserializeAws_queryParameterConstraints(output[\"ParameterConstraints\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryParameterDeclarations = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryParameterDeclaration(entry, context);\n    });\n};\nconst deserializeAws_queryParameters = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryParameter(entry, context);\n    });\n};\nconst deserializeAws_queryPhysicalResourceIdContext = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryPhysicalResourceIdContextKeyValuePair(entry, context);\n    });\n};\nconst deserializeAws_queryPhysicalResourceIdContextKeyValuePair = (output, context) => {\n    const contents = {\n        Key: undefined,\n        Value: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = smithy_client_1.expectString(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = smithy_client_1.expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPropertyDifference = (output, context) => {\n    const contents = {\n        PropertyPath: undefined,\n        ExpectedValue: undefined,\n        ActualValue: undefined,\n        DifferenceType: undefined,\n    };\n    if (output[\"PropertyPath\"] !== undefined) {\n        contents.PropertyPath = smithy_client_1.expectString(output[\"PropertyPath\"]);\n    }\n    if (output[\"ExpectedValue\"] !== undefined) {\n        contents.ExpectedValue = smithy_client_1.expectString(output[\"ExpectedValue\"]);\n    }\n    if (output[\"ActualValue\"] !== undefined) {\n        contents.ActualValue = smithy_client_1.expectString(output[\"ActualValue\"]);\n    }\n    if (output[\"DifferenceType\"] !== undefined) {\n        contents.DifferenceType = smithy_client_1.expectString(output[\"DifferenceType\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPropertyDifferences = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryPropertyDifference(entry, context);\n    });\n};\nconst deserializeAws_queryPublishTypeOutput = (output, context) => {\n    const contents = {\n        PublicTypeArn: undefined,\n    };\n    if (output[\"PublicTypeArn\"] !== undefined) {\n        contents.PublicTypeArn = smithy_client_1.expectString(output[\"PublicTypeArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRecordHandlerProgressOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryRegionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryRegisterPublisherOutput = (output, context) => {\n    const contents = {\n        PublisherId: undefined,\n    };\n    if (output[\"PublisherId\"] !== undefined) {\n        contents.PublisherId = smithy_client_1.expectString(output[\"PublisherId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRegisterTypeOutput = (output, context) => {\n    const contents = {\n        RegistrationToken: undefined,\n    };\n    if (output[\"RegistrationToken\"] !== undefined) {\n        contents.RegistrationToken = smithy_client_1.expectString(output[\"RegistrationToken\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRegistrationTokenList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryRequiredActivatedType = (output, context) => {\n    const contents = {\n        TypeNameAlias: undefined,\n        OriginalTypeName: undefined,\n        PublisherId: undefined,\n        SupportedMajorVersions: undefined,\n    };\n    if (output[\"TypeNameAlias\"] !== undefined) {\n        contents.TypeNameAlias = smithy_client_1.expectString(output[\"TypeNameAlias\"]);\n    }\n    if (output[\"OriginalTypeName\"] !== undefined) {\n        contents.OriginalTypeName = smithy_client_1.expectString(output[\"OriginalTypeName\"]);\n    }\n    if (output[\"PublisherId\"] !== undefined) {\n        contents.PublisherId = smithy_client_1.expectString(output[\"PublisherId\"]);\n    }\n    if (output.SupportedMajorVersions === \"\") {\n        contents.SupportedMajorVersions = [];\n    }\n    if (output[\"SupportedMajorVersions\"] !== undefined && output[\"SupportedMajorVersions\"][\"member\"] !== undefined) {\n        contents.SupportedMajorVersions = deserializeAws_querySupportedMajorVersions(smithy_client_1.getArrayIfSingleItem(output[\"SupportedMajorVersions\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryRequiredActivatedTypes = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryRequiredActivatedType(entry, context);\n    });\n};\nconst deserializeAws_queryResourceChange = (output, context) => {\n    const contents = {\n        Action: undefined,\n        LogicalResourceId: undefined,\n        PhysicalResourceId: undefined,\n        ResourceType: undefined,\n        Replacement: undefined,\n        Scope: undefined,\n        Details: undefined,\n        ChangeSetId: undefined,\n        ModuleInfo: undefined,\n    };\n    if (output[\"Action\"] !== undefined) {\n        contents.Action = smithy_client_1.expectString(output[\"Action\"]);\n    }\n    if (output[\"LogicalResourceId\"] !== undefined) {\n        contents.LogicalResourceId = smithy_client_1.expectString(output[\"LogicalResourceId\"]);\n    }\n    if (output[\"PhysicalResourceId\"] !== undefined) {\n        contents.PhysicalResourceId = smithy_client_1.expectString(output[\"PhysicalResourceId\"]);\n    }\n    if (output[\"ResourceType\"] !== undefined) {\n        contents.ResourceType = smithy_client_1.expectString(output[\"ResourceType\"]);\n    }\n    if (output[\"Replacement\"] !== undefined) {\n        contents.Replacement = smithy_client_1.expectString(output[\"Replacement\"]);\n    }\n    if (output.Scope === \"\") {\n        contents.Scope = [];\n    }\n    if (output[\"Scope\"] !== undefined && output[\"Scope\"][\"member\"] !== undefined) {\n        contents.Scope = deserializeAws_queryScope(smithy_client_1.getArrayIfSingleItem(output[\"Scope\"][\"member\"]), context);\n    }\n    if (output.Details === \"\") {\n        contents.Details = [];\n    }\n    if (output[\"Details\"] !== undefined && output[\"Details\"][\"member\"] !== undefined) {\n        contents.Details = deserializeAws_queryResourceChangeDetails(smithy_client_1.getArrayIfSingleItem(output[\"Details\"][\"member\"]), context);\n    }\n    if (output[\"ChangeSetId\"] !== undefined) {\n        contents.ChangeSetId = smithy_client_1.expectString(output[\"ChangeSetId\"]);\n    }\n    if (output[\"ModuleInfo\"] !== undefined) {\n        contents.ModuleInfo = deserializeAws_queryModuleInfo(output[\"ModuleInfo\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryResourceChangeDetail = (output, context) => {\n    const contents = {\n        Target: undefined,\n        Evaluation: undefined,\n        ChangeSource: undefined,\n        CausingEntity: undefined,\n    };\n    if (output[\"Target\"] !== undefined) {\n        contents.Target = deserializeAws_queryResourceTargetDefinition(output[\"Target\"], context);\n    }\n    if (output[\"Evaluation\"] !== undefined) {\n        contents.Evaluation = smithy_client_1.expectString(output[\"Evaluation\"]);\n    }\n    if (output[\"ChangeSource\"] !== undefined) {\n        contents.ChangeSource = smithy_client_1.expectString(output[\"ChangeSource\"]);\n    }\n    if (output[\"CausingEntity\"] !== undefined) {\n        contents.CausingEntity = smithy_client_1.expectString(output[\"CausingEntity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryResourceChangeDetails = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryResourceChangeDetail(entry, context);\n    });\n};\nconst deserializeAws_queryResourceIdentifiers = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryResourceIdentifierSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryResourceIdentifierSummary(entry, context);\n    });\n};\nconst deserializeAws_queryResourceIdentifierSummary = (output, context) => {\n    const contents = {\n        ResourceType: undefined,\n        LogicalResourceIds: undefined,\n        ResourceIdentifiers: undefined,\n    };\n    if (output[\"ResourceType\"] !== undefined) {\n        contents.ResourceType = smithy_client_1.expectString(output[\"ResourceType\"]);\n    }\n    if (output.LogicalResourceIds === \"\") {\n        contents.LogicalResourceIds = [];\n    }\n    if (output[\"LogicalResourceIds\"] !== undefined && output[\"LogicalResourceIds\"][\"member\"] !== undefined) {\n        contents.LogicalResourceIds = deserializeAws_queryLogicalResourceIds(smithy_client_1.getArrayIfSingleItem(output[\"LogicalResourceIds\"][\"member\"]), context);\n    }\n    if (output.ResourceIdentifiers === \"\") {\n        contents.ResourceIdentifiers = [];\n    }\n    if (output[\"ResourceIdentifiers\"] !== undefined && output[\"ResourceIdentifiers\"][\"member\"] !== undefined) {\n        contents.ResourceIdentifiers = deserializeAws_queryResourceIdentifiers(smithy_client_1.getArrayIfSingleItem(output[\"ResourceIdentifiers\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeAws_queryResourceTargetDefinition = (output, context) => {\n    const contents = {\n        Attribute: undefined,\n        Name: undefined,\n        RequiresRecreation: undefined,\n    };\n    if (output[\"Attribute\"] !== undefined) {\n        contents.Attribute = smithy_client_1.expectString(output[\"Attribute\"]);\n    }\n    if (output[\"Name\"] !== undefined) {\n        contents.Name = smithy_client_1.expectString(output[\"Name\"]);\n    }\n    if (output[\"RequiresRecreation\"] !== undefined) {\n        contents.RequiresRecreation = smithy_client_1.expectString(output[\"RequiresRecreation\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryResourceTypes = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryRollbackConfiguration = (output, context) => {\n    const contents = {\n        RollbackTriggers: undefined,\n        MonitoringTimeInMinutes: undefined,\n    };\n    if (output.RollbackTriggers === \"\") {\n        contents.RollbackTriggers = [];\n    }\n    if (output[\"RollbackTriggers\"] !== undefined && output[\"RollbackTriggers\"][\"member\"] !== undefined) {\n        contents.RollbackTriggers = deserializeAws_queryRollbackTriggers(smithy_client_1.getArrayIfSingleItem(output[\"RollbackTriggers\"][\"member\"]), context);\n    }\n    if (output[\"MonitoringTimeInMinutes\"] !== undefined) {\n        contents.MonitoringTimeInMinutes = smithy_client_1.strictParseInt32(output[\"MonitoringTimeInMinutes\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRollbackStackOutput = (output, context) => {\n    const contents = {\n        StackId: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRollbackTrigger = (output, context) => {\n    const contents = {\n        Arn: undefined,\n        Type: undefined,\n    };\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = smithy_client_1.expectString(output[\"Type\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRollbackTriggers = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryRollbackTrigger(entry, context);\n    });\n};\nconst deserializeAws_queryScope = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_querySetTypeConfigurationOutput = (output, context) => {\n    const contents = {\n        ConfigurationArn: undefined,\n    };\n    if (output[\"ConfigurationArn\"] !== undefined) {\n        contents.ConfigurationArn = smithy_client_1.expectString(output[\"ConfigurationArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_querySetTypeDefaultVersionOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_queryStack = (output, context) => {\n    const contents = {\n        StackId: undefined,\n        StackName: undefined,\n        ChangeSetId: undefined,\n        Description: undefined,\n        Parameters: undefined,\n        CreationTime: undefined,\n        DeletionTime: undefined,\n        LastUpdatedTime: undefined,\n        RollbackConfiguration: undefined,\n        StackStatus: undefined,\n        StackStatusReason: undefined,\n        DisableRollback: undefined,\n        NotificationARNs: undefined,\n        TimeoutInMinutes: undefined,\n        Capabilities: undefined,\n        Outputs: undefined,\n        RoleARN: undefined,\n        Tags: undefined,\n        EnableTerminationProtection: undefined,\n        ParentId: undefined,\n        RootId: undefined,\n        DriftInformation: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"StackName\"] !== undefined) {\n        contents.StackName = smithy_client_1.expectString(output[\"StackName\"]);\n    }\n    if (output[\"ChangeSetId\"] !== undefined) {\n        contents.ChangeSetId = smithy_client_1.expectString(output[\"ChangeSetId\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output.Parameters === \"\") {\n        contents.Parameters = [];\n    }\n    if (output[\"Parameters\"] !== undefined && output[\"Parameters\"][\"member\"] !== undefined) {\n        contents.Parameters = deserializeAws_queryParameters(smithy_client_1.getArrayIfSingleItem(output[\"Parameters\"][\"member\"]), context);\n    }\n    if (output[\"CreationTime\"] !== undefined) {\n        contents.CreationTime = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"CreationTime\"]));\n    }\n    if (output[\"DeletionTime\"] !== undefined) {\n        contents.DeletionTime = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"DeletionTime\"]));\n    }\n    if (output[\"LastUpdatedTime\"] !== undefined) {\n        contents.LastUpdatedTime = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastUpdatedTime\"]));\n    }\n    if (output[\"RollbackConfiguration\"] !== undefined) {\n        contents.RollbackConfiguration = deserializeAws_queryRollbackConfiguration(output[\"RollbackConfiguration\"], context);\n    }\n    if (output[\"StackStatus\"] !== undefined) {\n        contents.StackStatus = smithy_client_1.expectString(output[\"StackStatus\"]);\n    }\n    if (output[\"StackStatusReason\"] !== undefined) {\n        contents.StackStatusReason = smithy_client_1.expectString(output[\"StackStatusReason\"]);\n    }\n    if (output[\"DisableRollback\"] !== undefined) {\n        contents.DisableRollback = smithy_client_1.parseBoolean(output[\"DisableRollback\"]);\n    }\n    if (output.NotificationARNs === \"\") {\n        contents.NotificationARNs = [];\n    }\n    if (output[\"NotificationARNs\"] !== undefined && output[\"NotificationARNs\"][\"member\"] !== undefined) {\n        contents.NotificationARNs = deserializeAws_queryNotificationARNs(smithy_client_1.getArrayIfSingleItem(output[\"NotificationARNs\"][\"member\"]), context);\n    }\n    if (output[\"TimeoutInMinutes\"] !== undefined) {\n        contents.TimeoutInMinutes = smithy_client_1.strictParseInt32(output[\"TimeoutInMinutes\"]);\n    }\n    if (output.Capabilities === \"\") {\n        contents.Capabilities = [];\n    }\n    if (output[\"Capabilities\"] !== undefined && output[\"Capabilities\"][\"member\"] !== undefined) {\n        contents.Capabilities = deserializeAws_queryCapabilities(smithy_client_1.getArrayIfSingleItem(output[\"Capabilities\"][\"member\"]), context);\n    }\n    if (output.Outputs === \"\") {\n        contents.Outputs = [];\n    }\n    if (output[\"Outputs\"] !== undefined && output[\"Outputs\"][\"member\"] !== undefined) {\n        contents.Outputs = deserializeAws_queryOutputs(smithy_client_1.getArrayIfSingleItem(output[\"Outputs\"][\"member\"]), context);\n    }\n    if (output[\"RoleARN\"] !== undefined) {\n        contents.RoleARN = smithy_client_1.expectString(output[\"RoleARN\"]);\n    }\n    if (output.Tags === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tags\"] !== undefined && output[\"Tags\"][\"member\"] !== undefined) {\n        contents.Tags = deserializeAws_queryTags(smithy_client_1.getArrayIfSingleItem(output[\"Tags\"][\"member\"]), context);\n    }\n    if (output[\"EnableTerminationProtection\"] !== undefined) {\n        contents.EnableTerminationProtection = smithy_client_1.parseBoolean(output[\"EnableTerminationProtection\"]);\n    }\n    if (output[\"ParentId\"] !== undefined) {\n        contents.ParentId = smithy_client_1.expectString(output[\"ParentId\"]);\n    }\n    if (output[\"RootId\"] !== undefined) {\n        contents.RootId = smithy_client_1.expectString(output[\"RootId\"]);\n    }\n    if (output[\"DriftInformation\"] !== undefined) {\n        contents.DriftInformation = deserializeAws_queryStackDriftInformation(output[\"DriftInformation\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackDriftInformation = (output, context) => {\n    const contents = {\n        StackDriftStatus: undefined,\n        LastCheckTimestamp: undefined,\n    };\n    if (output[\"StackDriftStatus\"] !== undefined) {\n        contents.StackDriftStatus = smithy_client_1.expectString(output[\"StackDriftStatus\"]);\n    }\n    if (output[\"LastCheckTimestamp\"] !== undefined) {\n        contents.LastCheckTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastCheckTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryStackDriftInformationSummary = (output, context) => {\n    const contents = {\n        StackDriftStatus: undefined,\n        LastCheckTimestamp: undefined,\n    };\n    if (output[\"StackDriftStatus\"] !== undefined) {\n        contents.StackDriftStatus = smithy_client_1.expectString(output[\"StackDriftStatus\"]);\n    }\n    if (output[\"LastCheckTimestamp\"] !== undefined) {\n        contents.LastCheckTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastCheckTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryStackEvent = (output, context) => {\n    const contents = {\n        StackId: undefined,\n        EventId: undefined,\n        StackName: undefined,\n        LogicalResourceId: undefined,\n        PhysicalResourceId: undefined,\n        ResourceType: undefined,\n        Timestamp: undefined,\n        ResourceStatus: undefined,\n        ResourceStatusReason: undefined,\n        ResourceProperties: undefined,\n        ClientRequestToken: undefined,\n        HookType: undefined,\n        HookStatus: undefined,\n        HookStatusReason: undefined,\n        HookInvocationPoint: undefined,\n        HookFailureMode: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"EventId\"] !== undefined) {\n        contents.EventId = smithy_client_1.expectString(output[\"EventId\"]);\n    }\n    if (output[\"StackName\"] !== undefined) {\n        contents.StackName = smithy_client_1.expectString(output[\"StackName\"]);\n    }\n    if (output[\"LogicalResourceId\"] !== undefined) {\n        contents.LogicalResourceId = smithy_client_1.expectString(output[\"LogicalResourceId\"]);\n    }\n    if (output[\"PhysicalResourceId\"] !== undefined) {\n        contents.PhysicalResourceId = smithy_client_1.expectString(output[\"PhysicalResourceId\"]);\n    }\n    if (output[\"ResourceType\"] !== undefined) {\n        contents.ResourceType = smithy_client_1.expectString(output[\"ResourceType\"]);\n    }\n    if (output[\"Timestamp\"] !== undefined) {\n        contents.Timestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"Timestamp\"]));\n    }\n    if (output[\"ResourceStatus\"] !== undefined) {\n        contents.ResourceStatus = smithy_client_1.expectString(output[\"ResourceStatus\"]);\n    }\n    if (output[\"ResourceStatusReason\"] !== undefined) {\n        contents.ResourceStatusReason = smithy_client_1.expectString(output[\"ResourceStatusReason\"]);\n    }\n    if (output[\"ResourceProperties\"] !== undefined) {\n        contents.ResourceProperties = smithy_client_1.expectString(output[\"ResourceProperties\"]);\n    }\n    if (output[\"ClientRequestToken\"] !== undefined) {\n        contents.ClientRequestToken = smithy_client_1.expectString(output[\"ClientRequestToken\"]);\n    }\n    if (output[\"HookType\"] !== undefined) {\n        contents.HookType = smithy_client_1.expectString(output[\"HookType\"]);\n    }\n    if (output[\"HookStatus\"] !== undefined) {\n        contents.HookStatus = smithy_client_1.expectString(output[\"HookStatus\"]);\n    }\n    if (output[\"HookStatusReason\"] !== undefined) {\n        contents.HookStatusReason = smithy_client_1.expectString(output[\"HookStatusReason\"]);\n    }\n    if (output[\"HookInvocationPoint\"] !== undefined) {\n        contents.HookInvocationPoint = smithy_client_1.expectString(output[\"HookInvocationPoint\"]);\n    }\n    if (output[\"HookFailureMode\"] !== undefined) {\n        contents.HookFailureMode = smithy_client_1.expectString(output[\"HookFailureMode\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackEvents = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackEvent(entry, context);\n    });\n};\nconst deserializeAws_queryStackInstance = (output, context) => {\n    const contents = {\n        StackSetId: undefined,\n        Region: undefined,\n        Account: undefined,\n        StackId: undefined,\n        ParameterOverrides: undefined,\n        Status: undefined,\n        StackInstanceStatus: undefined,\n        StatusReason: undefined,\n        OrganizationalUnitId: undefined,\n        DriftStatus: undefined,\n        LastDriftCheckTimestamp: undefined,\n    };\n    if (output[\"StackSetId\"] !== undefined) {\n        contents.StackSetId = smithy_client_1.expectString(output[\"StackSetId\"]);\n    }\n    if (output[\"Region\"] !== undefined) {\n        contents.Region = smithy_client_1.expectString(output[\"Region\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = smithy_client_1.expectString(output[\"Account\"]);\n    }\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output.ParameterOverrides === \"\") {\n        contents.ParameterOverrides = [];\n    }\n    if (output[\"ParameterOverrides\"] !== undefined && output[\"ParameterOverrides\"][\"member\"] !== undefined) {\n        contents.ParameterOverrides = deserializeAws_queryParameters(smithy_client_1.getArrayIfSingleItem(output[\"ParameterOverrides\"][\"member\"]), context);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"StackInstanceStatus\"] !== undefined) {\n        contents.StackInstanceStatus = deserializeAws_queryStackInstanceComprehensiveStatus(output[\"StackInstanceStatus\"], context);\n    }\n    if (output[\"StatusReason\"] !== undefined) {\n        contents.StatusReason = smithy_client_1.expectString(output[\"StatusReason\"]);\n    }\n    if (output[\"OrganizationalUnitId\"] !== undefined) {\n        contents.OrganizationalUnitId = smithy_client_1.expectString(output[\"OrganizationalUnitId\"]);\n    }\n    if (output[\"DriftStatus\"] !== undefined) {\n        contents.DriftStatus = smithy_client_1.expectString(output[\"DriftStatus\"]);\n    }\n    if (output[\"LastDriftCheckTimestamp\"] !== undefined) {\n        contents.LastDriftCheckTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastDriftCheckTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryStackInstanceComprehensiveStatus = (output, context) => {\n    const contents = {\n        DetailedStatus: undefined,\n    };\n    if (output[\"DetailedStatus\"] !== undefined) {\n        contents.DetailedStatus = smithy_client_1.expectString(output[\"DetailedStatus\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackInstanceNotFoundException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackInstanceSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackInstanceSummary(entry, context);\n    });\n};\nconst deserializeAws_queryStackInstanceSummary = (output, context) => {\n    const contents = {\n        StackSetId: undefined,\n        Region: undefined,\n        Account: undefined,\n        StackId: undefined,\n        Status: undefined,\n        StatusReason: undefined,\n        StackInstanceStatus: undefined,\n        OrganizationalUnitId: undefined,\n        DriftStatus: undefined,\n        LastDriftCheckTimestamp: undefined,\n    };\n    if (output[\"StackSetId\"] !== undefined) {\n        contents.StackSetId = smithy_client_1.expectString(output[\"StackSetId\"]);\n    }\n    if (output[\"Region\"] !== undefined) {\n        contents.Region = smithy_client_1.expectString(output[\"Region\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = smithy_client_1.expectString(output[\"Account\"]);\n    }\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"StatusReason\"] !== undefined) {\n        contents.StatusReason = smithy_client_1.expectString(output[\"StatusReason\"]);\n    }\n    if (output[\"StackInstanceStatus\"] !== undefined) {\n        contents.StackInstanceStatus = deserializeAws_queryStackInstanceComprehensiveStatus(output[\"StackInstanceStatus\"], context);\n    }\n    if (output[\"OrganizationalUnitId\"] !== undefined) {\n        contents.OrganizationalUnitId = smithy_client_1.expectString(output[\"OrganizationalUnitId\"]);\n    }\n    if (output[\"DriftStatus\"] !== undefined) {\n        contents.DriftStatus = smithy_client_1.expectString(output[\"DriftStatus\"]);\n    }\n    if (output[\"LastDriftCheckTimestamp\"] !== undefined) {\n        contents.LastDriftCheckTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastDriftCheckTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryStackNotFoundException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackResource = (output, context) => {\n    const contents = {\n        StackName: undefined,\n        StackId: undefined,\n        LogicalResourceId: undefined,\n        PhysicalResourceId: undefined,\n        ResourceType: undefined,\n        Timestamp: undefined,\n        ResourceStatus: undefined,\n        ResourceStatusReason: undefined,\n        Description: undefined,\n        DriftInformation: undefined,\n        ModuleInfo: undefined,\n    };\n    if (output[\"StackName\"] !== undefined) {\n        contents.StackName = smithy_client_1.expectString(output[\"StackName\"]);\n    }\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"LogicalResourceId\"] !== undefined) {\n        contents.LogicalResourceId = smithy_client_1.expectString(output[\"LogicalResourceId\"]);\n    }\n    if (output[\"PhysicalResourceId\"] !== undefined) {\n        contents.PhysicalResourceId = smithy_client_1.expectString(output[\"PhysicalResourceId\"]);\n    }\n    if (output[\"ResourceType\"] !== undefined) {\n        contents.ResourceType = smithy_client_1.expectString(output[\"ResourceType\"]);\n    }\n    if (output[\"Timestamp\"] !== undefined) {\n        contents.Timestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"Timestamp\"]));\n    }\n    if (output[\"ResourceStatus\"] !== undefined) {\n        contents.ResourceStatus = smithy_client_1.expectString(output[\"ResourceStatus\"]);\n    }\n    if (output[\"ResourceStatusReason\"] !== undefined) {\n        contents.ResourceStatusReason = smithy_client_1.expectString(output[\"ResourceStatusReason\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"DriftInformation\"] !== undefined) {\n        contents.DriftInformation = deserializeAws_queryStackResourceDriftInformation(output[\"DriftInformation\"], context);\n    }\n    if (output[\"ModuleInfo\"] !== undefined) {\n        contents.ModuleInfo = deserializeAws_queryModuleInfo(output[\"ModuleInfo\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackResourceDetail = (output, context) => {\n    const contents = {\n        StackName: undefined,\n        StackId: undefined,\n        LogicalResourceId: undefined,\n        PhysicalResourceId: undefined,\n        ResourceType: undefined,\n        LastUpdatedTimestamp: undefined,\n        ResourceStatus: undefined,\n        ResourceStatusReason: undefined,\n        Description: undefined,\n        Metadata: undefined,\n        DriftInformation: undefined,\n        ModuleInfo: undefined,\n    };\n    if (output[\"StackName\"] !== undefined) {\n        contents.StackName = smithy_client_1.expectString(output[\"StackName\"]);\n    }\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"LogicalResourceId\"] !== undefined) {\n        contents.LogicalResourceId = smithy_client_1.expectString(output[\"LogicalResourceId\"]);\n    }\n    if (output[\"PhysicalResourceId\"] !== undefined) {\n        contents.PhysicalResourceId = smithy_client_1.expectString(output[\"PhysicalResourceId\"]);\n    }\n    if (output[\"ResourceType\"] !== undefined) {\n        contents.ResourceType = smithy_client_1.expectString(output[\"ResourceType\"]);\n    }\n    if (output[\"LastUpdatedTimestamp\"] !== undefined) {\n        contents.LastUpdatedTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastUpdatedTimestamp\"]));\n    }\n    if (output[\"ResourceStatus\"] !== undefined) {\n        contents.ResourceStatus = smithy_client_1.expectString(output[\"ResourceStatus\"]);\n    }\n    if (output[\"ResourceStatusReason\"] !== undefined) {\n        contents.ResourceStatusReason = smithy_client_1.expectString(output[\"ResourceStatusReason\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"Metadata\"] !== undefined) {\n        contents.Metadata = smithy_client_1.expectString(output[\"Metadata\"]);\n    }\n    if (output[\"DriftInformation\"] !== undefined) {\n        contents.DriftInformation = deserializeAws_queryStackResourceDriftInformation(output[\"DriftInformation\"], context);\n    }\n    if (output[\"ModuleInfo\"] !== undefined) {\n        contents.ModuleInfo = deserializeAws_queryModuleInfo(output[\"ModuleInfo\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackResourceDrift = (output, context) => {\n    const contents = {\n        StackId: undefined,\n        LogicalResourceId: undefined,\n        PhysicalResourceId: undefined,\n        PhysicalResourceIdContext: undefined,\n        ResourceType: undefined,\n        ExpectedProperties: undefined,\n        ActualProperties: undefined,\n        PropertyDifferences: undefined,\n        StackResourceDriftStatus: undefined,\n        Timestamp: undefined,\n        ModuleInfo: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"LogicalResourceId\"] !== undefined) {\n        contents.LogicalResourceId = smithy_client_1.expectString(output[\"LogicalResourceId\"]);\n    }\n    if (output[\"PhysicalResourceId\"] !== undefined) {\n        contents.PhysicalResourceId = smithy_client_1.expectString(output[\"PhysicalResourceId\"]);\n    }\n    if (output.PhysicalResourceIdContext === \"\") {\n        contents.PhysicalResourceIdContext = [];\n    }\n    if (output[\"PhysicalResourceIdContext\"] !== undefined &&\n        output[\"PhysicalResourceIdContext\"][\"member\"] !== undefined) {\n        contents.PhysicalResourceIdContext = deserializeAws_queryPhysicalResourceIdContext(smithy_client_1.getArrayIfSingleItem(output[\"PhysicalResourceIdContext\"][\"member\"]), context);\n    }\n    if (output[\"ResourceType\"] !== undefined) {\n        contents.ResourceType = smithy_client_1.expectString(output[\"ResourceType\"]);\n    }\n    if (output[\"ExpectedProperties\"] !== undefined) {\n        contents.ExpectedProperties = smithy_client_1.expectString(output[\"ExpectedProperties\"]);\n    }\n    if (output[\"ActualProperties\"] !== undefined) {\n        contents.ActualProperties = smithy_client_1.expectString(output[\"ActualProperties\"]);\n    }\n    if (output.PropertyDifferences === \"\") {\n        contents.PropertyDifferences = [];\n    }\n    if (output[\"PropertyDifferences\"] !== undefined && output[\"PropertyDifferences\"][\"member\"] !== undefined) {\n        contents.PropertyDifferences = deserializeAws_queryPropertyDifferences(smithy_client_1.getArrayIfSingleItem(output[\"PropertyDifferences\"][\"member\"]), context);\n    }\n    if (output[\"StackResourceDriftStatus\"] !== undefined) {\n        contents.StackResourceDriftStatus = smithy_client_1.expectString(output[\"StackResourceDriftStatus\"]);\n    }\n    if (output[\"Timestamp\"] !== undefined) {\n        contents.Timestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"Timestamp\"]));\n    }\n    if (output[\"ModuleInfo\"] !== undefined) {\n        contents.ModuleInfo = deserializeAws_queryModuleInfo(output[\"ModuleInfo\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackResourceDriftInformation = (output, context) => {\n    const contents = {\n        StackResourceDriftStatus: undefined,\n        LastCheckTimestamp: undefined,\n    };\n    if (output[\"StackResourceDriftStatus\"] !== undefined) {\n        contents.StackResourceDriftStatus = smithy_client_1.expectString(output[\"StackResourceDriftStatus\"]);\n    }\n    if (output[\"LastCheckTimestamp\"] !== undefined) {\n        contents.LastCheckTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastCheckTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryStackResourceDriftInformationSummary = (output, context) => {\n    const contents = {\n        StackResourceDriftStatus: undefined,\n        LastCheckTimestamp: undefined,\n    };\n    if (output[\"StackResourceDriftStatus\"] !== undefined) {\n        contents.StackResourceDriftStatus = smithy_client_1.expectString(output[\"StackResourceDriftStatus\"]);\n    }\n    if (output[\"LastCheckTimestamp\"] !== undefined) {\n        contents.LastCheckTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastCheckTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryStackResourceDrifts = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackResourceDrift(entry, context);\n    });\n};\nconst deserializeAws_queryStackResources = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackResource(entry, context);\n    });\n};\nconst deserializeAws_queryStackResourceSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackResourceSummary(entry, context);\n    });\n};\nconst deserializeAws_queryStackResourceSummary = (output, context) => {\n    const contents = {\n        LogicalResourceId: undefined,\n        PhysicalResourceId: undefined,\n        ResourceType: undefined,\n        LastUpdatedTimestamp: undefined,\n        ResourceStatus: undefined,\n        ResourceStatusReason: undefined,\n        DriftInformation: undefined,\n        ModuleInfo: undefined,\n    };\n    if (output[\"LogicalResourceId\"] !== undefined) {\n        contents.LogicalResourceId = smithy_client_1.expectString(output[\"LogicalResourceId\"]);\n    }\n    if (output[\"PhysicalResourceId\"] !== undefined) {\n        contents.PhysicalResourceId = smithy_client_1.expectString(output[\"PhysicalResourceId\"]);\n    }\n    if (output[\"ResourceType\"] !== undefined) {\n        contents.ResourceType = smithy_client_1.expectString(output[\"ResourceType\"]);\n    }\n    if (output[\"LastUpdatedTimestamp\"] !== undefined) {\n        contents.LastUpdatedTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastUpdatedTimestamp\"]));\n    }\n    if (output[\"ResourceStatus\"] !== undefined) {\n        contents.ResourceStatus = smithy_client_1.expectString(output[\"ResourceStatus\"]);\n    }\n    if (output[\"ResourceStatusReason\"] !== undefined) {\n        contents.ResourceStatusReason = smithy_client_1.expectString(output[\"ResourceStatusReason\"]);\n    }\n    if (output[\"DriftInformation\"] !== undefined) {\n        contents.DriftInformation = deserializeAws_queryStackResourceDriftInformationSummary(output[\"DriftInformation\"], context);\n    }\n    if (output[\"ModuleInfo\"] !== undefined) {\n        contents.ModuleInfo = deserializeAws_queryModuleInfo(output[\"ModuleInfo\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStacks = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStack(entry, context);\n    });\n};\nconst deserializeAws_queryStackSet = (output, context) => {\n    const contents = {\n        StackSetName: undefined,\n        StackSetId: undefined,\n        Description: undefined,\n        Status: undefined,\n        TemplateBody: undefined,\n        Parameters: undefined,\n        Capabilities: undefined,\n        Tags: undefined,\n        StackSetARN: undefined,\n        AdministrationRoleARN: undefined,\n        ExecutionRoleName: undefined,\n        StackSetDriftDetectionDetails: undefined,\n        AutoDeployment: undefined,\n        PermissionModel: undefined,\n        OrganizationalUnitIds: undefined,\n        ManagedExecution: undefined,\n    };\n    if (output[\"StackSetName\"] !== undefined) {\n        contents.StackSetName = smithy_client_1.expectString(output[\"StackSetName\"]);\n    }\n    if (output[\"StackSetId\"] !== undefined) {\n        contents.StackSetId = smithy_client_1.expectString(output[\"StackSetId\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"TemplateBody\"] !== undefined) {\n        contents.TemplateBody = smithy_client_1.expectString(output[\"TemplateBody\"]);\n    }\n    if (output.Parameters === \"\") {\n        contents.Parameters = [];\n    }\n    if (output[\"Parameters\"] !== undefined && output[\"Parameters\"][\"member\"] !== undefined) {\n        contents.Parameters = deserializeAws_queryParameters(smithy_client_1.getArrayIfSingleItem(output[\"Parameters\"][\"member\"]), context);\n    }\n    if (output.Capabilities === \"\") {\n        contents.Capabilities = [];\n    }\n    if (output[\"Capabilities\"] !== undefined && output[\"Capabilities\"][\"member\"] !== undefined) {\n        contents.Capabilities = deserializeAws_queryCapabilities(smithy_client_1.getArrayIfSingleItem(output[\"Capabilities\"][\"member\"]), context);\n    }\n    if (output.Tags === \"\") {\n        contents.Tags = [];\n    }\n    if (output[\"Tags\"] !== undefined && output[\"Tags\"][\"member\"] !== undefined) {\n        contents.Tags = deserializeAws_queryTags(smithy_client_1.getArrayIfSingleItem(output[\"Tags\"][\"member\"]), context);\n    }\n    if (output[\"StackSetARN\"] !== undefined) {\n        contents.StackSetARN = smithy_client_1.expectString(output[\"StackSetARN\"]);\n    }\n    if (output[\"AdministrationRoleARN\"] !== undefined) {\n        contents.AdministrationRoleARN = smithy_client_1.expectString(output[\"AdministrationRoleARN\"]);\n    }\n    if (output[\"ExecutionRoleName\"] !== undefined) {\n        contents.ExecutionRoleName = smithy_client_1.expectString(output[\"ExecutionRoleName\"]);\n    }\n    if (output[\"StackSetDriftDetectionDetails\"] !== undefined) {\n        contents.StackSetDriftDetectionDetails = deserializeAws_queryStackSetDriftDetectionDetails(output[\"StackSetDriftDetectionDetails\"], context);\n    }\n    if (output[\"AutoDeployment\"] !== undefined) {\n        contents.AutoDeployment = deserializeAws_queryAutoDeployment(output[\"AutoDeployment\"], context);\n    }\n    if (output[\"PermissionModel\"] !== undefined) {\n        contents.PermissionModel = smithy_client_1.expectString(output[\"PermissionModel\"]);\n    }\n    if (output.OrganizationalUnitIds === \"\") {\n        contents.OrganizationalUnitIds = [];\n    }\n    if (output[\"OrganizationalUnitIds\"] !== undefined && output[\"OrganizationalUnitIds\"][\"member\"] !== undefined) {\n        contents.OrganizationalUnitIds = deserializeAws_queryOrganizationalUnitIdList(smithy_client_1.getArrayIfSingleItem(output[\"OrganizationalUnitIds\"][\"member\"]), context);\n    }\n    if (output[\"ManagedExecution\"] !== undefined) {\n        contents.ManagedExecution = deserializeAws_queryManagedExecution(output[\"ManagedExecution\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSetDriftDetectionDetails = (output, context) => {\n    const contents = {\n        DriftStatus: undefined,\n        DriftDetectionStatus: undefined,\n        LastDriftCheckTimestamp: undefined,\n        TotalStackInstancesCount: undefined,\n        DriftedStackInstancesCount: undefined,\n        InSyncStackInstancesCount: undefined,\n        InProgressStackInstancesCount: undefined,\n        FailedStackInstancesCount: undefined,\n    };\n    if (output[\"DriftStatus\"] !== undefined) {\n        contents.DriftStatus = smithy_client_1.expectString(output[\"DriftStatus\"]);\n    }\n    if (output[\"DriftDetectionStatus\"] !== undefined) {\n        contents.DriftDetectionStatus = smithy_client_1.expectString(output[\"DriftDetectionStatus\"]);\n    }\n    if (output[\"LastDriftCheckTimestamp\"] !== undefined) {\n        contents.LastDriftCheckTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastDriftCheckTimestamp\"]));\n    }\n    if (output[\"TotalStackInstancesCount\"] !== undefined) {\n        contents.TotalStackInstancesCount = smithy_client_1.strictParseInt32(output[\"TotalStackInstancesCount\"]);\n    }\n    if (output[\"DriftedStackInstancesCount\"] !== undefined) {\n        contents.DriftedStackInstancesCount = smithy_client_1.strictParseInt32(output[\"DriftedStackInstancesCount\"]);\n    }\n    if (output[\"InSyncStackInstancesCount\"] !== undefined) {\n        contents.InSyncStackInstancesCount = smithy_client_1.strictParseInt32(output[\"InSyncStackInstancesCount\"]);\n    }\n    if (output[\"InProgressStackInstancesCount\"] !== undefined) {\n        contents.InProgressStackInstancesCount = smithy_client_1.strictParseInt32(output[\"InProgressStackInstancesCount\"]);\n    }\n    if (output[\"FailedStackInstancesCount\"] !== undefined) {\n        contents.FailedStackInstancesCount = smithy_client_1.strictParseInt32(output[\"FailedStackInstancesCount\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSetNotEmptyException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSetNotFoundException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSetOperation = (output, context) => {\n    const contents = {\n        OperationId: undefined,\n        StackSetId: undefined,\n        Action: undefined,\n        Status: undefined,\n        OperationPreferences: undefined,\n        RetainStacks: undefined,\n        AdministrationRoleARN: undefined,\n        ExecutionRoleName: undefined,\n        CreationTimestamp: undefined,\n        EndTimestamp: undefined,\n        DeploymentTargets: undefined,\n        StackSetDriftDetectionDetails: undefined,\n    };\n    if (output[\"OperationId\"] !== undefined) {\n        contents.OperationId = smithy_client_1.expectString(output[\"OperationId\"]);\n    }\n    if (output[\"StackSetId\"] !== undefined) {\n        contents.StackSetId = smithy_client_1.expectString(output[\"StackSetId\"]);\n    }\n    if (output[\"Action\"] !== undefined) {\n        contents.Action = smithy_client_1.expectString(output[\"Action\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"OperationPreferences\"] !== undefined) {\n        contents.OperationPreferences = deserializeAws_queryStackSetOperationPreferences(output[\"OperationPreferences\"], context);\n    }\n    if (output[\"RetainStacks\"] !== undefined) {\n        contents.RetainStacks = smithy_client_1.parseBoolean(output[\"RetainStacks\"]);\n    }\n    if (output[\"AdministrationRoleARN\"] !== undefined) {\n        contents.AdministrationRoleARN = smithy_client_1.expectString(output[\"AdministrationRoleARN\"]);\n    }\n    if (output[\"ExecutionRoleName\"] !== undefined) {\n        contents.ExecutionRoleName = smithy_client_1.expectString(output[\"ExecutionRoleName\"]);\n    }\n    if (output[\"CreationTimestamp\"] !== undefined) {\n        contents.CreationTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"CreationTimestamp\"]));\n    }\n    if (output[\"EndTimestamp\"] !== undefined) {\n        contents.EndTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"EndTimestamp\"]));\n    }\n    if (output[\"DeploymentTargets\"] !== undefined) {\n        contents.DeploymentTargets = deserializeAws_queryDeploymentTargets(output[\"DeploymentTargets\"], context);\n    }\n    if (output[\"StackSetDriftDetectionDetails\"] !== undefined) {\n        contents.StackSetDriftDetectionDetails = deserializeAws_queryStackSetDriftDetectionDetails(output[\"StackSetDriftDetectionDetails\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSetOperationPreferences = (output, context) => {\n    const contents = {\n        RegionConcurrencyType: undefined,\n        RegionOrder: undefined,\n        FailureToleranceCount: undefined,\n        FailureTolerancePercentage: undefined,\n        MaxConcurrentCount: undefined,\n        MaxConcurrentPercentage: undefined,\n    };\n    if (output[\"RegionConcurrencyType\"] !== undefined) {\n        contents.RegionConcurrencyType = smithy_client_1.expectString(output[\"RegionConcurrencyType\"]);\n    }\n    if (output.RegionOrder === \"\") {\n        contents.RegionOrder = [];\n    }\n    if (output[\"RegionOrder\"] !== undefined && output[\"RegionOrder\"][\"member\"] !== undefined) {\n        contents.RegionOrder = deserializeAws_queryRegionList(smithy_client_1.getArrayIfSingleItem(output[\"RegionOrder\"][\"member\"]), context);\n    }\n    if (output[\"FailureToleranceCount\"] !== undefined) {\n        contents.FailureToleranceCount = smithy_client_1.strictParseInt32(output[\"FailureToleranceCount\"]);\n    }\n    if (output[\"FailureTolerancePercentage\"] !== undefined) {\n        contents.FailureTolerancePercentage = smithy_client_1.strictParseInt32(output[\"FailureTolerancePercentage\"]);\n    }\n    if (output[\"MaxConcurrentCount\"] !== undefined) {\n        contents.MaxConcurrentCount = smithy_client_1.strictParseInt32(output[\"MaxConcurrentCount\"]);\n    }\n    if (output[\"MaxConcurrentPercentage\"] !== undefined) {\n        contents.MaxConcurrentPercentage = smithy_client_1.strictParseInt32(output[\"MaxConcurrentPercentage\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSetOperationResultSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackSetOperationResultSummary(entry, context);\n    });\n};\nconst deserializeAws_queryStackSetOperationResultSummary = (output, context) => {\n    const contents = {\n        Account: undefined,\n        Region: undefined,\n        Status: undefined,\n        StatusReason: undefined,\n        AccountGateResult: undefined,\n        OrganizationalUnitId: undefined,\n    };\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = smithy_client_1.expectString(output[\"Account\"]);\n    }\n    if (output[\"Region\"] !== undefined) {\n        contents.Region = smithy_client_1.expectString(output[\"Region\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"StatusReason\"] !== undefined) {\n        contents.StatusReason = smithy_client_1.expectString(output[\"StatusReason\"]);\n    }\n    if (output[\"AccountGateResult\"] !== undefined) {\n        contents.AccountGateResult = deserializeAws_queryAccountGateResult(output[\"AccountGateResult\"], context);\n    }\n    if (output[\"OrganizationalUnitId\"] !== undefined) {\n        contents.OrganizationalUnitId = smithy_client_1.expectString(output[\"OrganizationalUnitId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSetOperationSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackSetOperationSummary(entry, context);\n    });\n};\nconst deserializeAws_queryStackSetOperationSummary = (output, context) => {\n    const contents = {\n        OperationId: undefined,\n        Action: undefined,\n        Status: undefined,\n        CreationTimestamp: undefined,\n        EndTimestamp: undefined,\n    };\n    if (output[\"OperationId\"] !== undefined) {\n        contents.OperationId = smithy_client_1.expectString(output[\"OperationId\"]);\n    }\n    if (output[\"Action\"] !== undefined) {\n        contents.Action = smithy_client_1.expectString(output[\"Action\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"CreationTimestamp\"] !== undefined) {\n        contents.CreationTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"CreationTimestamp\"]));\n    }\n    if (output[\"EndTimestamp\"] !== undefined) {\n        contents.EndTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"EndTimestamp\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSetSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackSetSummary(entry, context);\n    });\n};\nconst deserializeAws_queryStackSetSummary = (output, context) => {\n    const contents = {\n        StackSetName: undefined,\n        StackSetId: undefined,\n        Description: undefined,\n        Status: undefined,\n        AutoDeployment: undefined,\n        PermissionModel: undefined,\n        DriftStatus: undefined,\n        LastDriftCheckTimestamp: undefined,\n        ManagedExecution: undefined,\n    };\n    if (output[\"StackSetName\"] !== undefined) {\n        contents.StackSetName = smithy_client_1.expectString(output[\"StackSetName\"]);\n    }\n    if (output[\"StackSetId\"] !== undefined) {\n        contents.StackSetId = smithy_client_1.expectString(output[\"StackSetId\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"Status\"] !== undefined) {\n        contents.Status = smithy_client_1.expectString(output[\"Status\"]);\n    }\n    if (output[\"AutoDeployment\"] !== undefined) {\n        contents.AutoDeployment = deserializeAws_queryAutoDeployment(output[\"AutoDeployment\"], context);\n    }\n    if (output[\"PermissionModel\"] !== undefined) {\n        contents.PermissionModel = smithy_client_1.expectString(output[\"PermissionModel\"]);\n    }\n    if (output[\"DriftStatus\"] !== undefined) {\n        contents.DriftStatus = smithy_client_1.expectString(output[\"DriftStatus\"]);\n    }\n    if (output[\"LastDriftCheckTimestamp\"] !== undefined) {\n        contents.LastDriftCheckTimestamp = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastDriftCheckTimestamp\"]));\n    }\n    if (output[\"ManagedExecution\"] !== undefined) {\n        contents.ManagedExecution = deserializeAws_queryManagedExecution(output[\"ManagedExecution\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStackSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryStackSummary(entry, context);\n    });\n};\nconst deserializeAws_queryStackSummary = (output, context) => {\n    const contents = {\n        StackId: undefined,\n        StackName: undefined,\n        TemplateDescription: undefined,\n        CreationTime: undefined,\n        LastUpdatedTime: undefined,\n        DeletionTime: undefined,\n        StackStatus: undefined,\n        StackStatusReason: undefined,\n        ParentId: undefined,\n        RootId: undefined,\n        DriftInformation: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    if (output[\"StackName\"] !== undefined) {\n        contents.StackName = smithy_client_1.expectString(output[\"StackName\"]);\n    }\n    if (output[\"TemplateDescription\"] !== undefined) {\n        contents.TemplateDescription = smithy_client_1.expectString(output[\"TemplateDescription\"]);\n    }\n    if (output[\"CreationTime\"] !== undefined) {\n        contents.CreationTime = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"CreationTime\"]));\n    }\n    if (output[\"LastUpdatedTime\"] !== undefined) {\n        contents.LastUpdatedTime = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastUpdatedTime\"]));\n    }\n    if (output[\"DeletionTime\"] !== undefined) {\n        contents.DeletionTime = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"DeletionTime\"]));\n    }\n    if (output[\"StackStatus\"] !== undefined) {\n        contents.StackStatus = smithy_client_1.expectString(output[\"StackStatus\"]);\n    }\n    if (output[\"StackStatusReason\"] !== undefined) {\n        contents.StackStatusReason = smithy_client_1.expectString(output[\"StackStatusReason\"]);\n    }\n    if (output[\"ParentId\"] !== undefined) {\n        contents.ParentId = smithy_client_1.expectString(output[\"ParentId\"]);\n    }\n    if (output[\"RootId\"] !== undefined) {\n        contents.RootId = smithy_client_1.expectString(output[\"RootId\"]);\n    }\n    if (output[\"DriftInformation\"] !== undefined) {\n        contents.DriftInformation = deserializeAws_queryStackDriftInformationSummary(output[\"DriftInformation\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryStageList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryStaleRequestException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryStopStackSetOperationOutput = (output, context) => {\n    const contents = {};\n    return contents;\n};\nconst deserializeAws_querySupportedMajorVersions = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.strictParseInt32(entry);\n    });\n};\nconst deserializeAws_queryTag = (output, context) => {\n    const contents = {\n        Key: undefined,\n        Value: undefined,\n    };\n    if (output[\"Key\"] !== undefined) {\n        contents.Key = smithy_client_1.expectString(output[\"Key\"]);\n    }\n    if (output[\"Value\"] !== undefined) {\n        contents.Value = smithy_client_1.expectString(output[\"Value\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTags = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryTag(entry, context);\n    });\n};\nconst deserializeAws_queryTemplateParameter = (output, context) => {\n    const contents = {\n        ParameterKey: undefined,\n        DefaultValue: undefined,\n        NoEcho: undefined,\n        Description: undefined,\n    };\n    if (output[\"ParameterKey\"] !== undefined) {\n        contents.ParameterKey = smithy_client_1.expectString(output[\"ParameterKey\"]);\n    }\n    if (output[\"DefaultValue\"] !== undefined) {\n        contents.DefaultValue = smithy_client_1.expectString(output[\"DefaultValue\"]);\n    }\n    if (output[\"NoEcho\"] !== undefined) {\n        contents.NoEcho = smithy_client_1.parseBoolean(output[\"NoEcho\"]);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTemplateParameters = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryTemplateParameter(entry, context);\n    });\n};\nconst deserializeAws_queryTestTypeOutput = (output, context) => {\n    const contents = {\n        TypeVersionArn: undefined,\n    };\n    if (output[\"TypeVersionArn\"] !== undefined) {\n        contents.TypeVersionArn = smithy_client_1.expectString(output[\"TypeVersionArn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTokenAlreadyExistsException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTransformsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return smithy_client_1.expectString(entry);\n    });\n};\nconst deserializeAws_queryTypeConfigurationDetails = (output, context) => {\n    const contents = {\n        Arn: undefined,\n        Alias: undefined,\n        Configuration: undefined,\n        LastUpdated: undefined,\n        TypeArn: undefined,\n        TypeName: undefined,\n        IsDefaultConfiguration: undefined,\n    };\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    if (output[\"Alias\"] !== undefined) {\n        contents.Alias = smithy_client_1.expectString(output[\"Alias\"]);\n    }\n    if (output[\"Configuration\"] !== undefined) {\n        contents.Configuration = smithy_client_1.expectString(output[\"Configuration\"]);\n    }\n    if (output[\"LastUpdated\"] !== undefined) {\n        contents.LastUpdated = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastUpdated\"]));\n    }\n    if (output[\"TypeArn\"] !== undefined) {\n        contents.TypeArn = smithy_client_1.expectString(output[\"TypeArn\"]);\n    }\n    if (output[\"TypeName\"] !== undefined) {\n        contents.TypeName = smithy_client_1.expectString(output[\"TypeName\"]);\n    }\n    if (output[\"IsDefaultConfiguration\"] !== undefined) {\n        contents.IsDefaultConfiguration = smithy_client_1.parseBoolean(output[\"IsDefaultConfiguration\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTypeConfigurationDetailsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryTypeConfigurationDetails(entry, context);\n    });\n};\nconst deserializeAws_queryTypeConfigurationIdentifier = (output, context) => {\n    const contents = {\n        TypeArn: undefined,\n        TypeConfigurationAlias: undefined,\n        TypeConfigurationArn: undefined,\n        Type: undefined,\n        TypeName: undefined,\n    };\n    if (output[\"TypeArn\"] !== undefined) {\n        contents.TypeArn = smithy_client_1.expectString(output[\"TypeArn\"]);\n    }\n    if (output[\"TypeConfigurationAlias\"] !== undefined) {\n        contents.TypeConfigurationAlias = smithy_client_1.expectString(output[\"TypeConfigurationAlias\"]);\n    }\n    if (output[\"TypeConfigurationArn\"] !== undefined) {\n        contents.TypeConfigurationArn = smithy_client_1.expectString(output[\"TypeConfigurationArn\"]);\n    }\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = smithy_client_1.expectString(output[\"Type\"]);\n    }\n    if (output[\"TypeName\"] !== undefined) {\n        contents.TypeName = smithy_client_1.expectString(output[\"TypeName\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTypeConfigurationNotFoundException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTypeNotFoundException = (output, context) => {\n    const contents = {\n        Message: undefined,\n    };\n    if (output[\"Message\"] !== undefined) {\n        contents.Message = smithy_client_1.expectString(output[\"Message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTypeSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryTypeSummary(entry, context);\n    });\n};\nconst deserializeAws_queryTypeSummary = (output, context) => {\n    const contents = {\n        Type: undefined,\n        TypeName: undefined,\n        DefaultVersionId: undefined,\n        TypeArn: undefined,\n        LastUpdated: undefined,\n        Description: undefined,\n        PublisherId: undefined,\n        OriginalTypeName: undefined,\n        PublicVersionNumber: undefined,\n        LatestPublicVersion: undefined,\n        PublisherIdentity: undefined,\n        PublisherName: undefined,\n        IsActivated: undefined,\n    };\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = smithy_client_1.expectString(output[\"Type\"]);\n    }\n    if (output[\"TypeName\"] !== undefined) {\n        contents.TypeName = smithy_client_1.expectString(output[\"TypeName\"]);\n    }\n    if (output[\"DefaultVersionId\"] !== undefined) {\n        contents.DefaultVersionId = smithy_client_1.expectString(output[\"DefaultVersionId\"]);\n    }\n    if (output[\"TypeArn\"] !== undefined) {\n        contents.TypeArn = smithy_client_1.expectString(output[\"TypeArn\"]);\n    }\n    if (output[\"LastUpdated\"] !== undefined) {\n        contents.LastUpdated = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"LastUpdated\"]));\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"PublisherId\"] !== undefined) {\n        contents.PublisherId = smithy_client_1.expectString(output[\"PublisherId\"]);\n    }\n    if (output[\"OriginalTypeName\"] !== undefined) {\n        contents.OriginalTypeName = smithy_client_1.expectString(output[\"OriginalTypeName\"]);\n    }\n    if (output[\"PublicVersionNumber\"] !== undefined) {\n        contents.PublicVersionNumber = smithy_client_1.expectString(output[\"PublicVersionNumber\"]);\n    }\n    if (output[\"LatestPublicVersion\"] !== undefined) {\n        contents.LatestPublicVersion = smithy_client_1.expectString(output[\"LatestPublicVersion\"]);\n    }\n    if (output[\"PublisherIdentity\"] !== undefined) {\n        contents.PublisherIdentity = smithy_client_1.expectString(output[\"PublisherIdentity\"]);\n    }\n    if (output[\"PublisherName\"] !== undefined) {\n        contents.PublisherName = smithy_client_1.expectString(output[\"PublisherName\"]);\n    }\n    if (output[\"IsActivated\"] !== undefined) {\n        contents.IsActivated = smithy_client_1.parseBoolean(output[\"IsActivated\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryTypeVersionSummaries = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryTypeVersionSummary(entry, context);\n    });\n};\nconst deserializeAws_queryTypeVersionSummary = (output, context) => {\n    const contents = {\n        Type: undefined,\n        TypeName: undefined,\n        VersionId: undefined,\n        IsDefaultVersion: undefined,\n        Arn: undefined,\n        TimeCreated: undefined,\n        Description: undefined,\n        PublicVersionNumber: undefined,\n    };\n    if (output[\"Type\"] !== undefined) {\n        contents.Type = smithy_client_1.expectString(output[\"Type\"]);\n    }\n    if (output[\"TypeName\"] !== undefined) {\n        contents.TypeName = smithy_client_1.expectString(output[\"TypeName\"]);\n    }\n    if (output[\"VersionId\"] !== undefined) {\n        contents.VersionId = smithy_client_1.expectString(output[\"VersionId\"]);\n    }\n    if (output[\"IsDefaultVersion\"] !== undefined) {\n        contents.IsDefaultVersion = smithy_client_1.parseBoolean(output[\"IsDefaultVersion\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    if (output[\"TimeCreated\"] !== undefined) {\n        contents.TimeCreated = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"TimeCreated\"]));\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output[\"PublicVersionNumber\"] !== undefined) {\n        contents.PublicVersionNumber = smithy_client_1.expectString(output[\"PublicVersionNumber\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryUnprocessedTypeConfigurations = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_queryTypeConfigurationIdentifier(entry, context);\n    });\n};\nconst deserializeAws_queryUpdateStackInstancesOutput = (output, context) => {\n    const contents = {\n        OperationId: undefined,\n    };\n    if (output[\"OperationId\"] !== undefined) {\n        contents.OperationId = smithy_client_1.expectString(output[\"OperationId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryUpdateStackOutput = (output, context) => {\n    const contents = {\n        StackId: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryUpdateStackSetOutput = (output, context) => {\n    const contents = {\n        OperationId: undefined,\n    };\n    if (output[\"OperationId\"] !== undefined) {\n        contents.OperationId = smithy_client_1.expectString(output[\"OperationId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryUpdateTerminationProtectionOutput = (output, context) => {\n    const contents = {\n        StackId: undefined,\n    };\n    if (output[\"StackId\"] !== undefined) {\n        contents.StackId = smithy_client_1.expectString(output[\"StackId\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryValidateTemplateOutput = (output, context) => {\n    const contents = {\n        Parameters: undefined,\n        Description: undefined,\n        Capabilities: undefined,\n        CapabilitiesReason: undefined,\n        DeclaredTransforms: undefined,\n    };\n    if (output.Parameters === \"\") {\n        contents.Parameters = [];\n    }\n    if (output[\"Parameters\"] !== undefined && output[\"Parameters\"][\"member\"] !== undefined) {\n        contents.Parameters = deserializeAws_queryTemplateParameters(smithy_client_1.getArrayIfSingleItem(output[\"Parameters\"][\"member\"]), context);\n    }\n    if (output[\"Description\"] !== undefined) {\n        contents.Description = smithy_client_1.expectString(output[\"Description\"]);\n    }\n    if (output.Capabilities === \"\") {\n        contents.Capabilities = [];\n    }\n    if (output[\"Capabilities\"] !== undefined && output[\"Capabilities\"][\"member\"] !== undefined) {\n        contents.Capabilities = deserializeAws_queryCapabilities(smithy_client_1.getArrayIfSingleItem(output[\"Capabilities\"][\"member\"]), context);\n    }\n    if (output[\"CapabilitiesReason\"] !== undefined) {\n        contents.CapabilitiesReason = smithy_client_1.expectString(output[\"CapabilitiesReason\"]);\n    }\n    if (output.DeclaredTransforms === \"\") {\n        contents.DeclaredTransforms = [];\n    }\n    if (output[\"DeclaredTransforms\"] !== undefined && output[\"DeclaredTransforms\"][\"member\"] !== undefined) {\n        contents.DeclaredTransforms = deserializeAws_queryTransformsList(smithy_client_1.getArrayIfSingleItem(output[\"DeclaredTransforms\"][\"member\"]), context);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parsedObj = fast_xml_parser_1.parse(encoded, {\n            attributeNamePrefix: \"\",\n            ignoreAttributes: false,\n            parseNodeValue: false,\n            trimValues: false,\n            tagValueProcessor: (val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : entities_1.decodeHTML(val)),\n        });\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return smithy_client_1.getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => smithy_client_1.extendedEncodeURIComponent(key) + \"=\" + smithy_client_1.extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst client_sts_1 = require(\"@aws-sdk/client-sts\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    const defaultsMode = util_defaults_mode_node_1.resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = runtimeConfig_shared_1.getRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : client_sts_1.decorateDefaultCredentialProvider(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : util_user_agent_node_1.defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_f = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _f !== void 0 ? _f : node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_g = config === null || config === void 0 ? void 0 : config.region) !== null && _g !== void 0 ? _g : node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_h = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _h !== void 0 ? _h : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_j = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _j !== void 0 ? _j : node_config_provider_1.loadConfig({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_k = config === null || config === void 0 ? void 0 : config.sha256) !== null && _k !== void 0 ? _k : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_l = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _l !== void 0 ? _l : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _m !== void 0 ? _m : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_o = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _o !== void 0 ? _o : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_q = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _q !== void 0 ? _q : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2010-05-15\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"CloudFormation\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./waitForChangeSetCreateComplete\"), exports);\ntslib_1.__exportStar(require(\"./waitForStackCreateComplete\"), exports);\ntslib_1.__exportStar(require(\"./waitForStackDeleteComplete\"), exports);\ntslib_1.__exportStar(require(\"./waitForStackExists\"), exports);\ntslib_1.__exportStar(require(\"./waitForStackImportComplete\"), exports);\ntslib_1.__exportStar(require(\"./waitForStackRollbackComplete\"), exports);\ntslib_1.__exportStar(require(\"./waitForStackUpdateComplete\"), exports);\ntslib_1.__exportStar(require(\"./waitForTypeRegistrationComplete\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilChangeSetCreateComplete = exports.waitForChangeSetCreateComplete = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst DescribeChangeSetCommand_1 = require(\"../commands/DescribeChangeSetCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeChangeSetCommand_1.DescribeChangeSetCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                return result.Status;\n            };\n            if (returnComparator() === \"CREATE_COMPLETE\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                return result.Status;\n            };\n            if (returnComparator() === \"FAILED\") {\n                return { state: util_waiter_1.WaiterState.FAILURE, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ValidationError\") {\n            return { state: util_waiter_1.WaiterState.FAILURE, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForChangeSetCreateComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForChangeSetCreateComplete = waitForChangeSetCreateComplete;\nconst waitUntilChangeSetCreateComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilChangeSetCreateComplete = waitUntilChangeSetCreateComplete;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilStackCreateComplete = exports.waitForStackCreateComplete = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst DescribeStacksCommand_1 = require(\"../commands/DescribeStacksCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeStacksCommand_1.DescribeStacksCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            let allStringEq_5 = returnComparator().length > 0;\n            for (const element_4 of returnComparator()) {\n                allStringEq_5 = allStringEq_5 && element_4 == \"CREATE_COMPLETE\";\n            }\n            if (allStringEq_5) {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"CREATE_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"DELETE_COMPLETE\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"DELETE_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"ROLLBACK_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"ROLLBACK_COMPLETE\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ValidationError\") {\n            return { state: util_waiter_1.WaiterState.FAILURE, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForStackCreateComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForStackCreateComplete = waitForStackCreateComplete;\nconst waitUntilStackCreateComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilStackCreateComplete = waitUntilStackCreateComplete;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilStackDeleteComplete = exports.waitForStackDeleteComplete = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst DescribeStacksCommand_1 = require(\"../commands/DescribeStacksCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeStacksCommand_1.DescribeStacksCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            let allStringEq_5 = returnComparator().length > 0;\n            for (const element_4 of returnComparator()) {\n                allStringEq_5 = allStringEq_5 && element_4 == \"DELETE_COMPLETE\";\n            }\n            if (allStringEq_5) {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"DELETE_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"CREATE_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"ROLLBACK_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"UPDATE_ROLLBACK_IN_PROGRESS\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"UPDATE_ROLLBACK_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"UPDATE_ROLLBACK_COMPLETE\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ValidationError\") {\n            return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForStackDeleteComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForStackDeleteComplete = waitForStackDeleteComplete;\nconst waitUntilStackDeleteComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilStackDeleteComplete = waitUntilStackDeleteComplete;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilStackExists = exports.waitForStackExists = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst DescribeStacksCommand_1 = require(\"../commands/DescribeStacksCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeStacksCommand_1.DescribeStacksCommand(input));\n        reason = result;\n        return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ValidationError\") {\n            return { state: util_waiter_1.WaiterState.RETRY, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForStackExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForStackExists = waitForStackExists;\nconst waitUntilStackExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilStackExists = waitUntilStackExists;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilStackImportComplete = exports.waitForStackImportComplete = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst DescribeStacksCommand_1 = require(\"../commands/DescribeStacksCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeStacksCommand_1.DescribeStacksCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            let allStringEq_5 = returnComparator().length > 0;\n            for (const element_4 of returnComparator()) {\n                allStringEq_5 = allStringEq_5 && element_4 == \"IMPORT_COMPLETE\";\n            }\n            if (allStringEq_5) {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"ROLLBACK_COMPLETE\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"ROLLBACK_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"IMPORT_ROLLBACK_IN_PROGRESS\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"IMPORT_ROLLBACK_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"IMPORT_ROLLBACK_COMPLETE\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ValidationError\") {\n            return { state: util_waiter_1.WaiterState.FAILURE, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForStackImportComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForStackImportComplete = waitForStackImportComplete;\nconst waitUntilStackImportComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilStackImportComplete = waitUntilStackImportComplete;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilStackRollbackComplete = exports.waitForStackRollbackComplete = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst DescribeStacksCommand_1 = require(\"../commands/DescribeStacksCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeStacksCommand_1.DescribeStacksCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            let allStringEq_5 = returnComparator().length > 0;\n            for (const element_4 of returnComparator()) {\n                allStringEq_5 = allStringEq_5 && element_4 == \"UPDATE_ROLLBACK_COMPLETE\";\n            }\n            if (allStringEq_5) {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"UPDATE_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"UPDATE_ROLLBACK_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"DELETE_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ValidationError\") {\n            return { state: util_waiter_1.WaiterState.FAILURE, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForStackRollbackComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForStackRollbackComplete = waitForStackRollbackComplete;\nconst waitUntilStackRollbackComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilStackRollbackComplete = waitUntilStackRollbackComplete;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilStackUpdateComplete = exports.waitForStackUpdateComplete = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst DescribeStacksCommand_1 = require(\"../commands/DescribeStacksCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeStacksCommand_1.DescribeStacksCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            let allStringEq_5 = returnComparator().length > 0;\n            for (const element_4 of returnComparator()) {\n                allStringEq_5 = allStringEq_5 && element_4 == \"UPDATE_COMPLETE\";\n            }\n            if (allStringEq_5) {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"UPDATE_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"UPDATE_ROLLBACK_FAILED\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                const flat_1 = [].concat(...result.Stacks);\n                const projection_3 = flat_1.map((element_2) => {\n                    return element_2.StackStatus;\n                });\n                return projection_3;\n            };\n            for (const anyStringEq_4 of returnComparator()) {\n                if (anyStringEq_4 == \"UPDATE_ROLLBACK_COMPLETE\") {\n                    return { state: util_waiter_1.WaiterState.FAILURE, reason };\n                }\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ValidationError\") {\n            return { state: util_waiter_1.WaiterState.FAILURE, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForStackUpdateComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForStackUpdateComplete = waitForStackUpdateComplete;\nconst waitUntilStackUpdateComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilStackUpdateComplete = waitUntilStackUpdateComplete;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilTypeRegistrationComplete = exports.waitForTypeRegistrationComplete = void 0;\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst DescribeTypeRegistrationCommand_1 = require(\"../commands/DescribeTypeRegistrationCommand\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        const result = await client.send(new DescribeTypeRegistrationCommand_1.DescribeTypeRegistrationCommand(input));\n        reason = result;\n        try {\n            const returnComparator = () => {\n                return result.ProgressStatus;\n            };\n            if (returnComparator() === \"COMPLETE\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            const returnComparator = () => {\n                return result.ProgressStatus;\n            };\n            if (returnComparator() === \"FAILED\") {\n                return { state: util_waiter_1.WaiterState.FAILURE, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\nconst waitForTypeRegistrationComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    return util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForTypeRegistrationComplete = waitForTypeRegistrationComplete;\nconst waitUntilTypeRegistrationComplete = async (params, input) => {\n    const serviceDefaults = { minDelay: 30, maxDelay: 120 };\n    const result = await util_waiter_1.createWaiter({ ...serviceDefaults, ...params }, input, checkState);\n    return util_waiter_1.checkExceptions(result);\n};\nexports.waitUntilTypeRegistrationComplete = waitUntilTypeRegistrationComplete;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSO = void 0;\nconst GetRoleCredentialsCommand_1 = require(\"./commands/GetRoleCredentialsCommand\");\nconst ListAccountRolesCommand_1 = require(\"./commands/ListAccountRolesCommand\");\nconst ListAccountsCommand_1 = require(\"./commands/ListAccountsCommand\");\nconst LogoutCommand_1 = require(\"./commands/LogoutCommand\");\nconst SSOClient_1 = require(\"./SSOClient\");\nclass SSO extends SSOClient_1.SSOClient {\n    getRoleCredentials(args, optionsOrCb, cb) {\n        const command = new GetRoleCredentialsCommand_1.GetRoleCredentialsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccountRoles(args, optionsOrCb, cb) {\n        const command = new ListAccountRolesCommand_1.ListAccountRolesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccounts(args, optionsOrCb, cb) {\n        const command = new ListAccountsCommand_1.ListAccountsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    logout(args, optionsOrCb, cb) {\n        const command = new LogoutCommand_1.LogoutCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.SSO = SSO;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass SSOClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = runtimeConfig_1.getRuntimeConfig(configuration);\n        const _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        const _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        const _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        const _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        const _config_5 = middleware_user_agent_1.resolveUserAgentConfig(_config_4);\n        super(_config_5);\n        this.config = _config_5;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.SSOClient = SSOClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetRoleCredentialsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass GetRoleCredentialsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetRoleCredentialsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetRoleCredentialsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1GetRoleCredentialsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1GetRoleCredentialsCommand(output, context);\n    }\n}\nexports.GetRoleCredentialsCommand = GetRoleCredentialsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountRolesCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass ListAccountRolesCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountRolesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountRolesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountRolesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1ListAccountRolesCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1ListAccountRolesCommand(output, context);\n    }\n}\nexports.ListAccountRolesCommand = ListAccountRolesCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountsCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass ListAccountsCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1ListAccountsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1ListAccountsCommand(output, context);\n    }\n}\nexports.ListAccountsCommand = ListAccountsCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nclass LogoutCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"LogoutCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.LogoutRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_restJson1_1.serializeAws_restJson1LogoutCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_restJson1_1.deserializeAws_restJson1LogoutCommand(output, context);\n    }\n}\nexports.LogoutCommand = LogoutCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./GetRoleCredentialsCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountRolesCommand\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountsCommand\"), exports);\ntslib_1.__exportStar(require(\"./LogoutCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"ap-northeast-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-northeast-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-northeast-1\",\n    },\n    \"ap-northeast-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-northeast-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-northeast-2\",\n    },\n    \"ap-south-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-south-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-south-1\",\n    },\n    \"ap-southeast-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-southeast-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-southeast-1\",\n    },\n    \"ap-southeast-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ap-southeast-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ap-southeast-2\",\n    },\n    \"ca-central-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.ca-central-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"ca-central-1\",\n    },\n    \"eu-central-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-central-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-central-1\",\n    },\n    \"eu-north-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-north-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-north-1\",\n    },\n    \"eu-west-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-1\",\n    },\n    \"eu-west-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-2\",\n    },\n    \"eu-west-3\": {\n        variants: [\n            {\n                hostname: \"portal.sso.eu-west-3.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"eu-west-3\",\n    },\n    \"sa-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.sa-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"sa-east-1\",\n    },\n    \"us-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-east-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-2\",\n    },\n    \"us-gov-east-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-gov-east-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-east-1\",\n    },\n    \"us-gov-west-1\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-gov-west-1.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-gov-west-1\",\n    },\n    \"us-west-2\": {\n        variants: [\n            {\n                hostname: \"portal.sso.us-west-2.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-west-2\",\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"portal.sso.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"portal.sso-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"portal.sso.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => config_resolver_1.getRegionInfo(region, {\n    ...options,\n    signingService: \"awsssoportal\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SSO\"), exports);\ntslib_1.__exportStar(require(\"./SSOClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\ntslib_1.__exportStar(require(\"./pagination\"), exports);\nvar SSOServiceException_1 = require(\"./models/SSOServiceException\");\nObject.defineProperty(exports, \"SSOServiceException\", { enumerable: true, get: function () { return SSOServiceException_1.SSOServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOServiceException = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nclass SSOServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\nexports.SSOServiceException = SSOServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutRequest = exports.ListAccountsResponse = exports.ListAccountsRequest = exports.ListAccountRolesResponse = exports.RoleInfo = exports.ListAccountRolesRequest = exports.UnauthorizedException = exports.TooManyRequestsException = exports.ResourceNotFoundException = exports.InvalidRequestException = exports.GetRoleCredentialsResponse = exports.RoleCredentials = exports.GetRoleCredentialsRequest = exports.AccountInfo = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst SSOServiceException_1 = require(\"./SSOServiceException\");\nvar AccountInfo;\n(function (AccountInfo) {\n    AccountInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccountInfo = exports.AccountInfo || (exports.AccountInfo = {}));\nvar GetRoleCredentialsRequest;\n(function (GetRoleCredentialsRequest) {\n    GetRoleCredentialsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(GetRoleCredentialsRequest = exports.GetRoleCredentialsRequest || (exports.GetRoleCredentialsRequest = {}));\nvar RoleCredentials;\n(function (RoleCredentials) {\n    RoleCredentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.secretAccessKey && { secretAccessKey: smithy_client_1.SENSITIVE_STRING }),\n        ...(obj.sessionToken && { sessionToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(RoleCredentials = exports.RoleCredentials || (exports.RoleCredentials = {}));\nvar GetRoleCredentialsResponse;\n(function (GetRoleCredentialsResponse) {\n    GetRoleCredentialsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.roleCredentials && { roleCredentials: RoleCredentials.filterSensitiveLog(obj.roleCredentials) }),\n    });\n})(GetRoleCredentialsResponse = exports.GetRoleCredentialsResponse || (exports.GetRoleCredentialsResponse = {}));\nclass InvalidRequestException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nexports.InvalidRequestException = InvalidRequestException;\nclass ResourceNotFoundException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexports.ResourceNotFoundException = ResourceNotFoundException;\nclass TooManyRequestsException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexports.TooManyRequestsException = TooManyRequestsException;\nclass UnauthorizedException extends SSOServiceException_1.SSOServiceException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nexports.UnauthorizedException = UnauthorizedException;\nvar ListAccountRolesRequest;\n(function (ListAccountRolesRequest) {\n    ListAccountRolesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ListAccountRolesRequest = exports.ListAccountRolesRequest || (exports.ListAccountRolesRequest = {}));\nvar RoleInfo;\n(function (RoleInfo) {\n    RoleInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RoleInfo = exports.RoleInfo || (exports.RoleInfo = {}));\nvar ListAccountRolesResponse;\n(function (ListAccountRolesResponse) {\n    ListAccountRolesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountRolesResponse = exports.ListAccountRolesResponse || (exports.ListAccountRolesResponse = {}));\nvar ListAccountsRequest;\n(function (ListAccountsRequest) {\n    ListAccountsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ListAccountsRequest = exports.ListAccountsRequest || (exports.ListAccountsRequest = {}));\nvar ListAccountsResponse;\n(function (ListAccountsResponse) {\n    ListAccountsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountsResponse = exports.ListAccountsResponse || (exports.ListAccountsResponse = {}));\nvar LogoutRequest;\n(function (LogoutRequest) {\n    LogoutRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(LogoutRequest = exports.LogoutRequest || (exports.LogoutRequest = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccountRoles = void 0;\nconst ListAccountRolesCommand_1 = require(\"../commands/ListAccountRolesCommand\");\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListAccountRolesCommand_1.ListAccountRolesCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listAccountRoles(input, ...args);\n};\nasync function* paginateListAccountRoles(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListAccountRoles = paginateListAccountRoles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccounts = void 0;\nconst ListAccountsCommand_1 = require(\"../commands/ListAccountsCommand\");\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst makePagedClientRequest = async (client, input, ...args) => {\n    return await client.send(new ListAccountsCommand_1.ListAccountsCommand(input), ...args);\n};\nconst makePagedRequest = async (client, input, ...args) => {\n    return await client.listAccounts(input, ...args);\n};\nasync function* paginateListAccounts(config, input, ...additionalArguments) {\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    return undefined;\n}\nexports.paginateListAccounts = paginateListAccounts;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./Interfaces\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountRolesPaginator\"), exports);\ntslib_1.__exportStar(require(\"./ListAccountsPaginator\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_restJson1LogoutCommand = exports.deserializeAws_restJson1ListAccountsCommand = exports.deserializeAws_restJson1ListAccountRolesCommand = exports.deserializeAws_restJson1GetRoleCredentialsCommand = exports.serializeAws_restJson1LogoutCommand = exports.serializeAws_restJson1ListAccountsCommand = exports.serializeAws_restJson1ListAccountRolesCommand = exports.serializeAws_restJson1GetRoleCredentialsCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst SSOServiceException_1 = require(\"../models/SSOServiceException\");\nconst serializeAws_restJson1GetRoleCredentialsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/federation/credentials\";\n    const query = {\n        ...(input.roleName !== undefined && { role_name: input.roleName }),\n        ...(input.accountId !== undefined && { account_id: input.accountId }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetRoleCredentialsCommand = serializeAws_restJson1GetRoleCredentialsCommand;\nconst serializeAws_restJson1ListAccountRolesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/roles\";\n    const query = {\n        ...(input.nextToken !== undefined && { next_token: input.nextToken }),\n        ...(input.maxResults !== undefined && { max_result: input.maxResults.toString() }),\n        ...(input.accountId !== undefined && { account_id: input.accountId }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountRolesCommand = serializeAws_restJson1ListAccountRolesCommand;\nconst serializeAws_restJson1ListAccountsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/accounts\";\n    const query = {\n        ...(input.nextToken !== undefined && { next_token: input.nextToken }),\n        ...(input.maxResults !== undefined && { max_result: input.maxResults.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountsCommand = serializeAws_restJson1ListAccountsCommand;\nconst serializeAws_restJson1LogoutCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    const resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/logout\";\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1LogoutCommand = serializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        roleCredentials: undefined,\n    };\n    const data = smithy_client_1.expectNonNull(smithy_client_1.expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.roleCredentials !== undefined && data.roleCredentials !== null) {\n        contents.roleCredentials = deserializeAws_restJson1RoleCredentials(data.roleCredentials, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetRoleCredentialsCommand = deserializeAws_restJson1GetRoleCredentialsCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new SSOServiceException_1.SSOServiceException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody);\n    }\n};\nconst deserializeAws_restJson1ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountRolesCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        nextToken: undefined,\n        roleList: undefined,\n    };\n    const data = smithy_client_1.expectNonNull(smithy_client_1.expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.nextToken !== undefined && data.nextToken !== null) {\n        contents.nextToken = smithy_client_1.expectString(data.nextToken);\n    }\n    if (data.roleList !== undefined && data.roleList !== null) {\n        contents.roleList = deserializeAws_restJson1RoleListType(data.roleList, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAccountRolesCommand = deserializeAws_restJson1ListAccountRolesCommand;\nconst deserializeAws_restJson1ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new SSOServiceException_1.SSOServiceException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody);\n    }\n};\nconst deserializeAws_restJson1ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        accountList: undefined,\n        nextToken: undefined,\n    };\n    const data = smithy_client_1.expectNonNull(smithy_client_1.expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.accountList !== undefined && data.accountList !== null) {\n        contents.accountList = deserializeAws_restJson1AccountListType(data.accountList, context);\n    }\n    if (data.nextToken !== undefined && data.nextToken !== null) {\n        contents.nextToken = smithy_client_1.expectString(data.nextToken);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAccountsCommand = deserializeAws_restJson1ListAccountsCommand;\nconst deserializeAws_restJson1ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new SSOServiceException_1.SSOServiceException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody);\n    }\n};\nconst deserializeAws_restJson1LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1LogoutCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1LogoutCommand = deserializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new SSOServiceException_1.SSOServiceException({\n                name: parsedBody.code || parsedBody.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody);\n    }\n};\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n    const contents = {};\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = smithy_client_1.expectString(data.message);\n    }\n    const exception = new models_0_1.InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return smithy_client_1.decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = {};\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = smithy_client_1.expectString(data.message);\n    }\n    const exception = new models_0_1.ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return smithy_client_1.decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const contents = {};\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = smithy_client_1.expectString(data.message);\n    }\n    const exception = new models_0_1.TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return smithy_client_1.decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnauthorizedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {};\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = smithy_client_1.expectString(data.message);\n    }\n    const exception = new models_0_1.UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return smithy_client_1.decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1AccountInfo = (output, context) => {\n    return {\n        accountId: smithy_client_1.expectString(output.accountId),\n        accountName: smithy_client_1.expectString(output.accountName),\n        emailAddress: smithy_client_1.expectString(output.emailAddress),\n    };\n};\nconst deserializeAws_restJson1AccountListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1AccountInfo(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1RoleCredentials = (output, context) => {\n    return {\n        accessKeyId: smithy_client_1.expectString(output.accessKeyId),\n        expiration: smithy_client_1.expectLong(output.expiration),\n        secretAccessKey: smithy_client_1.expectString(output.secretAccessKey),\n        sessionToken: smithy_client_1.expectString(output.sessionToken),\n    };\n};\nconst deserializeAws_restJson1RoleInfo = (output, context) => {\n    return {\n        accountId: smithy_client_1.expectString(output.accountId),\n        roleName: smithy_client_1.expectString(output.roleName),\n    };\n};\nconst deserializeAws_restJson1RoleListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1RoleInfo(entry, context);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n    const defaultsMode = util_defaults_mode_node_1.resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = runtimeConfig_shared_1.getRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: (_d = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _d !== void 0 ? _d : util_user_agent_node_1.defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_e = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _e !== void 0 ? _e : node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_f = config === null || config === void 0 ? void 0 : config.region) !== null && _f !== void 0 ? _f : node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_g = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _g !== void 0 ? _g : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_h = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _h !== void 0 ? _h : node_config_provider_1.loadConfig({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_j = config === null || config === void 0 ? void 0 : config.sha256) !== null && _j !== void 0 ? _j : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_k = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _k !== void 0 ? _k : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_l = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _l !== void 0 ? _l : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _m !== void 0 ? _m : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_o = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _o !== void 0 ? _o : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2019-06-10\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"SSO\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STS = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithSAMLCommand_1 = require(\"./commands/AssumeRoleWithSAMLCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst DecodeAuthorizationMessageCommand_1 = require(\"./commands/DecodeAuthorizationMessageCommand\");\nconst GetAccessKeyInfoCommand_1 = require(\"./commands/GetAccessKeyInfoCommand\");\nconst GetCallerIdentityCommand_1 = require(\"./commands/GetCallerIdentityCommand\");\nconst GetFederationTokenCommand_1 = require(\"./commands/GetFederationTokenCommand\");\nconst GetSessionTokenCommand_1 = require(\"./commands/GetSessionTokenCommand\");\nconst STSClient_1 = require(\"./STSClient\");\nclass STS extends STSClient_1.STSClient {\n    assumeRole(args, optionsOrCb, cb) {\n        const command = new AssumeRoleCommand_1.AssumeRoleCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithSAML(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithSAMLCommand_1.AssumeRoleWithSAMLCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithWebIdentity(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    decodeAuthorizationMessage(args, optionsOrCb, cb) {\n        const command = new DecodeAuthorizationMessageCommand_1.DecodeAuthorizationMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getAccessKeyInfo(args, optionsOrCb, cb) {\n        const command = new GetAccessKeyInfoCommand_1.GetAccessKeyInfoCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCallerIdentity(args, optionsOrCb, cb) {\n        const command = new GetCallerIdentityCommand_1.GetCallerIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFederationToken(args, optionsOrCb, cb) {\n        const command = new GetFederationTokenCommand_1.GetFederationTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getSessionToken(args, optionsOrCb, cb) {\n        const command = new GetSessionTokenCommand_1.GetSessionTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.STS = STS;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSClient = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_sdk_sts_1 = require(\"@aws-sdk/middleware-sdk-sts\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nclass STSClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        const _config_0 = runtimeConfig_1.getRuntimeConfig(configuration);\n        const _config_1 = config_resolver_1.resolveRegionConfig(_config_0);\n        const _config_2 = config_resolver_1.resolveEndpointsConfig(_config_1);\n        const _config_3 = middleware_retry_1.resolveRetryConfig(_config_2);\n        const _config_4 = middleware_host_header_1.resolveHostHeaderConfig(_config_3);\n        const _config_5 = middleware_sdk_sts_1.resolveStsAuthConfig(_config_4, { stsClientCtor: STSClient });\n        const _config_6 = middleware_user_agent_1.resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(middleware_retry_1.getRetryPlugin(this.config));\n        this.middlewareStack.use(middleware_content_length_1.getContentLengthPlugin(this.config));\n        this.middlewareStack.use(middleware_host_header_1.getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(middleware_logger_1.getLoggerPlugin(this.config));\n        this.middlewareStack.use(middleware_user_agent_1.getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\nexports.STSClient = STSClient;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleCommand(output, context);\n    }\n}\nexports.AssumeRoleCommand = AssumeRoleCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithSAMLCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleWithSAMLCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithSAMLCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleWithSAMLCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleWithSAMLCommand(output, context);\n    }\n}\nexports.AssumeRoleWithSAMLCommand = AssumeRoleWithSAMLCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithWebIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass AssumeRoleWithWebIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryAssumeRoleWithWebIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryAssumeRoleWithWebIdentityCommand(output, context);\n    }\n}\nexports.AssumeRoleWithWebIdentityCommand = AssumeRoleWithWebIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DecodeAuthorizationMessageCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass DecodeAuthorizationMessageCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"DecodeAuthorizationMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryDecodeAuthorizationMessageCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryDecodeAuthorizationMessageCommand(output, context);\n    }\n}\nexports.DecodeAuthorizationMessageCommand = DecodeAuthorizationMessageCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetAccessKeyInfoCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetAccessKeyInfoCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetAccessKeyInfoCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetAccessKeyInfoRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetAccessKeyInfoResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetAccessKeyInfoCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetAccessKeyInfoCommand(output, context);\n    }\n}\nexports.GetAccessKeyInfoCommand = GetAccessKeyInfoCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCallerIdentityCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetCallerIdentityCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetCallerIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetCallerIdentityRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetCallerIdentityResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetCallerIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetCallerIdentityCommand(output, context);\n    }\n}\nexports.GetCallerIdentityCommand = GetCallerIdentityCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFederationTokenCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetFederationTokenCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetFederationTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFederationTokenRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetFederationTokenResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetFederationTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetFederationTokenCommand(output, context);\n    }\n}\nexports.GetFederationTokenCommand = GetFederationTokenCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenCommand = void 0;\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nclass GetSessionTokenCommand extends smithy_client_1.Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(middleware_serde_1.getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(middleware_signing_1.getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetSessionTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetSessionTokenRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetSessionTokenResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return Aws_query_1.serializeAws_queryGetSessionTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return Aws_query_1.deserializeAws_queryGetSessionTokenCommand(output, context);\n    }\n}\nexports.GetSessionTokenCommand = GetSessionTokenCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AssumeRoleCommand\"), exports);\ntslib_1.__exportStar(require(\"./AssumeRoleWithSAMLCommand\"), exports);\ntslib_1.__exportStar(require(\"./AssumeRoleWithWebIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./DecodeAuthorizationMessageCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetAccessKeyInfoCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetCallerIdentityCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetFederationTokenCommand\"), exports);\ntslib_1.__exportStar(require(\"./GetSessionTokenCommand\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst STSClient_1 = require(\"./STSClient\");\nconst getDefaultRoleAssumer = (stsOptions = {}) => defaultStsRoleAssumers_1.getDefaultRoleAssumer(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}) => defaultStsRoleAssumers_1.getDefaultRoleAssumerWithWebIdentity(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: exports.getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: exports.getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\nconst getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand_1.AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: exports.getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: exports.getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"aws-global\": {\n        variants: [\n            {\n                hostname: \"sts.amazonaws.com\",\n                tags: [],\n            },\n        ],\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-1\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-east-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-east-2\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-east-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-gov-east-1\": {\n        variants: [\n            {\n                hostname: \"sts.us-gov-east-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-gov-west-1\": {\n        variants: [\n            {\n                hostname: \"sts.us-gov-west-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-west-1\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-west-1.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"us-west-2\": {\n        variants: [\n            {\n                hostname: \"sts-fips.us-west-2.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ap-southeast-3\",\n            \"aws-global\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-1-fips\",\n            \"us-east-2\",\n            \"us-east-2-fips\",\n            \"us-west-1\",\n            \"us-west-1-fips\",\n            \"us-west-2\",\n            \"us-west-2-fips\",\n        ],\n        regionRegex: \"^(us|eu|ap|sa|ca|me|af)\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        regionRegex: \"^cn\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com.cn\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.amazonaws.com.cn\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.amazonwebservices.com.cn\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\", \"us-iso-west-1\"],\n        regionRegex: \"^us\\\\-iso\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.c2s.ic.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.c2s.ic.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        regionRegex: \"^us\\\\-isob\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.sc2s.sgov.gov\",\n                tags: [],\n            },\n            {\n                hostname: \"sts-fips.{region}.sc2s.sgov.gov\",\n                tags: [\"fips\"],\n            },\n        ],\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-east-1-fips\", \"us-gov-west-1\", \"us-gov-west-1-fips\"],\n        regionRegex: \"^us\\\\-gov\\\\-\\\\w+\\\\-\\\\d+$\",\n        variants: [\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [],\n            },\n            {\n                hostname: \"sts.{region}.amazonaws.com\",\n                tags: [\"fips\"],\n            },\n            {\n                hostname: \"sts-fips.{region}.api.aws\",\n                tags: [\"dualstack\", \"fips\"],\n            },\n            {\n                hostname: \"sts.{region}.api.aws\",\n                tags: [\"dualstack\"],\n            },\n        ],\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => config_resolver_1.getRegionInfo(region, {\n    ...options,\n    signingService: \"sts\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSServiceException = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./STS\"), exports);\ntslib_1.__exportStar(require(\"./STSClient\"), exports);\ntslib_1.__exportStar(require(\"./commands\"), exports);\ntslib_1.__exportStar(require(\"./defaultRoleAssumers\"), exports);\ntslib_1.__exportStar(require(\"./models\"), exports);\nvar STSServiceException_1 = require(\"./models/STSServiceException\");\nObject.defineProperty(exports, \"STSServiceException\", { enumerable: true, get: function () { return STSServiceException_1.STSServiceException; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSServiceException = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nclass STSServiceException extends smithy_client_1.ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\nexports.STSServiceException = STSServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./models_0\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenResponse = exports.GetSessionTokenRequest = exports.GetFederationTokenResponse = exports.FederatedUser = exports.GetFederationTokenRequest = exports.GetCallerIdentityResponse = exports.GetCallerIdentityRequest = exports.GetAccessKeyInfoResponse = exports.GetAccessKeyInfoRequest = exports.InvalidAuthorizationMessageException = exports.DecodeAuthorizationMessageResponse = exports.DecodeAuthorizationMessageRequest = exports.IDPCommunicationErrorException = exports.AssumeRoleWithWebIdentityResponse = exports.AssumeRoleWithWebIdentityRequest = exports.InvalidIdentityTokenException = exports.IDPRejectedClaimException = exports.AssumeRoleWithSAMLResponse = exports.AssumeRoleWithSAMLRequest = exports.RegionDisabledException = exports.PackedPolicyTooLargeException = exports.MalformedPolicyDocumentException = exports.ExpiredTokenException = exports.AssumeRoleResponse = exports.Credentials = exports.AssumeRoleRequest = exports.Tag = exports.PolicyDescriptorType = exports.AssumedRoleUser = void 0;\nconst STSServiceException_1 = require(\"./STSServiceException\");\nvar AssumedRoleUser;\n(function (AssumedRoleUser) {\n    AssumedRoleUser.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumedRoleUser = exports.AssumedRoleUser || (exports.AssumedRoleUser = {}));\nvar PolicyDescriptorType;\n(function (PolicyDescriptorType) {\n    PolicyDescriptorType.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PolicyDescriptorType = exports.PolicyDescriptorType || (exports.PolicyDescriptorType = {}));\nvar Tag;\n(function (Tag) {\n    Tag.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Tag = exports.Tag || (exports.Tag = {}));\nvar AssumeRoleRequest;\n(function (AssumeRoleRequest) {\n    AssumeRoleRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleRequest = exports.AssumeRoleRequest || (exports.AssumeRoleRequest = {}));\nvar Credentials;\n(function (Credentials) {\n    Credentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Credentials = exports.Credentials || (exports.Credentials = {}));\nvar AssumeRoleResponse;\n(function (AssumeRoleResponse) {\n    AssumeRoleResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleResponse = exports.AssumeRoleResponse || (exports.AssumeRoleResponse = {}));\nclass ExpiredTokenException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexports.ExpiredTokenException = ExpiredTokenException;\nclass MalformedPolicyDocumentException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexports.MalformedPolicyDocumentException = MalformedPolicyDocumentException;\nclass PackedPolicyTooLargeException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexports.PackedPolicyTooLargeException = PackedPolicyTooLargeException;\nclass RegionDisabledException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexports.RegionDisabledException = RegionDisabledException;\nvar AssumeRoleWithSAMLRequest;\n(function (AssumeRoleWithSAMLRequest) {\n    AssumeRoleWithSAMLRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithSAMLRequest = exports.AssumeRoleWithSAMLRequest || (exports.AssumeRoleWithSAMLRequest = {}));\nvar AssumeRoleWithSAMLResponse;\n(function (AssumeRoleWithSAMLResponse) {\n    AssumeRoleWithSAMLResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithSAMLResponse = exports.AssumeRoleWithSAMLResponse || (exports.AssumeRoleWithSAMLResponse = {}));\nclass IDPRejectedClaimException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexports.IDPRejectedClaimException = IDPRejectedClaimException;\nclass InvalidIdentityTokenException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexports.InvalidIdentityTokenException = InvalidIdentityTokenException;\nvar AssumeRoleWithWebIdentityRequest;\n(function (AssumeRoleWithWebIdentityRequest) {\n    AssumeRoleWithWebIdentityRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithWebIdentityRequest = exports.AssumeRoleWithWebIdentityRequest || (exports.AssumeRoleWithWebIdentityRequest = {}));\nvar AssumeRoleWithWebIdentityResponse;\n(function (AssumeRoleWithWebIdentityResponse) {\n    AssumeRoleWithWebIdentityResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithWebIdentityResponse = exports.AssumeRoleWithWebIdentityResponse || (exports.AssumeRoleWithWebIdentityResponse = {}));\nclass IDPCommunicationErrorException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexports.IDPCommunicationErrorException = IDPCommunicationErrorException;\nvar DecodeAuthorizationMessageRequest;\n(function (DecodeAuthorizationMessageRequest) {\n    DecodeAuthorizationMessageRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DecodeAuthorizationMessageRequest = exports.DecodeAuthorizationMessageRequest || (exports.DecodeAuthorizationMessageRequest = {}));\nvar DecodeAuthorizationMessageResponse;\n(function (DecodeAuthorizationMessageResponse) {\n    DecodeAuthorizationMessageResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DecodeAuthorizationMessageResponse = exports.DecodeAuthorizationMessageResponse || (exports.DecodeAuthorizationMessageResponse = {}));\nclass InvalidAuthorizationMessageException extends STSServiceException_1.STSServiceException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\nexports.InvalidAuthorizationMessageException = InvalidAuthorizationMessageException;\nvar GetAccessKeyInfoRequest;\n(function (GetAccessKeyInfoRequest) {\n    GetAccessKeyInfoRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccessKeyInfoRequest = exports.GetAccessKeyInfoRequest || (exports.GetAccessKeyInfoRequest = {}));\nvar GetAccessKeyInfoResponse;\n(function (GetAccessKeyInfoResponse) {\n    GetAccessKeyInfoResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccessKeyInfoResponse = exports.GetAccessKeyInfoResponse || (exports.GetAccessKeyInfoResponse = {}));\nvar GetCallerIdentityRequest;\n(function (GetCallerIdentityRequest) {\n    GetCallerIdentityRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCallerIdentityRequest = exports.GetCallerIdentityRequest || (exports.GetCallerIdentityRequest = {}));\nvar GetCallerIdentityResponse;\n(function (GetCallerIdentityResponse) {\n    GetCallerIdentityResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCallerIdentityResponse = exports.GetCallerIdentityResponse || (exports.GetCallerIdentityResponse = {}));\nvar GetFederationTokenRequest;\n(function (GetFederationTokenRequest) {\n    GetFederationTokenRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFederationTokenRequest = exports.GetFederationTokenRequest || (exports.GetFederationTokenRequest = {}));\nvar FederatedUser;\n(function (FederatedUser) {\n    FederatedUser.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FederatedUser = exports.FederatedUser || (exports.FederatedUser = {}));\nvar GetFederationTokenResponse;\n(function (GetFederationTokenResponse) {\n    GetFederationTokenResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFederationTokenResponse = exports.GetFederationTokenResponse || (exports.GetFederationTokenResponse = {}));\nvar GetSessionTokenRequest;\n(function (GetSessionTokenRequest) {\n    GetSessionTokenRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSessionTokenRequest = exports.GetSessionTokenRequest || (exports.GetSessionTokenRequest = {}));\nvar GetSessionTokenResponse;\n(function (GetSessionTokenResponse) {\n    GetSessionTokenResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSessionTokenResponse = exports.GetSessionTokenResponse || (exports.GetSessionTokenResponse = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_queryGetSessionTokenCommand = exports.deserializeAws_queryGetFederationTokenCommand = exports.deserializeAws_queryGetCallerIdentityCommand = exports.deserializeAws_queryGetAccessKeyInfoCommand = exports.deserializeAws_queryDecodeAuthorizationMessageCommand = exports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = exports.deserializeAws_queryAssumeRoleWithSAMLCommand = exports.deserializeAws_queryAssumeRoleCommand = exports.serializeAws_queryGetSessionTokenCommand = exports.serializeAws_queryGetFederationTokenCommand = exports.serializeAws_queryGetCallerIdentityCommand = exports.serializeAws_queryGetAccessKeyInfoCommand = exports.serializeAws_queryDecodeAuthorizationMessageCommand = exports.serializeAws_queryAssumeRoleWithWebIdentityCommand = exports.serializeAws_queryAssumeRoleWithSAMLCommand = exports.serializeAws_queryAssumeRoleCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst entities_1 = require(\"entities\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst models_0_1 = require(\"../models/models_0\");\nconst STSServiceException_1 = require(\"../models/STSServiceException\");\nconst serializeAws_queryAssumeRoleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleCommand = serializeAws_queryAssumeRoleCommand;\nconst serializeAws_queryAssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithSAMLCommand = serializeAws_queryAssumeRoleWithSAMLCommand;\nconst serializeAws_queryAssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithWebIdentityCommand = serializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst serializeAws_queryDecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDecodeAuthorizationMessageCommand = serializeAws_queryDecodeAuthorizationMessageCommand;\nconst serializeAws_queryGetAccessKeyInfoCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetAccessKeyInfoCommand = serializeAws_queryGetAccessKeyInfoCommand;\nconst serializeAws_queryGetCallerIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetCallerIdentityCommand = serializeAws_queryGetCallerIdentityCommand;\nconst serializeAws_queryGetFederationTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetFederationTokenCommand = serializeAws_queryGetFederationTokenCommand;\nconst serializeAws_queryGetSessionTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetSessionTokenCommand = serializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryAssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleCommand = deserializeAws_queryAssumeRoleCommand;\nconst deserializeAws_queryAssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new STSServiceException_1.STSServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryAssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithSAMLCommand = deserializeAws_queryAssumeRoleWithSAMLCommand;\nconst deserializeAws_queryAssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context);\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new STSServiceException_1.STSServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = deserializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"IDPCommunicationErrorException\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await deserializeAws_queryIDPCommunicationErrorExceptionResponse(parsedOutput, context);\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context);\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new STSServiceException_1.STSServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryDecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDecodeAuthorizationMessageCommand = deserializeAws_queryDecodeAuthorizationMessageCommand;\nconst deserializeAws_queryDecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await deserializeAws_queryInvalidAuthorizationMessageExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new STSServiceException_1.STSServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryGetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetAccessKeyInfoCommand = deserializeAws_queryGetAccessKeyInfoCommand;\nconst deserializeAws_queryGetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new STSServiceException_1.STSServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryGetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetCallerIdentityCommand = deserializeAws_queryGetCallerIdentityCommand;\nconst deserializeAws_queryGetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new STSServiceException_1.STSServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryGetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetFederationTokenCommand = deserializeAws_queryGetFederationTokenCommand;\nconst deserializeAws_queryGetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new STSServiceException_1.STSServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryGetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetSessionTokenCommand = deserializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryGetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            response = new STSServiceException_1.STSServiceException({\n                name: parsedBody.Error.code || parsedBody.Error.Code || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            });\n            throw smithy_client_1.decorateServiceException(response, parsedBody.Error);\n    }\n};\nconst deserializeAws_queryExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryExpiredTokenException(body.Error, context);\n    const exception = new models_0_1.ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryIDPCommunicationErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPCommunicationErrorException(body.Error, context);\n    const exception = new models_0_1.IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryIDPRejectedClaimExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPRejectedClaimException(body.Error, context);\n    const exception = new models_0_1.IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidAuthorizationMessageExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidAuthorizationMessageException(body.Error, context);\n    const exception = new models_0_1.InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidIdentityTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidIdentityTokenException(body.Error, context);\n    const exception = new models_0_1.InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryMalformedPolicyDocumentExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMalformedPolicyDocumentException(body.Error, context);\n    const exception = new models_0_1.MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryPackedPolicyTooLargeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryPackedPolicyTooLargeException(body.Error, context);\n    const exception = new models_0_1.PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst deserializeAws_queryRegionDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryRegionDisabledException(body.Error, context);\n    const exception = new models_0_1.RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return smithy_client_1.decorateServiceException(exception, body);\n};\nconst serializeAws_queryAssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName !== undefined && input.RoleSessionName !== null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys !== undefined && input.TransitiveTagKeys !== null) {\n        const memberEntries = serializeAws_querytagKeyListType(input.TransitiveTagKeys, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId !== undefined && input.ExternalId !== null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber !== undefined && input.SerialNumber !== null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode !== undefined && input.TokenCode !== null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity !== undefined && input.SourceIdentity !== null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn !== undefined && input.PrincipalArn !== null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion !== undefined && input.SAMLAssertion !== null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName !== undefined && input.RoleSessionName !== null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken !== undefined && input.WebIdentityToken !== null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId !== undefined && input.ProviderId !== null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryDecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage !== undefined && input.EncodedMessage !== null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst serializeAws_queryGetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId !== undefined && input.AccessKeyId !== null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst serializeAws_queryGetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryGetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name !== undefined && input.Name !== null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber !== undefined && input.SerialNumber !== null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode !== undefined && input.TokenCode !== null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst serializeAws_querypolicyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryPolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn !== undefined && input.arn !== null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst serializeAws_queryTag = (input, context) => {\n    const entries = {};\n    if (input.Key !== undefined && input.Key !== null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_querytagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_querytagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst deserializeAws_queryAssumedRoleUser = (output, context) => {\n    const contents = {\n        AssumedRoleId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = smithy_client_1.expectString(output[\"AssumedRoleId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = smithy_client_1.strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = smithy_client_1.expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Subject: undefined,\n        SubjectType: undefined,\n        Issuer: undefined,\n        Audience: undefined,\n        NameQualifier: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = smithy_client_1.strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = smithy_client_1.expectString(output[\"Subject\"]);\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = smithy_client_1.expectString(output[\"SubjectType\"]);\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = smithy_client_1.expectString(output[\"Issuer\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = smithy_client_1.expectString(output[\"Audience\"]);\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = smithy_client_1.expectString(output[\"NameQualifier\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = smithy_client_1.expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        SubjectFromWebIdentityToken: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Provider: undefined,\n        Audience: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = smithy_client_1.expectString(output[\"SubjectFromWebIdentityToken\"]);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = smithy_client_1.strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = smithy_client_1.expectString(output[\"Provider\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = smithy_client_1.expectString(output[\"Audience\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = smithy_client_1.expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCredentials = (output, context) => {\n    const contents = {\n        AccessKeyId: undefined,\n        SecretAccessKey: undefined,\n        SessionToken: undefined,\n        Expiration: undefined,\n    };\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = smithy_client_1.expectString(output[\"AccessKeyId\"]);\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = smithy_client_1.expectString(output[\"SecretAccessKey\"]);\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = smithy_client_1.expectString(output[\"SessionToken\"]);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = smithy_client_1.expectNonNull(smithy_client_1.parseRfc3339DateTime(output[\"Expiration\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryDecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {\n        DecodedMessage: undefined,\n    };\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = smithy_client_1.expectString(output[\"DecodedMessage\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryExpiredTokenException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryFederatedUser = (output, context) => {\n    const contents = {\n        FederatedUserId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = smithy_client_1.expectString(output[\"FederatedUserId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetAccessKeyInfoResponse = (output, context) => {\n    const contents = {\n        Account: undefined,\n    };\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = smithy_client_1.expectString(output[\"Account\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetCallerIdentityResponse = (output, context) => {\n    const contents = {\n        UserId: undefined,\n        Account: undefined,\n        Arn: undefined,\n    };\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = smithy_client_1.expectString(output[\"UserId\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = smithy_client_1.expectString(output[\"Account\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = smithy_client_1.expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetFederationTokenResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        FederatedUser: undefined,\n        PackedPolicySize: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = deserializeAws_queryFederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = smithy_client_1.strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSessionTokenResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = smithy_client_1.expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parsedObj = fast_xml_parser_1.parse(encoded, {\n            attributeNamePrefix: \"\",\n            ignoreAttributes: false,\n            parseNodeValue: false,\n            trimValues: false,\n            tagValueProcessor: (val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : entities_1.decodeHTML(val)),\n        });\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return smithy_client_1.getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => smithy_client_1.extendedEncodeURIComponent(key) + \"=\" + smithy_client_1.extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = tslib_1.__importDefault(require(\"../package.json\"));\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst util_defaults_mode_node_1 = require(\"@aws-sdk/util-defaults-mode-node\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n    const defaultsMode = util_defaults_mode_node_1.resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(smithy_client_1.loadConfigsForDefaultMode);\n    const clientSharedValues = runtimeConfig_shared_1.getRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : defaultStsRoleAssumers_1.decorateDefaultCredentialProvider(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : util_user_agent_node_1.defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_f = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _f !== void 0 ? _f : node_config_provider_1.loadConfig(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_g = config === null || config === void 0 ? void 0 : config.region) !== null && _g !== void 0 ? _g : node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_h = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _h !== void 0 ? _h : new node_http_handler_1.NodeHttpHandler(defaultConfigProvider),\n        retryMode: (_j = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _j !== void 0 ? _j : node_config_provider_1.loadConfig({\n            ...middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS,\n            default: async () => (await defaultConfigProvider()).retryMode || middleware_retry_1.DEFAULT_RETRY_MODE,\n        }),\n        sha256: (_k = config === null || config === void 0 ? void 0 : config.sha256) !== null && _k !== void 0 ? _k : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_l = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _l !== void 0 ? _l : node_http_handler_1.streamCollector,\n        useDualstackEndpoint: (_m = config === null || config === void 0 ? void 0 : config.useDualstackEndpoint) !== null && _m !== void 0 ? _m : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: (_o = config === null || config === void 0 ? void 0 : config.useFipsEndpoint) !== null && _o !== void 0 ? _o : node_config_provider_1.loadConfig(config_resolver_1.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: (_p = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _p !== void 0 ? _p : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_q = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _q !== void 0 ? _q : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst endpoints_1 = require(\"./endpoints\");\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2011-06-15\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"STS\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = exports.DEFAULT_USE_DUALSTACK_ENDPOINT = exports.CONFIG_USE_DUALSTACK_ENDPOINT = exports.ENV_USE_DUALSTACK_ENDPOINT = void 0;\nconst util_config_provider_1 = require(\"@aws-sdk/util-config-provider\");\nexports.ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexports.CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexports.DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexports.NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => util_config_provider_1.booleanSelector(env, exports.ENV_USE_DUALSTACK_ENDPOINT, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => util_config_provider_1.booleanSelector(profile, exports.CONFIG_USE_DUALSTACK_ENDPOINT, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = exports.DEFAULT_USE_FIPS_ENDPOINT = exports.CONFIG_USE_FIPS_ENDPOINT = exports.ENV_USE_FIPS_ENDPOINT = void 0;\nconst util_config_provider_1 = require(\"@aws-sdk/util-config-provider\");\nexports.ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexports.CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexports.DEFAULT_USE_FIPS_ENDPOINT = false;\nexports.NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => util_config_provider_1.booleanSelector(env, exports.ENV_USE_FIPS_ENDPOINT, util_config_provider_1.SelectorType.ENV),\n    configFileSelector: (profile) => util_config_provider_1.booleanSelector(profile, exports.CONFIG_USE_FIPS_ENDPOINT, util_config_provider_1.SelectorType.CONFIG),\n    default: false,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./NodeUseDualstackEndpointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./NodeUseFipsEndpointConfigOptions\"), exports);\ntslib_1.__exportStar(require(\"./resolveCustomEndpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./resolveEndpointsConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCustomEndpointsConfig = void 0;\nconst normalizeBoolean_1 = require(\"./utils/normalizeBoolean\");\nconst normalizeEndpoint_1 = require(\"./utils/normalizeEndpoint\");\nconst resolveCustomEndpointsConfig = (input) => {\n    var _a;\n    return ({\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: normalizeEndpoint_1.normalizeEndpoint(input),\n        isCustomEndpoint: true,\n        useDualstackEndpoint: normalizeBoolean_1.normalizeBoolean(input.useDualstackEndpoint),\n    });\n};\nexports.resolveCustomEndpointsConfig = resolveCustomEndpointsConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEndpointsConfig = void 0;\nconst getEndpointFromRegion_1 = require(\"./utils/getEndpointFromRegion\");\nconst normalizeBoolean_1 = require(\"./utils/normalizeBoolean\");\nconst normalizeEndpoint_1 = require(\"./utils/normalizeEndpoint\");\nconst resolveEndpointsConfig = (input) => {\n    var _a;\n    const useDualstackEndpoint = normalizeBoolean_1.normalizeBoolean(input.useDualstackEndpoint);\n    const { endpoint, useFipsEndpoint } = input;\n    return {\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: endpoint\n            ? normalizeEndpoint_1.normalizeEndpoint({ ...input, endpoint })\n            : () => getEndpointFromRegion_1.getEndpointFromRegion({ ...input, useDualstackEndpoint, useFipsEndpoint }),\n        isCustomEndpoint: endpoint ? true : false,\n        useDualstackEndpoint,\n    };\n};\nexports.resolveEndpointsConfig = resolveEndpointsConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointFromRegion = void 0;\nconst getEndpointFromRegion = async (input) => {\n    var _a;\n    const { tls = true } = input;\n    const region = await input.region();\n    const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(region)) {\n        throw new Error(\"Invalid region in client config\");\n    }\n    const useDualstackEndpoint = await input.useDualstackEndpoint();\n    const useFipsEndpoint = await input.useFipsEndpoint();\n    const { hostname } = (_a = (await input.regionInfoProvider(region, { useDualstackEndpoint, useFipsEndpoint }))) !== null && _a !== void 0 ? _a : {};\n    if (!hostname) {\n        throw new Error(\"Cannot resolve hostname from client config\");\n    }\n    return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\nexports.getEndpointFromRegion = getEndpointFromRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeBoolean = void 0;\nconst normalizeBoolean = (value) => {\n    if (typeof value === \"boolean\") {\n        const promisified = Promise.resolve(value);\n        return () => promisified;\n    }\n    return value;\n};\nexports.normalizeBoolean = normalizeBoolean;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeEndpoint = void 0;\nconst normalizeEndpoint = ({ endpoint, urlParser }) => {\n    if (typeof endpoint === \"string\") {\n        const promisified = Promise.resolve(urlParser(endpoint));\n        return () => promisified;\n    }\n    else if (typeof endpoint === \"object\") {\n        const promisified = Promise.resolve(endpoint);\n        return () => promisified;\n    }\n    return endpoint;\n};\nexports.normalizeEndpoint = normalizeEndpoint;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./endpointsConfig\"), exports);\ntslib_1.__exportStar(require(\"./regionConfig\"), exports);\ntslib_1.__exportStar(require(\"./regionInfo\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = exports.NODE_REGION_CONFIG_OPTIONS = exports.REGION_INI_NAME = exports.REGION_ENV_NAME = void 0;\nexports.REGION_ENV_NAME = \"AWS_REGION\";\nexports.REGION_INI_NAME = \"region\";\nexports.NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[exports.REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRealRegion = void 0;\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst getRealRegion = (region) => isFipsRegion_1.isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\nexports.getRealRegion = getRealRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./resolveRegionConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isFipsRegion = void 0;\nconst isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\nexports.isFipsRegion = isFipsRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRegionConfig = void 0;\nconst getRealRegion_1 = require(\"./getRealRegion\");\nconst isFipsRegion_1 = require(\"./isFipsRegion\");\nconst resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion_1.getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion_1.getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion_1.isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint === \"boolean\" ? Promise.resolve(useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\nexports.resolveRegionConfig = resolveRegionConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostnameFromVariants = void 0;\nconst getHostnameFromVariants = (variants = [], { useFipsEndpoint, useDualstackEndpoint }) => {\n    var _a;\n    return (_a = variants.find(({ tags }) => useFipsEndpoint === tags.includes(\"fips\") && useDualstackEndpoint === tags.includes(\"dualstack\"))) === null || _a === void 0 ? void 0 : _a.hostname;\n};\nexports.getHostnameFromVariants = getHostnameFromVariants;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRegionInfo = void 0;\nconst getHostnameFromVariants_1 = require(\"./getHostnameFromVariants\");\nconst getResolvedHostname_1 = require(\"./getResolvedHostname\");\nconst getResolvedPartition_1 = require(\"./getResolvedPartition\");\nconst getResolvedSigningRegion_1 = require(\"./getResolvedSigningRegion\");\nconst getRegionInfo = (region, { useFipsEndpoint = false, useDualstackEndpoint = false, signingService, regionHash, partitionHash, }) => {\n    var _a, _b, _c, _d, _e, _f;\n    const partition = getResolvedPartition_1.getResolvedPartition(region, { partitionHash });\n    const resolvedRegion = region in regionHash ? region : (_b = (_a = partitionHash[partition]) === null || _a === void 0 ? void 0 : _a.endpoint) !== null && _b !== void 0 ? _b : region;\n    const hostnameOptions = { useFipsEndpoint, useDualstackEndpoint };\n    const regionHostname = getHostnameFromVariants_1.getHostnameFromVariants((_c = regionHash[resolvedRegion]) === null || _c === void 0 ? void 0 : _c.variants, hostnameOptions);\n    const partitionHostname = getHostnameFromVariants_1.getHostnameFromVariants((_d = partitionHash[partition]) === null || _d === void 0 ? void 0 : _d.variants, hostnameOptions);\n    const hostname = getResolvedHostname_1.getResolvedHostname(resolvedRegion, { regionHostname, partitionHostname });\n    if (hostname === undefined) {\n        throw new Error(`Endpoint resolution failed for: ${{ resolvedRegion, useFipsEndpoint, useDualstackEndpoint }}`);\n    }\n    const signingRegion = getResolvedSigningRegion_1.getResolvedSigningRegion(hostname, {\n        signingRegion: (_e = regionHash[resolvedRegion]) === null || _e === void 0 ? void 0 : _e.signingRegion,\n        regionRegex: partitionHash[partition].regionRegex,\n        useFipsEndpoint,\n    });\n    return {\n        partition,\n        signingService,\n        hostname,\n        ...(signingRegion && { signingRegion }),\n        ...(((_f = regionHash[resolvedRegion]) === null || _f === void 0 ? void 0 : _f.signingService) && {\n            signingService: regionHash[resolvedRegion].signingService,\n        }),\n    };\n};\nexports.getRegionInfo = getRegionInfo;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedHostname = void 0;\nconst getResolvedHostname = (resolvedRegion, { regionHostname, partitionHostname }) => regionHostname\n    ? regionHostname\n    : partitionHostname\n        ? partitionHostname.replace(\"{region}\", resolvedRegion)\n        : undefined;\nexports.getResolvedHostname = getResolvedHostname;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedPartition = void 0;\nconst getResolvedPartition = (region, { partitionHash }) => { var _a; return (_a = Object.keys(partitionHash || {}).find((key) => partitionHash[key].regions.includes(region))) !== null && _a !== void 0 ? _a : \"aws\"; };\nexports.getResolvedPartition = getResolvedPartition;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedSigningRegion = void 0;\nconst getResolvedSigningRegion = (hostname, { signingRegion, regionRegex, useFipsEndpoint }) => {\n    if (signingRegion) {\n        return signingRegion;\n    }\n    else if (useFipsEndpoint) {\n        const regionRegexJs = regionRegex.replace(\"\\\\\\\\\", \"\\\\\").replace(/^\\^/g, \"\\\\.\").replace(/\\$$/g, \"\\\\.\");\n        const regionRegexmatchArray = hostname.match(regionRegexJs);\n        if (regionRegexmatchArray) {\n            return regionRegexmatchArray[0].slice(1, -1);\n        }\n    }\n};\nexports.getResolvedSigningRegion = getResolvedSigningRegion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./PartitionHash\"), exports);\ntslib_1.__exportStar(require(\"./RegionHash\"), exports);\ntslib_1.__exportStar(require(\"./getRegionInfo\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = exports.ENV_EXPIRATION = exports.ENV_SESSION = exports.ENV_SECRET = exports.ENV_KEY = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nexports.ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexports.ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexports.ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexports.ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nconst fromEnv = () => async () => {\n    const accessKeyId = process.env[exports.ENV_KEY];\n    const secretAccessKey = process.env[exports.ENV_SECRET];\n    const sessionToken = process.env[exports.ENV_SESSION];\n    const expiry = process.env[exports.ENV_EXPIRATION];\n    if (accessKeyId && secretAccessKey) {\n        return {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"Unable to find environment variable credentials.\");\n};\nexports.fromEnv = fromEnv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromEnv\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Endpoint = void 0;\nvar Endpoint;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(Endpoint = exports.Endpoint || (exports.Endpoint = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_NAME = exports.ENV_ENDPOINT_NAME = void 0;\nexports.ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nexports.CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nexports.ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointMode = void 0;\nvar EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode = exports.EndpointMode || (exports.EndpointMode = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_MODE_NAME = exports.ENV_ENDPOINT_MODE_NAME = void 0;\nconst EndpointMode_1 = require(\"./EndpointMode\");\nexports.ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nexports.CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode_1.EndpointMode.IPv4,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromContainerMetadata = exports.ENV_CMDS_AUTH_TOKEN = exports.ENV_CMDS_RELATIVE_URI = exports.ENV_CMDS_FULL_URI = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst url_1 = require(\"url\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nexports.ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexports.ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexports.ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nconst fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = RemoteProviderInit_1.providerConfigFromInit(init);\n    return () => retry_1.retry(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!ImdsCredentials_1.isImdsCredentials(credsResponse)) {\n            throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return ImdsCredentials_1.fromImdsCredentials(credsResponse);\n    }, maxRetries);\n};\nexports.fromContainerMetadata = fromContainerMetadata;\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[exports.ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[exports.ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await httpRequest_1.httpRequest({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[exports.ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[exports.ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[exports.ENV_CMDS_FULL_URI]) {\n        const parsed = url_1.parse(process.env[exports.ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${exports.ENV_CMDS_RELATIVE_URI} or ${exports.ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromInstanceMetadata = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nconst getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nconst staticStabilityProvider_1 = require(\"./utils/staticStabilityProvider\");\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\nconst fromInstanceMetadata = (init = {}) => staticStabilityProvider_1.staticStabilityProvider(getInstanceImdsProvider(init), { logger: init.logger });\nexports.fromInstanceMetadata = fromInstanceMetadata;\nconst getInstanceImdsProvider = (init) => {\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = RemoteProviderInit_1.providerConfigFromInit(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await retry_1.retry(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return retry_1.retry(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint();\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if ((error === null || error === void 0 ? void 0 : error.statusCode) === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nconst getMetadataToken = async (options) => httpRequest_1.httpRequest({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await httpRequest_1.httpRequest({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await httpRequest_1.httpRequest({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!ImdsCredentials_1.isImdsCredentials(credsResponse)) {\n        throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return ImdsCredentials_1.fromImdsCredentials(credsResponse);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = exports.httpRequest = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromContainerMetadata\"), exports);\ntslib_1.__exportStar(require(\"./fromInstanceMetadata\"), exports);\ntslib_1.__exportStar(require(\"./remoteProvider/RemoteProviderInit\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\nvar httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nObject.defineProperty(exports, \"httpRequest\", { enumerable: true, get: function () { return httpRequest_1.httpRequest; } });\nvar getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nObject.defineProperty(exports, \"getInstanceMetadataEndpoint\", { enumerable: true, get: function () { return getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromImdsCredentials = exports.isImdsCredentials = void 0;\nconst isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexports.isImdsCredentials = isImdsCredentials;\nconst fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\nexports.fromImdsCredentials = fromImdsCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.providerConfigFromInit = exports.DEFAULT_MAX_RETRIES = exports.DEFAULT_TIMEOUT = void 0;\nexports.DEFAULT_TIMEOUT = 1000;\nexports.DEFAULT_MAX_RETRIES = 0;\nconst providerConfigFromInit = ({ maxRetries = exports.DEFAULT_MAX_RETRIES, timeout = exports.DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\nexports.providerConfigFromInit = providerConfigFromInit;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.httpRequest = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst buffer_1 = require(\"buffer\");\nconst http_1 = require(\"http\");\nfunction httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        var _a;\n        const req = http_1.request({\n            method: \"GET\",\n            ...options,\n            hostname: (_a = options.hostname) === null || _a === void 0 ? void 0 : _a.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new property_provider_1.ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new property_provider_1.ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new property_provider_1.ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(buffer_1.Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\nexports.httpRequest = httpRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\nconst retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\nexports.retry = retry;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getExtendedInstanceMetadataCredentials = void 0;\nconst STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 15 * 60;\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nconst getExtendedInstanceMetadataCredentials = (credentials, logger) => {\n    var _a;\n    const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS +\n        Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n    const newExpiration = new Date(Date.now() + refreshInterval * 1000);\n    logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" +\n        \"credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: \" +\n        STATIC_STABILITY_DOC_URL);\n    const originalExpiration = (_a = credentials.originalExpiration) !== null && _a !== void 0 ? _a : credentials.expiration;\n    return {\n        ...credentials,\n        ...(originalExpiration ? { originalExpiration } : {}),\n        expiration: newExpiration,\n    };\n};\nexports.getExtendedInstanceMetadataCredentials = getExtendedInstanceMetadataCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst Endpoint_1 = require(\"../config/Endpoint\");\nconst EndpointConfigOptions_1 = require(\"../config/EndpointConfigOptions\");\nconst EndpointMode_1 = require(\"../config/EndpointMode\");\nconst EndpointModeConfigOptions_1 = require(\"../config/EndpointModeConfigOptions\");\nconst getInstanceMetadataEndpoint = async () => url_parser_1.parseUrl((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nexports.getInstanceMetadataEndpoint = getInstanceMetadataEndpoint;\nconst getFromEndpointConfig = async () => node_config_provider_1.loadConfig(EndpointConfigOptions_1.ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await node_config_provider_1.loadConfig(EndpointModeConfigOptions_1.ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode_1.EndpointMode.IPv4:\n            return Endpoint_1.Endpoint.IPv4;\n        case EndpointMode_1.EndpointMode.IPv6:\n            return Endpoint_1.Endpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode_1.EndpointMode)}`);\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.staticStabilityProvider = void 0;\nconst getExtendedInstanceMetadataCredentials_1 = require(\"./getExtendedInstanceMetadataCredentials\");\nconst staticStabilityProvider = (provider, options = {}) => {\n    const logger = (options === null || options === void 0 ? void 0 : options.logger) || console;\n    let pastCredentials;\n    return async () => {\n        let credentials;\n        try {\n            credentials = await provider();\n            if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n                credentials = getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials(credentials, logger);\n            }\n        }\n        catch (e) {\n            if (pastCredentials) {\n                logger.warn(\"Credential renew failed: \", e);\n                credentials = getExtendedInstanceMetadataCredentials_1.getExtendedInstanceMetadataCredentials(pastCredentials, logger);\n            }\n            else {\n                throw e;\n            }\n        }\n        pastCredentials = credentials;\n        return credentials;\n    };\n};\nexports.staticStabilityProvider = staticStabilityProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromIni = void 0;\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst resolveProfileData_1 = require(\"./resolveProfileData\");\nconst fromIni = (init = {}) => async () => {\n    const profiles = await util_credentials_1.parseKnownFiles(init);\n    return resolveProfileData_1.resolveProfileData(util_credentials_1.getMasterProfileName(init), profiles, init);\n};\nexports.fromIni = fromIni;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromIni\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveAssumeRoleCredentials = exports.isAssumeRoleProfile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst resolveCredentialSource_1 = require(\"./resolveCredentialSource\");\nconst resolveProfileData_1 = require(\"./resolveProfileData\");\nconst isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 &&\n    (isAssumeRoleWithSourceProfile(arg) || isAssumeRoleWithProviderProfile(arg));\nexports.isAssumeRoleProfile = isAssumeRoleProfile;\nconst isAssumeRoleWithSourceProfile = (arg) => typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\nconst resolveAssumeRoleCredentials = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (!options.roleAssumer) {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no role assumption callback was provided.`, false);\n    }\n    const { source_profile } = data;\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new property_provider_1.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n            ` ${util_credentials_1.getMasterProfileName(options)}. Profiles visited: ` +\n            Object.keys(visitedProfiles).join(\", \"), false);\n    }\n    const sourceCredsProvider = source_profile\n        ? resolveProfileData_1.resolveProfileData(source_profile, profiles, options, {\n            ...visitedProfiles,\n            [source_profile]: true,\n        })\n        : resolveCredentialSource_1.resolveCredentialSource(data.credential_source, profileName)();\n    const params = {\n        RoleArn: data.role_arn,\n        RoleSessionName: data.role_session_name || `aws-sdk-js-${Date.now()}`,\n        ExternalId: data.external_id,\n    };\n    const { mfa_serial } = data;\n    if (mfa_serial) {\n        if (!options.mfaCodeProvider) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, false);\n        }\n        params.SerialNumber = mfa_serial;\n        params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n    }\n    const sourceCreds = await sourceCredsProvider;\n    return options.roleAssumer(sourceCreds, params);\n};\nexports.resolveAssumeRoleCredentials = resolveAssumeRoleCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCredentialSource = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: credential_provider_imds_1.fromContainerMetadata,\n        Ec2InstanceMetadata: credential_provider_imds_1.fromInstanceMetadata,\n        Environment: credential_provider_env_1.fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\nexports.resolveCredentialSource = resolveCredentialSource;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveProfileData = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst resolveAssumeRoleCredentials_1 = require(\"./resolveAssumeRoleCredentials\");\nconst resolveSsoCredentials_1 = require(\"./resolveSsoCredentials\");\nconst resolveStaticCredentials_1 = require(\"./resolveStaticCredentials\");\nconst resolveWebIdentityCredentials_1 = require(\"./resolveWebIdentityCredentials\");\nconst resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && resolveStaticCredentials_1.isStaticCredsProfile(data)) {\n        return resolveStaticCredentials_1.resolveStaticCredentials(data);\n    }\n    if (resolveAssumeRoleCredentials_1.isAssumeRoleProfile(data)) {\n        return resolveAssumeRoleCredentials_1.resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles);\n    }\n    if (resolveStaticCredentials_1.isStaticCredsProfile(data)) {\n        return resolveStaticCredentials_1.resolveStaticCredentials(data);\n    }\n    if (resolveWebIdentityCredentials_1.isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials_1.resolveWebIdentityCredentials(data, options);\n    }\n    if (resolveSsoCredentials_1.isSsoProfile(data)) {\n        return resolveSsoCredentials_1.resolveSsoCredentials(data);\n    }\n    throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared credentials file.`);\n};\nexports.resolveProfileData = resolveProfileData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSsoCredentials = exports.isSsoProfile = void 0;\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nvar credential_provider_sso_2 = require(\"@aws-sdk/credential-provider-sso\");\nObject.defineProperty(exports, \"isSsoProfile\", { enumerable: true, get: function () { return credential_provider_sso_2.isSsoProfile; } });\nconst resolveSsoCredentials = (data) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = credential_provider_sso_1.validateSsoProfile(data);\n    return credential_provider_sso_1.fromSSO({\n        ssoStartUrl: sso_start_url,\n        ssoAccountId: sso_account_id,\n        ssoRegion: sso_region,\n        ssoRoleName: sso_role_name,\n    })();\n};\nexports.resolveSsoCredentials = resolveSsoCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStaticCredentials = exports.isStaticCredsProfile = void 0;\nconst isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nexports.isStaticCredsProfile = isStaticCredsProfile;\nconst resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\nexports.resolveStaticCredentials = resolveStaticCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveWebIdentityCredentials = exports.isWebIdentityProfile = void 0;\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nexports.isWebIdentityProfile = isWebIdentityProfile;\nconst resolveWebIdentityCredentials = async (profile, options) => credential_provider_web_identity_1.fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\nexports.resolveWebIdentityCredentials = resolveWebIdentityCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultProvider = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_ini_1 = require(\"@aws-sdk/credential-provider-ini\");\nconst credential_provider_process_1 = require(\"@aws-sdk/credential-provider-process\");\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst remoteProvider_1 = require(\"./remoteProvider\");\nconst defaultProvider = (init = {}) => {\n    const options = {\n        profile: process.env[util_credentials_1.ENV_PROFILE],\n        ...init,\n        ...(!init.loadedConfig && { loadedConfig: shared_ini_file_loader_1.loadSharedConfigFiles(init) }),\n    };\n    const providerChain = property_provider_1.chain(...(options.profile ? [] : [credential_provider_env_1.fromEnv()]), credential_provider_sso_1.fromSSO(options), credential_provider_ini_1.fromIni(options), credential_provider_process_1.fromProcess(options), credential_provider_web_identity_1.fromTokenFile(options), remoteProvider_1.remoteProvider(options), async () => {\n        throw new property_provider_1.CredentialsProviderError(\"Could not load credentials from any providers\", false);\n    });\n    return property_provider_1.memoize(providerChain, (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\n};\nexports.defaultProvider = defaultProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./defaultProvider\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.remoteProvider = exports.ENV_IMDS_DISABLED = void 0;\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nconst remoteProvider = (init) => {\n    if (process.env[credential_provider_imds_1.ENV_CMDS_RELATIVE_URI] || process.env[credential_provider_imds_1.ENV_CMDS_FULL_URI]) {\n        return credential_provider_imds_1.fromContainerMetadata(init);\n    }\n    if (process.env[exports.ENV_IMDS_DISABLED]) {\n        return async () => {\n            throw new property_provider_1.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\");\n        };\n    }\n    return credential_provider_imds_1.fromInstanceMetadata(init);\n};\nexports.remoteProvider = remoteProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromProcess = void 0;\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst resolveProcessCredentials_1 = require(\"./resolveProcessCredentials\");\nconst fromProcess = (init = {}) => async () => {\n    const profiles = await util_credentials_1.parseKnownFiles(init);\n    return resolveProcessCredentials_1.resolveProcessCredentials(util_credentials_1.getMasterProfileName(init), profiles);\n};\nexports.fromProcess = fromProcess;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValidatedProcessCredentials = void 0;\nconst getValidatedProcessCredentials = (profileName, data) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    return {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n    };\n};\nexports.getValidatedProcessCredentials = getValidatedProcessCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromProcess\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveProcessCredentials = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst child_process_1 = require(\"child_process\");\nconst util_1 = require(\"util\");\nconst getValidatedProcessCredentials_1 = require(\"./getValidatedProcessCredentials\");\nconst resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = util_1.promisify(child_process_1.exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch (_a) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials_1.getValidatedProcessCredentials(profileName, data);\n            }\n            catch (error) {\n                throw new property_provider_1.CredentialsProviderError(error.message);\n            }\n        }\n        else {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\nexports.resolveProcessCredentials = resolveProcessCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSSO = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst isSsoProfile_1 = require(\"./isSsoProfile\");\nconst resolveSSOCredentials_1 = require(\"./resolveSSOCredentials\");\nconst validateSsoProfile_1 = require(\"./validateSsoProfile\");\nconst fromSSO = (init = {}) => async () => {\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName) {\n        const profiles = await util_credentials_1.parseKnownFiles(init);\n        const profileName = util_credentials_1.getMasterProfileName(init);\n        const profile = profiles[profileName];\n        if (!isSsoProfile_1.isSsoProfile(profile)) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name } = validateSsoProfile_1.validateSsoProfile(profile);\n        return resolveSSOCredentials_1.resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new property_provider_1.CredentialsProviderError('Incomplete configuration. The fromSSO() argument hash must include \"ssoStartUrl\",' +\n            ' \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"');\n    }\n    else {\n        return resolveSSOCredentials_1.resolveSSOCredentials({ ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient });\n    }\n};\nexports.fromSSO = fromSSO;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromSSO\"), exports);\ntslib_1.__exportStar(require(\"./isSsoProfile\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\ntslib_1.__exportStar(require(\"./validateSsoProfile\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSsoProfile = void 0;\nconst isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\nexports.isSsoProfile = isSsoProfile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSSOCredentials = void 0;\nconst client_sso_1 = require(\"@aws-sdk/client-sso\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst crypto_1 = require(\"crypto\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst EXPIRE_WINDOW_MS = 15 * 60 * 1000;\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nconst { readFile } = fs_1.promises;\nconst resolveSSOCredentials = async ({ ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, }) => {\n    const hasher = crypto_1.createHash(\"sha1\");\n    const cacheName = hasher.update(ssoStartUrl).digest(\"hex\");\n    const tokenFile = path_1.join(shared_ini_file_loader_1.getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    try {\n        token = JSON.parse(await readFile(tokenFile, \"utf8\"));\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= EXPIRE_WINDOW_MS) {\n        throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = ssoClient || new client_sso_1.SSOClient({ region: ssoRegion });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new client_sso_1.GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw property_provider_1.CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new property_provider_1.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\nexports.resolveSSOCredentials = resolveSSOCredentials;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateSsoProfile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst validateSsoProfile = (profile) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new property_provider_1.CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", \"sso_region\", ` +\n            `\"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, false);\n    }\n    return profile;\n};\nexports.validateSsoProfile = validateSsoProfile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromTokenFile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nconst fromTokenFile = (init = {}) => async () => {\n    return resolveTokenFile(init);\n};\nexports.fromTokenFile = fromTokenFile;\nconst resolveTokenFile = (init) => {\n    var _a, _b, _c;\n    const webIdentityTokenFile = (_a = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _a !== void 0 ? _a : process.env[ENV_TOKEN_FILE];\n    const roleArn = (_b = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _b !== void 0 ? _b : process.env[ENV_ROLE_ARN];\n    const roleSessionName = (_c = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _c !== void 0 ? _c : process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return fromWebToken_1.fromWebToken({\n        ...init,\n        webIdentityToken: fs_1.readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromWebToken = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new property_provider_1.CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName !== null && roleSessionName !== void 0 ? roleSessionName : `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\nexports.fromWebToken = fromWebToken;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./fromTokenFile\"), exports);\ntslib_1.__exportStar(require(\"./fromWebToken\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nclass Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.hash = secret ? crypto_1.createHmac(algorithmIdentifier, castSourceData(secret)) : crypto_1.createHash(algorithmIdentifier);\n    }\n    update(toHash, encoding) {\n        this.hash.update(castSourceData(toHash, encoding));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n}\nexports.Hash = Hash;\nfunction castSourceData(toCast, encoding) {\n    if (buffer_1.Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return util_buffer_from_1.fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return util_buffer_from_1.fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return util_buffer_from_1.fromArrayBuffer(toCast);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArrayBuffer = void 0;\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\nexports.isArrayBuffer = isArrayBuffer;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContentLengthPlugin = exports.contentLengthMiddlewareOptions = exports.contentLengthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nconst TRANSFER_ENCODING_HEADER = \"transfer-encoding\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                    request.headers = {\n                        ...request.headers,\n                        [TRANSFER_ENCODING_HEADER]: \"chunked\",\n                    };\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexports.contentLengthMiddleware = contentLengthMiddleware;\nexports.contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nconst getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), exports.contentLengthMiddlewareOptions);\n    },\n});\nexports.getContentLengthPlugin = getContentLengthPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostHeaderPlugin = exports.hostHeaderMiddlewareOptions = exports.hostHeaderMiddleware = exports.resolveHostHeaderConfig = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\nexports.resolveHostHeaderConfig = resolveHostHeaderConfig;\nconst hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexports.hostHeaderMiddleware = hostHeaderMiddleware;\nexports.hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nconst getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.hostHeaderMiddleware(options), exports.hostHeaderMiddlewareOptions);\n    },\n});\nexports.getHostHeaderPlugin = getHostHeaderPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./loggerMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLoggerPlugin = exports.loggerMiddlewareOptions = exports.loggerMiddleware = void 0;\nconst loggerMiddleware = () => (next, context) => async (args) => {\n    const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n    const response = await next(args);\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexports.loggerMiddleware = loggerMiddleware;\nexports.loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nconst getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.loggerMiddleware(), exports.loggerMiddlewareOptions);\n    },\n});\nexports.getLoggerPlugin = getLoggerPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptiveRetryStrategy = void 0;\nconst config_1 = require(\"./config\");\nconst DefaultRateLimiter_1 = require(\"./DefaultRateLimiter\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass AdaptiveRetryStrategy extends StandardRetryStrategy_1.StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options !== null && options !== void 0 ? options : {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_1.DefaultRateLimiter();\n        this.mode = config_1.RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultRateLimiter = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nclass DefaultRateLimiter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = (_a = options === null || options === void 0 ? void 0 : options.beta) !== null && _a !== void 0 ? _a : 0.7;\n        this.minCapacity = (_b = options === null || options === void 0 ? void 0 : options.minCapacity) !== null && _b !== void 0 ? _b : 1;\n        this.minFillRate = (_c = options === null || options === void 0 ? void 0 : options.minFillRate) !== null && _c !== void 0 ? _c : 0.5;\n        this.scaleConstant = (_d = options === null || options === void 0 ? void 0 : options.scaleConstant) !== null && _d !== void 0 ? _d : 0.4;\n        this.smooth = (_e = options === null || options === void 0 ? void 0 : options.smooth) !== null && _e !== void 0 ? _e : 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (service_error_classification_1.isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nexports.DefaultRateLimiter = DefaultRateLimiter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardRetryStrategy = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst uuid_1 = require(\"uuid\");\nconst config_1 = require(\"./config\");\nconst constants_1 = require(\"./constants\");\nconst defaultRetryQuota_1 = require(\"./defaultRetryQuota\");\nconst delayDecider_1 = require(\"./delayDecider\");\nconst retryDecider_1 = require(\"./retryDecider\");\nclass StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        var _a, _b, _c;\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = config_1.RETRY_MODES.STANDARD;\n        this.retryDecider = (_a = options === null || options === void 0 ? void 0 : options.retryDecider) !== null && _a !== void 0 ? _a : retryDecider_1.defaultRetryDecider;\n        this.delayDecider = (_b = options === null || options === void 0 ? void 0 : options.delayDecider) !== null && _b !== void 0 ? _b : delayDecider_1.defaultDelayDecider;\n        this.retryQuota = (_c = options === null || options === void 0 ? void 0 : options.retryQuota) !== null && _c !== void 0 ? _c : defaultRetryQuota_1.getDefaultRetryQuota(constants_1.INITIAL_RETRY_TOKENS);\n    }\n    shouldRetry(error, attempts, maxAttempts) {\n        return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            maxAttempts = await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS;\n        }\n        return maxAttempts;\n    }\n    async retry(next, args, options) {\n        let retryTokenAmount;\n        let attempts = 0;\n        let totalDelay = 0;\n        const maxAttempts = await this.getMaxAttempts();\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            request.headers[constants_1.INVOCATION_ID_HEADER] = uuid_1.v4();\n        }\n        while (true) {\n            try {\n                if (protocol_http_1.HttpRequest.isInstance(request)) {\n                    request.headers[constants_1.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                if (options === null || options === void 0 ? void 0 : options.beforeRequest) {\n                    await options.beforeRequest();\n                }\n                const { response, output } = await next(args);\n                if (options === null || options === void 0 ? void 0 : options.afterRequest) {\n                    options.afterRequest(response);\n                }\n                this.retryQuota.releaseRetryTokens(retryTokenAmount);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const err = asSdkError(e);\n                attempts++;\n                if (this.shouldRetry(err, attempts, maxAttempts)) {\n                    retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n                    const delay = this.delayDecider(service_error_classification_1.isThrottlingError(err) ? constants_1.THROTTLING_RETRY_DELAY_BASE : constants_1.DEFAULT_RETRY_DELAY_BASE, attempts);\n                    totalDelay += delay;\n                    await new Promise((resolve) => setTimeout(resolve, delay));\n                    continue;\n                }\n                if (!err.$metadata) {\n                    err.$metadata = {};\n                }\n                err.$metadata.attempts = attempts;\n                err.$metadata.totalRetryDelay = totalDelay;\n                throw err;\n            }\n        }\n    }\n}\nexports.StandardRetryStrategy = StandardRetryStrategy;\nconst asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_RETRY_MODE = exports.DEFAULT_MAX_ATTEMPTS = exports.RETRY_MODES = void 0;\nvar RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES = exports.RETRY_MODES || (exports.RETRY_MODES = {}));\nexports.DEFAULT_MAX_ATTEMPTS = 3;\nexports.DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = exports.CONFIG_RETRY_MODE = exports.ENV_RETRY_MODE = exports.resolveRetryConfig = exports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = exports.CONFIG_MAX_ATTEMPTS = exports.ENV_MAX_ATTEMPTS = void 0;\nconst AdaptiveRetryStrategy_1 = require(\"./AdaptiveRetryStrategy\");\nconst config_1 = require(\"./config\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nexports.ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexports.CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[exports.ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${exports.ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[exports.CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${exports.CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: config_1.DEFAULT_MAX_ATTEMPTS,\n};\nconst resolveRetryConfig = (input) => {\n    const maxAttempts = normalizeMaxAttempts(input.maxAttempts);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (input.retryStrategy) {\n                return input.retryStrategy;\n            }\n            const retryMode = await getRetryMode(input.retryMode);\n            if (retryMode === config_1.RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy_1.AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy_1.StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexports.resolveRetryConfig = resolveRetryConfig;\nconst getRetryMode = async (retryMode) => {\n    if (typeof retryMode === \"string\") {\n        return retryMode;\n    }\n    return await retryMode();\n};\nconst normalizeMaxAttempts = (maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS) => {\n    if (typeof maxAttempts === \"number\") {\n        const promisified = Promise.resolve(maxAttempts);\n        return () => promisified;\n    }\n    return maxAttempts;\n};\nexports.ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexports.CONFIG_RETRY_MODE = \"retry_mode\";\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[exports.CONFIG_RETRY_MODE],\n    default: config_1.DEFAULT_RETRY_MODE,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REQUEST_HEADER = exports.INVOCATION_ID_HEADER = exports.NO_RETRY_INCREMENT = exports.TIMEOUT_RETRY_COST = exports.RETRY_COST = exports.INITIAL_RETRY_TOKENS = exports.THROTTLING_RETRY_DELAY_BASE = exports.MAXIMUM_RETRY_DELAY = exports.DEFAULT_RETRY_DELAY_BASE = void 0;\nexports.DEFAULT_RETRY_DELAY_BASE = 100;\nexports.MAXIMUM_RETRY_DELAY = 20 * 1000;\nexports.THROTTLING_RETRY_DELAY_BASE = 500;\nexports.INITIAL_RETRY_TOKENS = 500;\nexports.RETRY_COST = 5;\nexports.TIMEOUT_RETRY_COST = 10;\nexports.NO_RETRY_INCREMENT = 1;\nexports.INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexports.REQUEST_HEADER = \"amz-sdk-request\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRetryQuota = void 0;\nconst constants_1 = require(\"./constants\");\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\n    var _a, _b, _c;\n    const MAX_CAPACITY = initialRetryTokens;\n    const noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : constants_1.NO_RETRY_INCREMENT;\n    const retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : constants_1.RETRY_COST;\n    const timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : constants_1.TIMEOUT_RETRY_COST;\n    let availableCapacity = initialRetryTokens;\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\n    const retrieveRetryTokens = (error) => {\n        if (!hasRetryTokens(error)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (capacityReleaseAmount) => {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens,\n        retrieveRetryTokens,\n        releaseRetryTokens,\n    });\n};\nexports.getDefaultRetryQuota = getDefaultRetryQuota;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultDelayDecider = void 0;\nconst constants_1 = require(\"./constants\");\nconst defaultDelayDecider = (delayBase, attempts) => Math.floor(Math.min(constants_1.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\nexports.defaultDelayDecider = defaultDelayDecider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./AdaptiveRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./DefaultRateLimiter\"), exports);\ntslib_1.__exportStar(require(\"./StandardRetryStrategy\"), exports);\ntslib_1.__exportStar(require(\"./config\"), exports);\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./delayDecider\"), exports);\ntslib_1.__exportStar(require(\"./omitRetryHeadersMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./retryDecider\"), exports);\ntslib_1.__exportStar(require(\"./retryMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOmitRetryHeadersPlugin = exports.omitRetryHeadersMiddlewareOptions = exports.omitRetryHeadersMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst omitRetryHeadersMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (protocol_http_1.HttpRequest.isInstance(request)) {\n        delete request.headers[constants_1.INVOCATION_ID_HEADER];\n        delete request.headers[constants_1.REQUEST_HEADER];\n    }\n    return next(args);\n};\nexports.omitRetryHeadersMiddleware = omitRetryHeadersMiddleware;\nexports.omitRetryHeadersMiddlewareOptions = {\n    name: \"omitRetryHeadersMiddleware\",\n    tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n    relation: \"before\",\n    toMiddleware: \"awsAuthMiddleware\",\n    override: true,\n};\nconst getOmitRetryHeadersPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(exports.omitRetryHeadersMiddleware(), exports.omitRetryHeadersMiddlewareOptions);\n    },\n});\nexports.getOmitRetryHeadersPlugin = getOmitRetryHeadersPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRetryDecider = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst defaultRetryDecider = (error) => {\n    if (!error) {\n        return false;\n    }\n    return service_error_classification_1.isRetryableByTrait(error) || service_error_classification_1.isClockSkewError(error) || service_error_classification_1.isThrottlingError(error) || service_error_classification_1.isTransientError(error);\n};\nexports.defaultRetryDecider = defaultRetryDecider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryPlugin = exports.retryMiddlewareOptions = exports.retryMiddleware = void 0;\nconst retryMiddleware = (options) => (next, context) => async (args) => {\n    const retryStrategy = await options.retryStrategy();\n    if (retryStrategy === null || retryStrategy === void 0 ? void 0 : retryStrategy.mode)\n        context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n    return retryStrategy.retry(next, args);\n};\nexports.retryMiddleware = retryMiddleware;\nexports.retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nconst getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.retryMiddleware(options), exports.retryMiddlewareOptions);\n    },\n});\nexports.getRetryPlugin = getRetryPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStsAuthConfig = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst resolveStsAuthConfig = (input, { stsClientCtor }) => middleware_signing_1.resolveAwsAuthConfig({\n    ...input,\n    stsClientCtor,\n});\nexports.resolveStsAuthConfig = resolveStsAuthConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializerMiddleware = void 0;\nconst deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        throw Object.assign(error, { $response: response });\n    }\n};\nexports.deserializerMiddleware = deserializerMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./deserializerMiddleware\"), exports);\ntslib_1.__exportStar(require(\"./serdePlugin\"), exports);\ntslib_1.__exportStar(require(\"./serializerMiddleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSerdePlugin = exports.serializerMiddlewareOption = exports.deserializerMiddlewareOption = void 0;\nconst deserializerMiddleware_1 = require(\"./deserializerMiddleware\");\nconst serializerMiddleware_1 = require(\"./serializerMiddleware\");\nexports.deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexports.serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware_1.deserializerMiddleware(config, deserializer), exports.deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware_1.serializerMiddleware(config, serializer), exports.serializerMiddlewareOption);\n        },\n    };\n}\nexports.getSerdePlugin = getSerdePlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializerMiddleware = void 0;\nconst serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const request = await serializer(args.input, options);\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.serializerMiddleware = serializerMiddleware;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSigV4AuthConfig = exports.resolveAwsAuthConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst signature_v4_1 = require(\"@aws-sdk/signature-v4\");\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nconst resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const signerConstructor = input.signerConstructor || signature_v4_1.SignatureV4;\n            return new signerConstructor(params);\n        });\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveAwsAuthConfig = resolveAwsAuthConfig;\nconst resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new signature_v4_1.SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveSigV4AuthConfig = resolveSigV4AuthConfig;\nconst normalizeProvider = (input) => {\n    if (typeof input === \"object\") {\n        const promisified = Promise.resolve(input);\n        return () => promisified;\n    }\n    return input;\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return property_provider_1.memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./middleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin = exports.awsAuthMiddlewareOptions = exports.awsAuthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst getSkewCorrectedDate_1 = require(\"./utils/getSkewCorrectedDate\");\nconst getUpdatedSystemClockOffset_1 = require(\"./utils/getUpdatedSystemClockOffset\");\nconst awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const signer = await options.signer();\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: getSkewCorrectedDate_1.getSkewCorrectedDate(options.systemClockOffset),\n            signingRegion: context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        var _a;\n        const serverTime = (_a = error.ServerTime) !== null && _a !== void 0 ? _a : getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nexports.awsAuthMiddleware = awsAuthMiddleware;\nconst getDateHeader = (response) => { var _a, _b, _c; return protocol_http_1.HttpResponse.isInstance(response) ? (_b = (_a = response.headers) === null || _a === void 0 ? void 0 : _a.date) !== null && _b !== void 0 ? _b : (_c = response.headers) === null || _c === void 0 ? void 0 : _c.Date : undefined; };\nexports.awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nconst getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(exports.awsAuthMiddleware(options), exports.awsAuthMiddlewareOptions);\n    },\n});\nexports.getAwsAuthPlugin = getAwsAuthPlugin;\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSkewCorrectedDate = void 0;\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\nexports.getSkewCorrectedDate = getSkewCorrectedDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUpdatedSystemClockOffset = void 0;\nconst isClockSkewed_1 = require(\"./isClockSkewed\");\nconst getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed_1.isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\nexports.getUpdatedSystemClockOffset = getUpdatedSystemClockOffset;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isClockSkewed = void 0;\nconst getSkewCorrectedDate_1 = require(\"./getSkewCorrectedDate\");\nconst isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate_1.getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\nexports.isClockSkewed = isClockSkewed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructStack = void 0;\nconst constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = () => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain.map((entry) => entry.middleware);\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(exports.constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(exports.constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList().reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nexports.constructStack = constructStack;\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./MiddlewareStack\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveUserAgentConfig = void 0;\nfunction resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\nexports.resolveUserAgentConfig = resolveUserAgentConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UA_ESCAPE_REGEX = exports.SPACE = exports.X_AMZ_USER_AGENT = exports.USER_AGENT = void 0;\nexports.USER_AGENT = \"user-agent\";\nexports.X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexports.SPACE = \" \";\nexports.UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configurations\"), exports);\ntslib_1.__exportStar(require(\"./user-agent-middleware\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUserAgentPlugin = exports.getUserAgentMiddlewareOptions = exports.userAgentMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst userAgentMiddleware = (options) => (next, context) => async (args) => {\n    var _a, _b;\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n    const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(constants_1.SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(constants_1.SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[constants_1.X_AMZ_USER_AGENT] = headers[constants_1.X_AMZ_USER_AGENT]\n                ? `${headers[constants_1.USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[constants_1.USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[constants_1.X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.userAgentMiddleware = userAgentMiddleware;\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item === null || item === void 0 ? void 0 : item.replace(constants_1.UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexports.getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nconst getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(exports.userAgentMiddleware(config), exports.getUserAgentMiddlewareOptions);\n    },\n});\nexports.getUserAgentPlugin = getUserAgentPlugin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromEnv_1 = require(\"./fromEnv\");\nconst fromSharedConfigFiles_1 = require(\"./fromSharedConfigFiles\");\nconst fromStatic_1 = require(\"./fromStatic\");\nconst loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => property_provider_1.memoize(property_provider_1.chain(fromEnv_1.fromEnv(environmentVariableSelector), fromSharedConfigFiles_1.fromSharedConfigFiles(configFileSelector, configuration), fromStatic_1.fromStatic(defaultValue)));\nexports.loadConfig = loadConfig;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\nexports.fromEnv = fromEnv;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSharedConfigFiles = exports.ENV_PROFILE = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst DEFAULT_PROFILE = \"default\";\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nconst fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const { loadedConfig = shared_ini_file_loader_1.loadSharedConfigFiles(init), profile = process.env[exports.ENV_PROFILE] || DEFAULT_PROFILE } = init;\n    const { configFile, credentialsFile } = await loadedConfig;\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message ||\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\nexports.fromSharedConfigFiles = fromSharedConfigFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst isFunction = (func) => typeof func === \"function\";\nconst fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : property_provider_1.fromStatic(defaultValue);\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./configLoader\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODEJS_TIMEOUT_ERROR_CODES = void 0;\nexports.NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransformedHeaders = void 0;\nconst getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexports.getTransformedHeaders = getTransformedHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./node-http-handler\"), exports);\ntslib_1.__exportStar(require(\"./node-http2-handler\"), exports);\ntslib_1.__exportStar(require(\"./stream-collector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttpHandler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http_1 = require(\"http\");\nconst https_1 = require(\"https\");\nconst constants_1 = require(\"./constants\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst set_connection_timeout_1 = require(\"./set-connection-timeout\");\nconst set_socket_timeout_1 = require(\"./set-socket-timeout\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttpHandler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        if (typeof options === \"function\") {\n            this.configProvider = async () => {\n                return this.resolveDefaultConfig(await options());\n            };\n        }\n        else {\n            this.config = this.resolveDefaultConfig(options);\n        }\n    }\n    resolveDefaultConfig(options) {\n        const { connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            socketTimeout,\n            httpAgent: httpAgent || new http_1.Agent({ keepAlive, maxSockets }),\n            httpsAgent: httpsAgent || new https_1.Agent({ keepAlive, maxSockets }),\n        };\n    }\n    destroy() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.httpAgent) === null || _b === void 0 ? void 0 : _b.destroy();\n        (_d = (_c = this.config) === null || _c === void 0 ? void 0 : _c.httpsAgent) === null || _d === void 0 ? void 0 : _d.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config && this.configProvider) {\n            this.config = await this.configProvider();\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const queryString = querystring_builder_1.buildQueryString(request.query || {});\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? `${request.path}?${queryString}` : request.path,\n                port: request.port,\n                agent: isSSL ? this.config.httpsAgent : this.config.httpAgent,\n            };\n            const requestFunc = isSSL ? https_1.request : http_1.request;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: get_transformed_headers_1.getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (constants_1.NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            set_connection_timeout_1.setConnectionTimeout(req, reject, this.config.connectionTimeout);\n            set_socket_timeout_1.setSocketTimeout(req, reject, this.config.socketTimeout);\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            write_request_body_1.writeRequestBody(req, request);\n        });\n    }\n}\nexports.NodeHttpHandler = NodeHttpHandler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttp2Handler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http2_1 = require(\"http2\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttp2Handler {\n    constructor({ requestTimeout, sessionTimeout, disableConcurrentStreams } = {}) {\n        this.metadata = { handlerProtocol: \"h2\" };\n        this.requestTimeout = requestTimeout;\n        this.sessionTimeout = sessionTimeout;\n        this.disableConcurrentStreams = disableConcurrentStreams;\n        this.sessionCache = new Map();\n    }\n    destroy() {\n        for (const sessions of this.sessionCache.values()) {\n            sessions.forEach((session) => this.destroySession(session));\n        }\n        this.sessionCache.clear();\n    }\n    handle(request, { abortSignal } = {}) {\n        return new Promise((resolve, rejectOriginal) => {\n            let fulfilled = false;\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                fulfilled = true;\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                rejectOriginal(abortError);\n                return;\n            }\n            const { hostname, method, port, protocol, path, query } = request;\n            const authority = `${protocol}//${hostname}${port ? `:${port}` : \"\"}`;\n            const session = this.getSession(authority, this.disableConcurrentStreams || false);\n            const reject = (err) => {\n                if (this.disableConcurrentStreams) {\n                    this.destroySession(session);\n                }\n                fulfilled = true;\n                rejectOriginal(err);\n            };\n            const queryString = querystring_builder_1.buildQueryString(query || {});\n            const req = session.request({\n                ...request.headers,\n                [http2_1.constants.HTTP2_HEADER_PATH]: queryString ? `${path}?${queryString}` : path,\n                [http2_1.constants.HTTP2_HEADER_METHOD]: method,\n            });\n            req.on(\"response\", (headers) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: headers[\":status\"] || -1,\n                    headers: get_transformed_headers_1.getTransformedHeaders(headers),\n                    body: req,\n                });\n                fulfilled = true;\n                resolve({ response: httpResponse });\n                if (this.disableConcurrentStreams) {\n                    session.close();\n                    this.deleteSessionFromCache(authority, session);\n                }\n            });\n            const requestTimeout = this.requestTimeout;\n            if (requestTimeout) {\n                req.setTimeout(requestTimeout, () => {\n                    req.close();\n                    const timeoutError = new Error(`Stream timed out because of no activity for ${requestTimeout} ms`);\n                    timeoutError.name = \"TimeoutError\";\n                    reject(timeoutError);\n                });\n            }\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.close();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            req.on(\"frameError\", (type, code, id) => {\n                reject(new Error(`Frame type id ${type} in stream id ${id} has failed with code ${code}.`));\n            });\n            req.on(\"error\", reject);\n            req.on(\"aborted\", () => {\n                reject(new Error(`HTTP/2 stream is abnormally aborted in mid-communication with result code ${req.rstCode}.`));\n            });\n            req.on(\"close\", () => {\n                if (this.disableConcurrentStreams) {\n                    session.destroy();\n                }\n                if (!fulfilled) {\n                    reject(new Error(\"Unexpected error: http2 request did not get a response\"));\n                }\n            });\n            write_request_body_1.writeRequestBody(req, request);\n        });\n    }\n    getSession(authority, disableConcurrentStreams) {\n        const sessionCache = this.sessionCache;\n        const existingSessions = sessionCache.get(authority) || [];\n        if (existingSessions.length > 0 && !disableConcurrentStreams)\n            return existingSessions[0];\n        const newSession = http2_1.connect(authority);\n        const destroySessionCb = () => {\n            this.destroySession(newSession);\n            this.deleteSessionFromCache(authority, newSession);\n        };\n        newSession.on(\"goaway\", destroySessionCb);\n        newSession.on(\"error\", destroySessionCb);\n        newSession.on(\"frameError\", destroySessionCb);\n        const sessionTimeout = this.sessionTimeout;\n        if (sessionTimeout) {\n            newSession.setTimeout(sessionTimeout, destroySessionCb);\n        }\n        existingSessions.push(newSession);\n        sessionCache.set(authority, existingSessions);\n        return newSession;\n    }\n    destroySession(session) {\n        if (!session.destroyed) {\n            session.destroy();\n        }\n    }\n    deleteSessionFromCache(authority, session) {\n        const existingSessions = this.sessionCache.get(authority) || [];\n        if (!existingSessions.includes(session)) {\n            return;\n        }\n        this.sessionCache.set(authority, existingSessions.filter((s) => s !== session));\n    }\n}\nexports.NodeHttp2Handler = NodeHttp2Handler;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setConnectionTimeout = void 0;\nconst setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            const timeoutId = setTimeout(() => {\n                request.destroy();\n                reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n    });\n};\nexports.setConnectionTimeout = setConnectionTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSocketTimeout = void 0;\nconst setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\nexports.setSocketTimeout = setSocketTimeout;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\nconst stream_1 = require(\"stream\");\nclass Collector extends stream_1.Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\nexports.Collector = Collector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.streamCollector = void 0;\nconst collector_1 = require(\"./collector\");\nconst streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new collector_1.Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\nexports.streamCollector = streamCollector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeRequestBody = void 0;\nconst stream_1 = require(\"stream\");\nfunction writeRequestBody(httpRequest, request) {\n    const expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", () => {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nexports.writeRequestBody = writeRequestBody;\nfunction writeBody(httpRequest, body) {\n    if (body instanceof stream_1.Readable) {\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CredentialsProviderError = exports.ProviderError = void 0;\nclass ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n    }\n    static from(error, tryNextLink = true) {\n        Object.defineProperty(error, \"tryNextLink\", {\n            value: tryNextLink,\n            configurable: false,\n            enumerable: false,\n            writable: false,\n        });\n        return error;\n    }\n}\nexports.ProviderError = ProviderError;\nclass CredentialsProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n    }\n    static from(error, tryNextLink = true) {\n        Object.defineProperty(error, \"tryNextLink\", {\n            value: tryNextLink,\n            configurable: false,\n            enumerable: false,\n            writable: false,\n        });\n        return error;\n    }\n}\nexports.CredentialsProviderError = CredentialsProviderError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chain = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\nfunction chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError_1.ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err === null || err === void 0 ? void 0 : err.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\nexports.chain = chain;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst fromStatic = (staticValue) => () => Promise.resolve(staticValue);\nexports.fromStatic = fromStatic;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./ProviderError\"), exports);\ntslib_1.__exportStar(require(\"./chain\"), exports);\ntslib_1.__exportStar(require(\"./fromStatic\"), exports);\ntslib_1.__exportStar(require(\"./memoize\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoize = void 0;\nconst memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async () => {\n            if (!hasResult) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    let isConstant = false;\n    return async () => {\n        if (!hasResult) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\nexports.memoize = memoize;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpRequest = void 0;\nclass HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.substr(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nexports.HttpRequest = HttpRequest;\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpResponse = void 0;\nclass HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\nexports.HttpResponse = HttpResponse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./httpHandler\"), exports);\ntslib_1.__exportStar(require(\"./httpRequest\"), exports);\ntslib_1.__exportStar(require(\"./httpResponse\"), exports);\ntslib_1.__exportStar(require(\"./isValidHostname\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidHostname = void 0;\nfunction isValidHostname(hostname) {\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\nexports.isValidHostname = isValidHostname;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildQueryString = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = util_uri_escape_1.escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${util_uri_escape_1.escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${util_uri_escape_1.escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\nexports.buildQueryString = buildQueryString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseQueryString = void 0;\nfunction parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\nexports.parseQueryString = parseQueryString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TRANSIENT_ERROR_STATUS_CODES = exports.TRANSIENT_ERROR_CODES = exports.THROTTLING_ERROR_CODES = exports.CLOCK_SKEW_ERROR_CODES = void 0;\nexports.CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexports.THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexports.TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexports.TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTransientError = exports.isThrottlingError = exports.isClockSkewError = exports.isRetryableByTrait = void 0;\nconst constants_1 = require(\"./constants\");\nconst isRetryableByTrait = (error) => error.$retryable !== undefined;\nexports.isRetryableByTrait = isRetryableByTrait;\nconst isClockSkewError = (error) => constants_1.CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexports.isClockSkewError = isClockSkewError;\nconst isThrottlingError = (error) => {\n    var _a, _b;\n    return ((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 429 ||\n        constants_1.THROTTLING_ERROR_CODES.includes(error.name) ||\n        ((_b = error.$retryable) === null || _b === void 0 ? void 0 : _b.throttling) == true;\n};\nexports.isThrottlingError = isThrottlingError;\nconst isTransientError = (error) => {\n    var _a;\n    return constants_1.TRANSIENT_ERROR_CODES.includes(error.name) ||\n        constants_1.TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) || 0);\n};\nexports.isTransientError = isTransientError;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHomeDir = void 0;\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nconst getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${path_1.sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return os_1.homedir();\n};\nexports.getHomeDir = getHomeDir;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./getHomeDir\"), exports);\ntslib_1.__exportStar(require(\"./loadSharedConfigFiles\"), exports);\ntslib_1.__exportStar(require(\"./types\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadSharedConfigFiles = exports.ENV_CONFIG_PATH = exports.ENV_CREDENTIALS_PATH = void 0;\nconst path_1 = require(\"path\");\nconst getHomeDir_1 = require(\"./getHomeDir\");\nconst normalizeConfigFile_1 = require(\"./normalizeConfigFile\");\nconst parseIni_1 = require(\"./parseIni\");\nconst slurpFile_1 = require(\"./slurpFile\");\nexports.ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexports.ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nconst swallowError = () => ({});\nconst loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = process.env[exports.ENV_CREDENTIALS_PATH] || path_1.join(getHomeDir_1.getHomeDir(), \".aws\", \"credentials\"), configFilepath = process.env[exports.ENV_CONFIG_PATH] || path_1.join(getHomeDir_1.getHomeDir(), \".aws\", \"config\"), } = init;\n    const parsedFiles = await Promise.all([\n        slurpFile_1.slurpFile(configFilepath).then(parseIni_1.parseIni).then(normalizeConfigFile_1.normalizeConfigFile).catch(swallowError),\n        slurpFile_1.slurpFile(filepath).then(parseIni_1.parseIni).catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\nexports.loadSharedConfigFiles = loadSharedConfigFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeConfigFile = void 0;\nconst profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nconst normalizeConfigFile = (data) => {\n    const map = {};\n    for (const key of Object.keys(data)) {\n        let matches;\n        if (key === \"default\") {\n            map.default = data.default;\n        }\n        else if ((matches = profileKeyRegex.exec(key))) {\n            const [_1, _2, normalizedKey] = matches;\n            if (normalizedKey) {\n                map[normalizedKey] = data[key];\n            }\n        }\n    }\n    return map;\n};\nexports.normalizeConfigFile = normalizeConfigFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseIni = void 0;\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nconst parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0];\n        const section = line.match(/^\\s*\\[([^\\[\\]]+)]\\s*$/);\n        if (section) {\n            currentSection = section[1];\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const item = line.match(/^\\s*(.+?)\\s*=\\s*(.+?)\\s*$/);\n            if (item) {\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][item[1]] = item[2];\n            }\n        }\n    }\n    return map;\n};\nexports.parseIni = parseIni;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.slurpFile = void 0;\nconst fs_1 = require(\"fs\");\nconst { readFile } = fs_1.promises;\nconst fileStatusHash = {};\nconst slurpFile = (path) => new Promise((resolve, reject) => {\n    if (!fileStatusHash[path]) {\n        fileStatusHash[path] = { isReading: true, contents: \"\", requestQueue: [] };\n        fileStatusHash[path].requestQueue.push({ resolve, reject });\n        readFile(path, \"utf8\")\n            .then((data) => {\n            fileStatusHash[path].isReading = false;\n            fileStatusHash[path].contents = data;\n            const { requestQueue } = fileStatusHash[path];\n            while (requestQueue.length) {\n                const { resolve } = requestQueue.pop();\n                resolve(data);\n            }\n        })\n            .catch((err) => {\n            fileStatusHash[path].isReading = false;\n            const { requestQueue } = fileStatusHash[path];\n            while (requestQueue.length) {\n                const { reject } = requestQueue.pop();\n                reject(err);\n            }\n        });\n    }\n    else if (fileStatusHash[path].isReading) {\n        fileStatusHash[path].requestQueue.push({ resolve, reject });\n    }\n    else {\n        resolve(fileStatusHash[path].contents);\n    }\n});\nexports.slurpFile = slurpFile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureV4 = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst credentialDerivation_1 = require(\"./credentialDerivation\");\nconst getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nconst getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nconst getPayloadHash_1 = require(\"./getPayloadHash\");\nconst headerUtil_1 = require(\"./headerUtil\");\nconst moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nconst normalizeProvider_1 = require(\"./normalizeProvider\");\nconst prepareRequest_1 = require(\"./prepareRequest\");\nconst utilDate_1 = require(\"./utilDate\");\nclass SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider_1.normalizeRegionProvider(region);\n        this.credentialProvider = normalizeProvider_1.normalizeCredentialsProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > constants_1.MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const request = moveHeadersToQuery_1.moveHeadersToQuery(prepareRequest_1.prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[constants_1.TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[constants_1.ALGORITHM_QUERY_PARAM] = constants_1.ALGORITHM_IDENTIFIER;\n        request.query[constants_1.CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[constants_1.AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[constants_1.EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders_1.getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[constants_1.SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[constants_1.SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash_1.getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const hashedPayload = await getPayloadHash_1.getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = util_hex_encoding_1.toHex(await hash.digest());\n        const stringToSign = [\n            constants_1.EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(stringToSign);\n        return util_hex_encoding_1.toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const request = prepareRequest_1.prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = credentialDerivation_1.createScope(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        request.headers[constants_1.AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[constants_1.TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash_1.getPayloadHash(request, this.sha256);\n        if (!headerUtil_1.hasHeader(constants_1.SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[constants_1.SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders_1.getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[constants_1.AUTH_HEADER] =\n            `${constants_1.ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery_1.getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(canonicalRequest);\n        const hashedRequest = await hash.digest();\n        return `${constants_1.ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${util_hex_encoding_1.toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if ((pathSegment === null || pathSegment === void 0 ? void 0 : pathSegment.length) === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${(path === null || path === void 0 ? void 0 : path.startsWith(\"/\")) ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && (path === null || path === void 0 ? void 0 : path.endsWith(\"/\")) ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(stringToSign);\n        return util_hex_encoding_1.toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return credentialDerivation_1.getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\nexports.SignatureV4 = SignatureV4;\nconst formatDate = (now) => {\n    const longDate = utilDate_1.iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.substr(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneQuery = exports.cloneRequest = void 0;\nconst cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? exports.cloneQuery(query) : undefined,\n});\nexports.cloneRequest = cloneRequest;\nconst cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\nexports.cloneQuery = cloneQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PRESIGNED_TTL = exports.KEY_TYPE_IDENTIFIER = exports.MAX_CACHE_SIZE = exports.UNSIGNED_PAYLOAD = exports.EVENT_ALGORITHM_IDENTIFIER = exports.ALGORITHM_IDENTIFIER_V4A = exports.ALGORITHM_IDENTIFIER = exports.UNSIGNABLE_PATTERNS = exports.SEC_HEADER_PATTERN = exports.PROXY_HEADER_PATTERN = exports.ALWAYS_UNSIGNABLE_HEADERS = exports.HOST_HEADER = exports.TOKEN_HEADER = exports.SHA256_HEADER = exports.SIGNATURE_HEADER = exports.GENERATED_HEADERS = exports.DATE_HEADER = exports.AMZ_DATE_HEADER = exports.AUTH_HEADER = exports.REGION_SET_PARAM = exports.TOKEN_QUERY_PARAM = exports.SIGNATURE_QUERY_PARAM = exports.EXPIRES_QUERY_PARAM = exports.SIGNED_HEADERS_QUERY_PARAM = exports.AMZ_DATE_QUERY_PARAM = exports.CREDENTIAL_QUERY_PARAM = exports.ALGORITHM_QUERY_PARAM = void 0;\nexports.ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexports.CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexports.AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexports.SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexports.EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexports.SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexports.TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexports.REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexports.AUTH_HEADER = \"authorization\";\nexports.AMZ_DATE_HEADER = exports.AMZ_DATE_QUERY_PARAM.toLowerCase();\nexports.DATE_HEADER = \"date\";\nexports.GENERATED_HEADERS = [exports.AUTH_HEADER, exports.AMZ_DATE_HEADER, exports.DATE_HEADER];\nexports.SIGNATURE_HEADER = exports.SIGNATURE_QUERY_PARAM.toLowerCase();\nexports.SHA256_HEADER = \"x-amz-content-sha256\";\nexports.TOKEN_HEADER = exports.TOKEN_QUERY_PARAM.toLowerCase();\nexports.HOST_HEADER = \"host\";\nexports.ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexports.PROXY_HEADER_PATTERN = /^proxy-/;\nexports.SEC_HEADER_PATTERN = /^sec-/;\nexports.UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexports.ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexports.ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexports.EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexports.UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexports.MAX_CACHE_SIZE = 50;\nexports.KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexports.MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearCredentialCache = exports.getSigningKey = exports.createScope = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst signingKeyCache = {};\nconst cacheQueue = [];\nconst createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${constants_1.KEY_TYPE_IDENTIFIER}`;\nexports.createScope = createScope;\nconst getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${util_hex_encoding_1.toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > constants_1.MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, constants_1.KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexports.getSigningKey = getSigningKey;\nconst clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nexports.clearCredentialCache = clearCredentialCache;\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(data);\n    return hash.digest();\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalHeaders = void 0;\nconst constants_1 = require(\"./constants\");\nconst getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS ||\n            (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) ||\n            constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\nexports.getCanonicalHeaders = getCanonicalHeaders;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalQuery = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nconst constants_1 = require(\"./constants\");\nconst getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === constants_1.SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${util_uri_escape_1.escapeUri(key)}=${util_uri_escape_1.escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${util_uri_escape_1.escapeUri(key)}=${util_uri_escape_1.escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\nexports.getCanonicalQuery = getCanonicalQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPayloadHash = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === constants_1.SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || is_array_buffer_1.isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(body);\n        return util_hex_encoding_1.toHex(await hashCtor.digest());\n    }\n    return constants_1.UNSIGNED_PAYLOAD;\n};\nexports.getPayloadHash = getPayloadHash;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deleteHeader = exports.getHeaderValue = exports.hasHeader = void 0;\nconst hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexports.hasHeader = hasHeader;\nconst getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexports.getHeaderValue = getHeaderValue;\nconst deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\nexports.deleteHeader = deleteHeader;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeRegionProvider = exports.normalizeCredentialsProvider = exports.prepareRequest = exports.moveHeadersToQuery = exports.getPayloadHash = exports.getCanonicalQuery = exports.getCanonicalHeaders = void 0;\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./SignatureV4\"), exports);\nvar getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nObject.defineProperty(exports, \"getCanonicalHeaders\", { enumerable: true, get: function () { return getCanonicalHeaders_1.getCanonicalHeaders; } });\nvar getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nObject.defineProperty(exports, \"getCanonicalQuery\", { enumerable: true, get: function () { return getCanonicalQuery_1.getCanonicalQuery; } });\nvar getPayloadHash_1 = require(\"./getPayloadHash\");\nObject.defineProperty(exports, \"getPayloadHash\", { enumerable: true, get: function () { return getPayloadHash_1.getPayloadHash; } });\nvar moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nObject.defineProperty(exports, \"moveHeadersToQuery\", { enumerable: true, get: function () { return moveHeadersToQuery_1.moveHeadersToQuery; } });\nvar prepareRequest_1 = require(\"./prepareRequest\");\nObject.defineProperty(exports, \"prepareRequest\", { enumerable: true, get: function () { return prepareRequest_1.prepareRequest; } });\nvar normalizeProvider_1 = require(\"./normalizeProvider\");\nObject.defineProperty(exports, \"normalizeCredentialsProvider\", { enumerable: true, get: function () { return normalizeProvider_1.normalizeCredentialsProvider; } });\nObject.defineProperty(exports, \"normalizeRegionProvider\", { enumerable: true, get: function () { return normalizeProvider_1.normalizeRegionProvider; } });\ntslib_1.__exportStar(require(\"./credentialDerivation\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.moveHeadersToQuery = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst moveHeadersToQuery = (request, options = {}) => {\n    var _a;\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest_1.cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.substr(0, 6) === \"x-amz-\" && !((_a = options.unhoistableHeaders) === null || _a === void 0 ? void 0 : _a.has(lname))) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\nexports.moveHeadersToQuery = moveHeadersToQuery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeCredentialsProvider = exports.normalizeRegionProvider = void 0;\nconst normalizeRegionProvider = (region) => {\n    if (typeof region === \"string\") {\n        const promisified = Promise.resolve(region);\n        return () => promisified;\n    }\n    else {\n        return region;\n    }\n};\nexports.normalizeRegionProvider = normalizeRegionProvider;\nconst normalizeCredentialsProvider = (credentials) => {\n    if (typeof credentials === \"object\") {\n        const promisified = Promise.resolve(credentials);\n        return () => promisified;\n    }\n    else {\n        return credentials;\n    }\n};\nexports.normalizeCredentialsProvider = normalizeCredentialsProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareRequest = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst constants_1 = require(\"./constants\");\nconst prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest_1.cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (constants_1.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\nexports.prepareRequest = prepareRequest;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDate = exports.iso8601 = void 0;\nconst iso8601 = (time) => exports.toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexports.iso8601 = iso8601;\nconst toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\nexports.toDate = toDate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Client {\n    constructor(config) {\n        this.middlewareStack = middleware_stack_1.constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\nexports.Client = Client;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Command = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Command {\n    constructor() {\n        this.middlewareStack = middleware_stack_1.constructStack();\n    }\n}\nexports.Command = Command;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SENSITIVE_STRING = void 0;\nexports.SENSITIVE_STRING = \"***SensitiveInformation***\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseEpochTimestamp = exports.parseRfc7231DateTime = exports.parseRfc3339DateTime = exports.dateToUtcString = void 0;\nconst parse_utils_1 = require(\"./parse-utils\");\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nexports.dateToUtcString = dateToUtcString;\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nconst parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = parse_utils_1.strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nexports.parseRfc3339DateTime = parseRfc3339DateTime;\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nconst parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(parse_utils_1.strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(parse_utils_1.strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexports.parseRfc7231DateTime = parseRfc7231DateTime;\nconst parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = parse_utils_1.strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nexports.parseEpochTimestamp = parseEpochTimestamp;\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + parse_utils_1.strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = parse_utils_1.strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return parse_utils_1.strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfigsForDefaultMode = void 0;\nconst loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\nexports.loadConfigsForDefaultMode = loadConfigsForDefaultMode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitWarningIfUnsupportedVersion = void 0;\nlet warningEmitted = false;\nconst emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 12) {\n        warningEmitted = true;\n        process.emitWarning(`The AWS SDK for JavaScript (v3) will\\n` +\n            `no longer support Node.js ${version} as of January 1, 2022.\\n` +\n            `To continue receiving updates to AWS services, bug fixes, and security\\n` +\n            `updates please upgrade to Node.js 12.x or later.\\n\\n` +\n            `More information can be found at: https://a.co/1l6FLnu`, `NodeDeprecationWarning`);\n    }\n};\nexports.emitWarningIfUnsupportedVersion = emitWarningIfUnsupportedVersion;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateServiceException = exports.ServiceException = void 0;\nclass ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexports.ServiceException = ServiceException;\nconst decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\nexports.decorateServiceException = decorateServiceException;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendedEncodeURIComponent = void 0;\nfunction extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nexports.extendedEncodeURIComponent = extendedEncodeURIComponent;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArrayIfSingleItem = void 0;\nconst getArrayIfSingleItem = (mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\nexports.getArrayIfSingleItem = getArrayIfSingleItem;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValueFromTextNode = void 0;\nconst getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = exports.getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\nexports.getValueFromTextNode = getValueFromTextNode;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./client\"), exports);\ntslib_1.__exportStar(require(\"./command\"), exports);\ntslib_1.__exportStar(require(\"./constants\"), exports);\ntslib_1.__exportStar(require(\"./date-utils\"), exports);\ntslib_1.__exportStar(require(\"./defaults-mode\"), exports);\ntslib_1.__exportStar(require(\"./emitWarningIfUnsupportedVersion\"), exports);\ntslib_1.__exportStar(require(\"./exceptions\"), exports);\ntslib_1.__exportStar(require(\"./extended-encode-uri-component\"), exports);\ntslib_1.__exportStar(require(\"./get-array-if-single-item\"), exports);\ntslib_1.__exportStar(require(\"./get-value-from-text-node\"), exports);\ntslib_1.__exportStar(require(\"./lazy-json\"), exports);\ntslib_1.__exportStar(require(\"./parse-utils\"), exports);\ntslib_1.__exportStar(require(\"./ser-utils\"), exports);\ntslib_1.__exportStar(require(\"./split-every\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LazyJsonString = exports.StringWrapper = void 0;\nconst StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nexports.StringWrapper = StringWrapper;\nexports.StringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: exports.StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(exports.StringWrapper, String);\nclass LazyJsonString extends exports.StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\nexports.LazyJsonString = LazyJsonString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.strictParseByte = exports.strictParseShort = exports.strictParseInt32 = exports.strictParseInt = exports.strictParseLong = exports.limitedParseFloat32 = exports.limitedParseFloat = exports.handleFloat = exports.limitedParseDouble = exports.strictParseFloat32 = exports.strictParseFloat = exports.strictParseDouble = exports.expectUnion = exports.expectString = exports.expectObject = exports.expectNonNull = exports.expectByte = exports.expectShort = exports.expectInt32 = exports.expectInt = exports.expectLong = exports.expectFloat32 = exports.expectNumber = exports.expectBoolean = exports.parseBoolean = void 0;\nconst parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexports.parseBoolean = parseBoolean;\nconst expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}`);\n};\nexports.expectBoolean = expectBoolean;\nconst expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}`);\n};\nexports.expectNumber = expectNumber;\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nconst expectFloat32 = (value) => {\n    const expected = exports.expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexports.expectFloat32 = expectFloat32;\nconst expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}`);\n};\nexports.expectLong = expectLong;\nexports.expectInt = exports.expectLong;\nconst expectInt32 = (value) => expectSizedInt(value, 32);\nexports.expectInt32 = expectInt32;\nconst expectShort = (value) => expectSizedInt(value, 16);\nexports.expectShort = expectShort;\nconst expectByte = (value) => expectSizedInt(value, 8);\nexports.expectByte = expectByte;\nconst expectSizedInt = (value, size) => {\n    const expected = exports.expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nconst expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexports.expectNonNull = expectNonNull;\nconst expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected object, got ${typeof value}`);\n};\nexports.expectObject = expectObject;\nconst expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw new TypeError(`Expected string, got ${typeof value}`);\n};\nexports.expectString = expectString;\nconst expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = exports.expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([_, v]) => v !== null && v !== undefined)\n        .map(([k, _]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexports.expectUnion = expectUnion;\nconst strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return exports.expectNumber(parseNumber(value));\n    }\n    return exports.expectNumber(value);\n};\nexports.strictParseDouble = strictParseDouble;\nexports.strictParseFloat = exports.strictParseDouble;\nconst strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return exports.expectFloat32(parseNumber(value));\n    }\n    return exports.expectFloat32(value);\n};\nexports.strictParseFloat32 = strictParseFloat32;\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nconst limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return exports.expectNumber(value);\n};\nexports.limitedParseDouble = limitedParseDouble;\nexports.handleFloat = exports.limitedParseDouble;\nexports.limitedParseFloat = exports.limitedParseDouble;\nconst limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return exports.expectFloat32(value);\n};\nexports.limitedParseFloat32 = limitedParseFloat32;\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nconst strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return exports.expectLong(parseNumber(value));\n    }\n    return exports.expectLong(value);\n};\nexports.strictParseLong = strictParseLong;\nexports.strictParseInt = exports.strictParseLong;\nconst strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return exports.expectInt32(parseNumber(value));\n    }\n    return exports.expectInt32(value);\n};\nexports.strictParseInt32 = strictParseInt32;\nconst strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return exports.expectShort(parseNumber(value));\n    }\n    return exports.expectShort(value);\n};\nexports.strictParseShort = strictParseShort;\nconst strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return exports.expectByte(parseNumber(value));\n    }\n    return exports.expectByte(value);\n};\nexports.strictParseByte = strictParseByte;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeFloat = void 0;\nconst serializeFloat = (value) => {\n    if (value !== value) {\n        return \"NaN\";\n    }\n    switch (value) {\n        case Infinity:\n            return \"Infinity\";\n        case -Infinity:\n            return \"-Infinity\";\n        default:\n            return value;\n    }\n};\nexports.serializeFloat = serializeFloat;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitEvery = void 0;\nfunction splitEvery(value, delimiter, numDelimiters) {\n    if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n        throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n    }\n    const segments = value.split(delimiter);\n    if (numDelimiters === 1) {\n        return segments;\n    }\n    const compoundSegments = [];\n    let currentSegment = \"\";\n    for (let i = 0; i < segments.length; i++) {\n        if (currentSegment === \"\") {\n            currentSegment = segments[i];\n        }\n        else {\n            currentSegment += delimiter + segments[i];\n        }\n        if ((i + 1) % numDelimiters === 0) {\n            compoundSegments.push(currentSegment);\n            currentSegment = \"\";\n        }\n    }\n    if (currentSegment !== \"\") {\n        compoundSegments.push(currentSegment);\n    }\n    return compoundSegments;\n}\nexports.splitEvery = splitEvery;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUrl = void 0;\nconst querystring_parser_1 = require(\"@aws-sdk/querystring-parser\");\nconst parseUrl = (url) => {\n    const { hostname, pathname, port, protocol, search } = new URL(url);\n    let query;\n    if (search) {\n        query = querystring_parser_1.parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\nexports.parseUrl = parseUrl;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = exports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nfunction fromBase64(input) {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = util_buffer_from_1.fromString(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n}\nexports.fromBase64 = fromBase64;\nfunction toBase64(input) {\n    return util_buffer_from_1.fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n}\nexports.toBase64 = toBase64;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateBodyLength = void 0;\nconst fs_1 = require(\"fs\");\nconst calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n        return fs_1.lstatSync(body.path).size;\n    }\n    else if (typeof body.fd === \"number\") {\n        return fs_1.fstatSync(body.fd).size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\nexports.calculateBodyLength = calculateBodyLength;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./calculateBodyLength\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromString = exports.fromArrayBuffer = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst buffer_1 = require(\"buffer\");\nconst fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!is_array_buffer_1.isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return buffer_1.Buffer.from(input, offset, length);\n};\nexports.fromArrayBuffer = fromArrayBuffer;\nconst fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? buffer_1.Buffer.from(input, encoding) : buffer_1.Buffer.from(input);\n};\nexports.fromString = fromString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.booleanSelector = exports.SelectorType = void 0;\nvar SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType = exports.SelectorType || (exports.SelectorType = {}));\nconst booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\nexports.booleanSelector = booleanSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./booleanSelector\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMasterProfileName = exports.DEFAULT_PROFILE = exports.ENV_PROFILE = void 0;\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nexports.DEFAULT_PROFILE = \"default\";\nconst getMasterProfileName = (init) => init.profile || process.env[exports.ENV_PROFILE] || exports.DEFAULT_PROFILE;\nexports.getMasterProfileName = getMasterProfileName;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./get-master-profile-name\"), exports);\ntslib_1.__exportStar(require(\"./parse-known-profiles\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseKnownFiles = void 0;\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst parseKnownFiles = async (init) => {\n    const { loadedConfig = shared_ini_file_loader_1.loadSharedConfigFiles(init) } = init;\n    const parsedFiles = await loadedConfig;\n    return {\n        ...parsedFiles.configFile,\n        ...parsedFiles.credentialsFile,\n    };\n};\nexports.parseKnownFiles = parseKnownFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IMDS_REGION_PATH = exports.DEFAULTS_MODE_OPTIONS = exports.ENV_IMDS_DISABLED = exports.AWS_DEFAULT_REGION_ENV = exports.AWS_REGION_ENV = exports.AWS_EXECUTION_ENV = void 0;\nexports.AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexports.AWS_REGION_ENV = \"AWS_REGION\";\nexports.AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexports.DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexports.IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_DEFAULTS_MODE_CONFIG_OPTIONS = void 0;\nconst AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexports.NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./resolveDefaultsModeConfig\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveDefaultsModeConfig = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst constants_1 = require(\"./constants\");\nconst defaultsModeConfig_1 = require(\"./defaultsModeConfig\");\nconst resolveDefaultsModeConfig = ({ region = node_config_provider_1.loadConfig(config_resolver_1.NODE_REGION_CONFIG_OPTIONS), defaultsMode = node_config_provider_1.loadConfig(defaultsModeConfig_1.NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => property_provider_1.memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode === null || mode === void 0 ? void 0 : mode.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode === null || mode === void 0 ? void 0 : mode.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${constants_1.DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nexports.resolveDefaultsModeConfig = resolveDefaultsModeConfig;\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    var _a;\n    if (process.env[constants_1.AWS_EXECUTION_ENV] && (process.env[constants_1.AWS_REGION_ENV] || process.env[constants_1.AWS_DEFAULT_REGION_ENV])) {\n        return (_a = process.env[constants_1.AWS_REGION_ENV]) !== null && _a !== void 0 ? _a : process.env[constants_1.AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[constants_1.ENV_IMDS_DISABLED]) {\n        try {\n            const endpoint = await credential_provider_imds_1.getInstanceMetadataEndpoint();\n            return (await credential_provider_imds_1.httpRequest({ ...endpoint, path: constants_1.IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toHex = exports.fromHex = void 0;\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.substr(i, 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexports.fromHex = fromHex;\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\nexports.toHex = toHex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUriPath = void 0;\nconst escape_uri_1 = require(\"./escape-uri\");\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escape_uri_1.escapeUri).join(\"/\");\nexports.escapeUriPath = escapeUriPath;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUri = void 0;\nconst escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nexports.escapeUri = escapeUri;\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./escape-uri\"), exports);\ntslib_1.__exportStar(require(\"./escape-uri-path\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultUserAgent = exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst os_1 = require(\"os\");\nconst process_1 = require(\"process\");\nconst is_crt_available_1 = require(\"./is-crt-available\");\nexports.UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexports.UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nconst defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [`os/${os_1.platform()}`, os_1.release()],\n        [\"lang/js\"],\n        [\"md/nodejs\", `${process_1.versions.node}`],\n    ];\n    const crtAvailable = is_crt_available_1.isCrtAvailable();\n    if (crtAvailable) {\n        sections.push(crtAvailable);\n    }\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (process_1.env.AWS_EXECUTION_ENV) {\n        sections.push([`exec-env/${process_1.env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = node_config_provider_1.loadConfig({\n        environmentVariableSelector: (env) => env[exports.UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[exports.UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\nexports.defaultUserAgent = defaultUserAgent;\n",null,"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst fromUtf8 = (input) => {\n    const buf = util_buffer_from_1.fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\nexports.fromUtf8 = fromUtf8;\nconst toUtf8 = (input) => util_buffer_from_1.fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\nexports.toUtf8 = toUtf8;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWaiter = void 0;\nconst poller_1 = require(\"./poller\");\nconst utils_1 = require(\"./utils\");\nconst waiter_1 = require(\"./waiter\");\nconst abortTimeout = async (abortSignal) => {\n    return new Promise((resolve) => {\n        abortSignal.onabort = () => resolve({ state: waiter_1.WaiterState.ABORTED });\n    });\n};\nconst createWaiter = async (options, input, acceptorChecks) => {\n    const params = {\n        ...waiter_1.waiterServiceDefaults,\n        ...options,\n    };\n    utils_1.validateWaiterOptions(params);\n    const exitConditions = [poller_1.runPolling(params, input, acceptorChecks)];\n    if (options.abortController) {\n        exitConditions.push(abortTimeout(options.abortController.signal));\n    }\n    if (options.abortSignal) {\n        exitConditions.push(abortTimeout(options.abortSignal));\n    }\n    return Promise.race(exitConditions);\n};\nexports.createWaiter = createWaiter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./createWaiter\"), exports);\ntslib_1.__exportStar(require(\"./waiter\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runPolling = void 0;\nconst sleep_1 = require(\"./utils/sleep\");\nconst waiter_1 = require(\"./waiter\");\nconst exponentialBackoffWithJitter = (minDelay, maxDelay, attemptCeiling, attempt) => {\n    if (attempt > attemptCeiling)\n        return maxDelay;\n    const delay = minDelay * 2 ** (attempt - 1);\n    return randomInRange(minDelay, delay);\n};\nconst randomInRange = (min, max) => min + Math.random() * (max - min);\nconst runPolling = async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n    var _a;\n    const { state } = await acceptorChecks(client, input);\n    if (state !== waiter_1.WaiterState.RETRY) {\n        return { state };\n    }\n    let currentAttempt = 1;\n    const waitUntil = Date.now() + maxWaitTime * 1000;\n    const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n    while (true) {\n        if (((_a = abortController === null || abortController === void 0 ? void 0 : abortController.signal) === null || _a === void 0 ? void 0 : _a.aborted) || (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted)) {\n            return { state: waiter_1.WaiterState.ABORTED };\n        }\n        const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n        if (Date.now() + delay * 1000 > waitUntil) {\n            return { state: waiter_1.WaiterState.TIMEOUT };\n        }\n        await sleep_1.sleep(delay);\n        const { state } = await acceptorChecks(client, input);\n        if (state !== waiter_1.WaiterState.RETRY) {\n            return { state };\n        }\n        currentAttempt += 1;\n    }\n};\nexports.runPolling = runPolling;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\ntslib_1.__exportStar(require(\"./sleep\"), exports);\ntslib_1.__exportStar(require(\"./validate\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sleep = void 0;\nconst sleep = (seconds) => {\n    return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\nexports.sleep = sleep;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateWaiterOptions = void 0;\nconst validateWaiterOptions = (options) => {\n    if (options.maxWaitTime < 1) {\n        throw new Error(`WaiterConfiguration.maxWaitTime must be greater than 0`);\n    }\n    else if (options.minDelay < 1) {\n        throw new Error(`WaiterConfiguration.minDelay must be greater than 0`);\n    }\n    else if (options.maxDelay < 1) {\n        throw new Error(`WaiterConfiguration.maxDelay must be greater than 0`);\n    }\n    else if (options.maxWaitTime <= options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxWaitTime [${options.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n    else if (options.maxDelay < options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxDelay [${options.maxDelay}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n};\nexports.validateWaiterOptions = validateWaiterOptions;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkExceptions = exports.WaiterState = exports.waiterServiceDefaults = void 0;\nexports.waiterServiceDefaults = {\n    minDelay: 2,\n    maxDelay: 120,\n};\nvar WaiterState;\n(function (WaiterState) {\n    WaiterState[\"ABORTED\"] = \"ABORTED\";\n    WaiterState[\"FAILURE\"] = \"FAILURE\";\n    WaiterState[\"SUCCESS\"] = \"SUCCESS\";\n    WaiterState[\"RETRY\"] = \"RETRY\";\n    WaiterState[\"TIMEOUT\"] = \"TIMEOUT\";\n})(WaiterState = exports.WaiterState || (exports.WaiterState = {}));\nconst checkExceptions = (result) => {\n    if (result.state === WaiterState.ABORTED) {\n        const abortError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Request was aborted\",\n        })}`);\n        abortError.name = \"AbortError\";\n        throw abortError;\n    }\n    else if (result.state === WaiterState.TIMEOUT) {\n        const timeoutError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Waiter has timed out\",\n        })}`);\n        timeoutError.name = \"TimeoutError\";\n        throw timeoutError;\n    }\n    else if (result.state !== WaiterState.SUCCESS) {\n        throw new Error(`${JSON.stringify({ result })}`);\n    }\n    return result;\n};\nexports.checkExceptions = checkExceptions;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint(codePoint);\n}\nexports.default = decodeCodePoint;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nexports.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nexports.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n","'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n","'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options, parentTagName) {\n  const jObj = {};\n\n  // when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    const tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (let tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      const result = convertToJson(node.child[tagName][0], options, tagName);\n      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst x2j = require('./xmlstr2xmlnode');\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n","'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = require('./nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\n/**\n * Check if a tag name should be treated as array\n *\n * @param tagName the node tagname\n * @param arrayMode the array mode option\n * @param parentTagName the parent tag name\n * @returns {boolean} true if node should be parsed as array\n */\nexports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {\n  if (arrayMode === false) {\n    return false;\n  } else if (arrayMode instanceof RegExp) {\n    return arrayMode.test(tagName);\n  } else if (typeof arrayMode === 'function') {\n    return !!arrayMode(tagName, parentTagName);\n  }\n\n  return arrayMode === \"strict\";\n}\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n};\n\nconst props = ['allowBooleanAttributes'];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n\n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"There is an unnecessary space between tag name and backward slash '</ ..'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, i));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg) {\n              return getErrorObject('InvalidTag', \"Closing tag '\"+otg+\"' is expected inplace of '\"+tagName+\"'.\", getLineNumberForPosition(xmlData, i));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else {\n            tags.push(tagName);\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  } else if (tags.length > 0) {\n    return getErrorObject('InvalidXml', \"Invalid '\"+JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '')+\"' found.\", 1);\n  }\n\n  return true;\n};\n\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  var start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(attrStr, matches[i][0]))\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  var lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return lines.length;\n}\n\n//this function returns the position of the last character of match within attrStr\nfunction getPositionFromMatch(attrStr, match) {\n  return attrStr.indexOf(match) + match.length;\n}\n","'use strict';\n\nmodule.exports = function(tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n  this.attrsMap = {}; //attributes map\n  this.val = val; //text only\n  this.addChild = function(child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst xmlNode = require('./xmlNode');\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false, //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true, //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  tagValueProcessor: function(a, tagName) {\n    return a;\n  },\n  attrValueProcessor: function(a, attrName) {\n    return a;\n  },\n  stopNodes: []\n  //decodeStrict: false,\n};\n\nexports.defaultOptions = defaultOptions;\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'ignoreNameSpace',\n  'allowBooleanAttributes',\n  'parseNodeValue',\n  'parseAttributeValue',\n  'arrayMode',\n  'trimValues',\n  'cdataTagName',\n  'cdataPositionChar',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'parseTrueNumberOnly',\n  'stopNodes'\n];\nexports.props = props;\n\n/**\n * Trim -> valueProcessor -> parse value\n * @param {string} tagName\n * @param {string} val\n * @param {object} options\n */\nfunction processTagValue(tagName, val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n    val = options.tagValueProcessor(val, tagName);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    let parsed;\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n        val = val.replace(/\\.?0+$/, \"\");\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = resolveNameSpace(matches[i][1], options);\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(\n            matches[i][4],\n            options.parseAttributeValue,\n            options.parseTrueNumberOnly\n          );\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (options.attrNodeName) {\n      const attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst getTraversalObj = function(xmlData, options) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n  options = buildOptions(options, defaultOptions, props);\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n\n//function match(xmlData){\n  for(let i=0; i< xmlData.length; i++){\n    const ch = xmlData[i];\n    if(ch === '<'){\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        /* if (currentNode.parent) {\n          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);\n        } */\n        if(currentNode){\n          if(currentNode.val){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);\n          }else{\n            currentNode.val = processTagValue(tagName, textData , options);\n          }\n        }\n\n        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n          currentNode.child = []\n          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}\n          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)\n        }\n        currentNode = currentNode.parent;\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        i = findClosingIndex(xmlData, \"?>\", i, \"Pi Tag is not closed.\")\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        i = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"DOCTYPE is not closed.\")\n        const tagExp = xmlData.substring(i, closeIndex);\n        if(tagExp.indexOf(\"[\") >= 0){\n          i = xmlData.indexOf(\"]>\", i) + 1;\n        }else{\n          i = closeIndex;\n        }\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        //considerations\n        //1. CDATA will always have parent node\n        //2. A tag with CDATA is not a leaf node so it's value would be string type.\n        if(textData){\n          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);\n          textData = \"\";\n        }\n\n        if (options.cdataTagName) {\n          //add cdata node\n          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);\n          currentNode.addChild(childNode);\n          //for backtracking\n          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;\n          //add rest value to parent node\n          if (tagExp) {\n            childNode.val = tagExp;\n          }\n        } else {\n          currentNode.val = (currentNode.val || '') + (tagExp || '');\n        }\n\n        i = closeIndex + 2;\n      }else {//Opening tag\n        const result = closingIndexForOpeningTag(xmlData, i+1)\n        let tagExp = result.data;\n        const closeIndex = result.index;\n        const separatorIndex = tagExp.indexOf(\" \");\n        let tagName = tagExp;\n        let shouldBuildAttributesMap = true;\n        if(separatorIndex !== -1){\n          tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n          tagExp = tagExp.substr(separatorIndex + 1);\n        }\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n            shouldBuildAttributesMap = tagName !== result.data.substr(colonIndex + 1);\n          }\n        }\n\n        //save text to parent node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);\n          }\n        }\n\n        if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){//selfClosing tag\n\n          if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n            tagName = tagName.substr(0, tagName.length - 1);\n            tagExp = tagName;\n          }else{\n            tagExp = tagExp.substr(0, tagExp.length - 1);\n          }\n\n          const childNode = new xmlNode(tagName, currentNode, '');\n          if(tagName !== tagExp){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n        }else{//opening tag\n\n          const childNode = new xmlNode( tagName, currentNode );\n          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {\n            childNode.startIndex=closeIndex;\n          }\n          if(tagName !== tagExp && shouldBuildAttributesMap){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n          currentNode = childNode;\n        }\n        textData = \"\";\n        i = closeIndex;\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj;\n}\n\nfunction closingIndexForOpeningTag(data, i){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < data.length; index++) {\n    let ch = data[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === '>') {\n        return {\n          data: tagExp,\n          index: index\n        }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;",null,"module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"assert\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"buffer\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"child_process\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"crypto\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"events\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"fs\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"http\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"http2\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"https\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"net\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"os\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"path\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"process\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"stream\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"tls\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"url\");","module.exports = __WEBPACK_EXTERNAL_createRequire(import.meta.url)(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = new URL('.', import.meta.url).pathname.slice(import.meta.url.match(/^file:\\/\\/\\/\\w:/) ? 1 : 0, -1) + \"/\";","import * as core from '@actions/core';\nimport { CloudFormationClient, DescribeStacksCommand } from '@aws-sdk/client-cloudformation';\nasync function run() {\n    try {\n        const client = new CloudFormationClient({});\n        const StackName = core.getInput('stack-name', { required: true });\n        const resp = await client.send(new DescribeStacksCommand({\n            StackName\n        }));\n        if (resp.Stacks === undefined) {\n            core.setFailed('Stack was not found.');\n            return;\n        }\n        if (resp.Stacks !== undefined && resp.Stacks.length > 1) {\n            core.setFailed('Multiple Stacks matched.');\n            return;\n        }\n        const status = resp.Stacks[0].StackStatus;\n        core.setOutput('status', status);\n    }\n    catch (error) {\n        if (error instanceof Error)\n            core.setFailed(error.message);\n    }\n}\nrun();\n"],"names":[],"sourceRoot":""}