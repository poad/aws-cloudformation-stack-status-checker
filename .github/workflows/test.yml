name: 'build-test'

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request_target:
    paths-ignore:
      - '**.md'
  workflow_dispatch:

env:
  AWS_REGION: us-west-2

permissions:
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        check-latest: true
    - name: setup
      run: yarn global add prettier rimraf
    - name: build
      run: yarn install && yarn build && yarn format && yarn lint && yarn package && yarn test

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_OIDC_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: ${{ env.AWS_REGION }}
    - uses: actions/checkout@v3
    - uses: ./
      id: stack-status
      with:
        stack-name: CDKToolkit

    - name: 'test'
      run: echo ${{ steps.stack-status.outputs.status }}

  test:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:

    - name: generate timestamp
      id: gen-timestamp
      run: echo "::set-output name=timestamp::$(date +%Y%m%d-%H%M%S)"
    - uses: actions/checkout@v3

    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        check-latest: true
        cache: 'yarn'
        cache-dependency-path: test/yarn.lock

    - name: Install AWS CDK and yarn
      run: |
        npm -g i npm
        npm -g i yarn
        npm -g i aws-cdk

    - name: create stack
      env:
        TIMESTAMP: ${{ steps.gen-timestamp.outputs.timestamp }}
      working-directory: test
      run: cdk deploy -c timestamp=${TIMESTAMP}

    - uses: ./
      id: stack-status
      env:
        TIMESTAMP: ${{ steps.gen-timestamp.outputs.timestamp }}
      with:
        stack-name: aws-cloudformation-stack-status-checker-test-${TIMESTAMP}

    - name: 'test'
      run: echo ${{ steps.stack-status.outputs.status }}
